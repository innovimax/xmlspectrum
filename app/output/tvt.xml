<!DOCTYPE html><html xmlns="http://www.w3.org/1999/xhtml"><head><title>XMLSpectrum output</title><style type="text/css">
@import url(http://fonts.googleapis.com/css?family=Source+Code+Pro);
p.spectrum, pre.spectrum {

    margin:0px;
    font-family:'Source Code Pro', Monaco, Consolas, 'Andale Mono', 'DejaVu Sans Mono', monospace;
    font-size: 0.8em;
    white-space: pre-wrap;
    display: block;
    border: none thin;
    border-color: #405075;
    background-color:#002b36;
    padding: 2px;
    margin-bottom:5px;

}

div.spectrum-toc {

    font-family:'Source Code Pro', Monaco, Consolas, 'Andale Mono', 'DejaVu Sans Mono', monospace;
    font-size: 0.8em;
    display: block;
    border: none thin;
    border-color: #405075;
    background-color:#002b36;
    padding: 2px;

}

ul.base1, ul.spectrum-toc {
color:#93a1a1;
}

.spectrum span {
    white-space: pre-wrap;
}

span.ww {background-color: #073642; } span.base01, span.eq-equ, span.z, span.sc, span.scx, span.ec, span.es, span.ez, span.atneq {color: #586e75; } span.base03, span.ww:not(:hover), span.txt:not(:hover), span.cm:not(:hover), span.pi:not(:hover) {background-color: #002b36; } span.base0, span.txt, span.cd {color: #839496; } span.base1, span.literal {color: #93a1a1; } span.yellow, span.op, span.type-op, span.if, span.higher, span.step, span.whitespace, span.quantifier {color: #b58900; } span.orange, span.function, span.pname {color: #cb4b16; } span.red, span.fname, span.tname {color: #dc322f; } span.magenta, span.vname, span.variable, span.external {color: #d33682; } span.violet, span.qname, span.type-name, span.unclosed, span.en, span.cl, span.href, span.tcall {color: #6c71c4; } span.blue, span.enxsl, span.clxsl, span.enx, span.filter, span.parenthesis, span.node {color: #268bd2; } span.cyan, span.atn, span.numeric, span.pi, span.dt, span.axis, span.context, span.bracedq {color: #2aa198; } span.green, span.cm, span.comment, span.av, span.type, span.node-type {color: #859900; }

a.solar {
    text-decoration:none;
}
</style></head><body><div><pre class="spectrum"><span class="z">&lt;!--</span><span class="cm"> Copyright Phil Fearon - Qutoric limited 2012 - philipfearon@qutoric.com </span><span class="z">--&gt;</span><span class="txt">&#xD;
</span><span class="es">&lt;</span><span class="enxsl">xsl:transform</span><span class="z"> </span><span class="atn">xmlns:xsl</span><span class="atneq">=</span><span class="z">"</span><span class="txt">http://www.w3.org/1999/XSL/Transform</span><span class="z">"</span><span class="z">&#xD;
               </span><span class="atn">xmlns:xs</span><span class="atneq">=</span><span class="z">"</span><span class="txt">http://www.w3.org/2001/XMLSchema</span><span class="z">"</span><span class="z">&#xD;
               </span><span class="atn">xmlns:loc</span><span class="atneq">=</span><span class="z">"</span><span class="txt">com.qutoric.sketchpath.functions</span><span class="z">"</span><span class="z">&#xD;
               </span><span class="atn">exclude-result-prefixes</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs loc</span><span class="z">"</span><span class="z"> </span><span class="atn">version</span><span class="atneq">=</span><span class="z">"</span><span class="txt">2.0</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">ops</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">, / = &amp;lt; &amp;gt; + - * ? | != &amp;lt;= &amp;gt;= &amp;lt;&amp;lt; &amp;gt;&amp;gt; //</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">aOps</span><span class="z">"</span><span class="z">&#xD;
               </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">or and eq ne lt le gt ge is to div idiv mod union intersect except in return satisfies then else</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">hOps</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">for some every</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">nodes</span><span class="z">"</span><span class="z">&#xD;
               </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">attribute comment document-node element node processing-instruction text</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">types</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">empty item node schema-attribute schema-element type</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">ambiguousOps</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">tokenize</span><span class="parenthesis">(</span><span class="variable">$aOps</span><span class="op">,</span><span class="op">'</span><span class="literal">\s+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">simpleOps</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">tokenize</span><span class="parenthesis">(</span><span class="variable">$ops</span><span class="op">,</span><span class="op">'</span><span class="literal">\s+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">nodeTests</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">tokenize</span><span class="parenthesis">(</span><span class="variable">$nodes</span><span class="op">,</span><span class="op">'</span><span class="literal">\s+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">typeTests</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">tokenize</span><span class="parenthesis">(</span><span class="variable">$types</span><span class="op">,</span><span class="op">'</span><span class="literal">\s+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">higherOps</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">tokenize</span><span class="parenthesis">(</span><span class="variable">$hOps</span><span class="op">,</span><span class="op">'</span><span class="literal">\s+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">bgColor</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">black</span><span class="op">'</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:showXPath</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">chunk</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">chars</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:stringToCharSequence</span><span class="parenthesis">(</span><span class="variable">$chunk</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">blocks</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">loc:createBlocks</span><span class="parenthesis">(</span><span class="variable">$chars</span><span class="op">,</span><span class="whitespace"> </span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">0</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pbPairs</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="z">&#xD;
                </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">loc:createPairs</span><span class="parenthesis">(</span><span class="variable">$blocks</span><span class="filter">[</span><span class="function">name</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">block</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">[</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">]</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="parenthesis">)</span><span class="filter">]</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">omitPairs</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="parenthesis">(</span><span class="variable">$blocks</span><span class="filter">[</span><span class="function">name</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">literal</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">comment</span><span class="op">'</span><span class="parenthesis">)</span><span class="filter">]</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">tokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:getTokens</span><span class="parenthesis">(</span><span class="variable">$chunk</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$omitPairs</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$pbPairs</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:call-template</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">plain</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:with-param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">para</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$tokens</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:call-template</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
&#xD;
 </span><span class="z">&lt;!--</span><span class="cm"> //////////////////////////////////////////////////////////////////////////////////////////////// </span><span class="z">--&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="z">&lt;!--</span><span class="cm"> &#xD;
  Sample output:&#xD;
 &lt;block position="3" type="["/&gt;&#xD;
 &lt;literal type="'" start="54" end="61"/&gt;&#xD;
 &lt;comment start="65" end="69"/&gt;&#xD;
 &lt;comment start="76"/&gt; // if not closed&#xD;
 </span><span class="z">--&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:pad</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">padStringIn</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string?</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">fixedWidth</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">padString</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">replace</span><span class="parenthesis">(</span><span class="variable">$padStringIn</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">\n</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">\\n</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">stringLength</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">string-length</span><span class="parenthesis">(</span><span class="variable">$padString</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">padChar</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$fixedWidth</span><span class="whitespace"> </span><span class="op">gt</span><span class="whitespace"> </span><span class="numeric">20</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">.</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"> </span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">padCount</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$fixedWidth</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="variable">$stringLength</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$padCount</span><span class="whitespace"> </span><span class="op">ge</span><span class="whitespace"> </span><span class="numeric">0</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z">&#xD;
    </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">concat</span><span class="parenthesis">(</span><span class="variable">$padString</span><span class="op">,</span><span class="whitespace"> </span><span class="function">string-join</span><span class="parenthesis">(</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$i</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="variable">$padCount</span><span class="whitespace"> &#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$padChar</span><span class="op">,</span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$padCount</span><span class="whitespace"> </span><span class="op">lt</span><span class="whitespace"> </span><span class="numeric">0</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z">&#xD;
    </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">concat</span><span class="parenthesis">(</span><span class="variable">$padString</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">&amp;#10;</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal"> </span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="function">string-join</span><span class="parenthesis">(</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$i</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="variable">$fixedWidth</span><span class="whitespace"> &#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$padChar</span><span class="op">,</span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
 &#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:template</span><span class="z"> </span><span class="atn">match</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="qname">loc:p</span><span class="filter">[</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">dummy</span><span class="op">'</span><span class="filter">]</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">test-all</span><span class="z">"</span><span class="z">&#xD;
                      </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="comment">(: comments may be nested&#xD;
                                 (: phil's tokenizer must&#xD;
                                    handle quotes also :)&#xD;
                                  like this :)</span><span class="open"></span><span class="whitespace">&#xD;
                              </span><span class="context">.</span><span class="step">/</span><span class="qname">loc:history</span><span class="step">/</span><span class="qname">loc:*</span><span class="step">/</span><span class="whitespace">&#xD;
                              </span><span class="axis">following-sibling::</span><span class="qname">loc:books</span><span class="whitespace">&#xD;
                              </span><span class="filter">[</span><span class="axis">@</span><span class="qname">id</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">a</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">b</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">c</span><span class="op">'</span><span class="parenthesis">)</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$test-all</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:template</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:template</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">plain</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">para</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">total</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">count</span><span class="parenthesis">(</span><span class="variable">$para</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:for-each</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="variable">$total</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="context">.</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:for-each</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$para</span><span class="filter">[</span><span class="variable">$index</span><span class="filter">]</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="en">span</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">variable</span><span class="op">'</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">lt</span><span class="whitespace"> </span><span class="variable">$total</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$para</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="filter">]</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">whitespace</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$para</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="filter">]</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">in</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">id</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">concat</span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">rng-</span><span class="op">'</span><span class="op">,</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">className</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">exists</span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">type</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z">&#xD;
         </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">literal</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace">&#xD;
                    </span><span class="function">matches</span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">,</span><span class="op">'</span><span class="literal">select[\n\p{Zs}]*=[\n\p{Zs}]*[&amp;quot;&amp;apos;&amp;apos;]</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                 </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                 </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">select</span><span class="op">'</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="axis">@</span><span class="qname">type</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
       </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">p</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$para</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z">&#xD;
         </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$p</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">literal</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace">&#xD;
                    </span><span class="function">matches</span><span class="parenthesis">(</span><span class="variable">$p</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">,</span><span class="op">'</span><span class="literal">name[\n\p{Zs}]*=[\n\p{Zs}]*[&amp;quot;&amp;apos;&amp;apos;]</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                 </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                 </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">external</span><span class="op">'</span><span class="open"></span><span class="whitespace">&#xD;
                 </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">qname</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
       </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">class</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$className</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$className</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">external</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">id</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">concat</span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">ext-</span><span class="op">'</span><span class="op">,</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">[</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">function</span><span class="op">'</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="function">not</span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">pair-end</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">style</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">color: pink;</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">pair-end</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pair-end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">pair-end</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">not</span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> &#xD;
                   </span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">function</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">filter</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">parenthesis</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">variable</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">node</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
                      </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">not</span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">]</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                    </span><span class="op">or</span><span class="whitespace">&#xD;
                   </span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">*</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$para</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="filter">]</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">axis</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">select</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">quick</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">literal</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">comment</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:analyze-string</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">value</span><span class="z">"</span><span class="z"> </span><span class="atn">regex</span><span class="atneq">=</span><span class="z">"</span><span class="txt">\n</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:matching-substring</span><span class="scx">&gt;</span><span class="txt">&#xD;
         </span><span class="es">&lt;</span><span class="en">br</span><span class="sc">/&gt;</span><span class="txt">&#xD;
        </span><span class="ez">&lt;/</span><span class="clxsl">xsl:matching-substring</span><span class="ec">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:non-matching-substring</span><span class="scx">&gt;</span><span class="txt">&#xD;
         </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="context">.</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
        </span><span class="ez">&lt;/</span><span class="clxsl">xsl:non-matching-substring</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="ez">&lt;/</span><span class="clxsl">xsl:analyze-string</span><span class="ec">&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">value</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
    </span><span class="ez">&lt;/</span><span class="cl">span</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:for-each</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:for-each</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:template</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:template</span><span class="z"> </span><span class="atn">match</span><span class="atneq">=</span><span class="z">"</span><span class="qname">token</span><span class="z">"</span><span class="z"> </span><span class="atn">mode</span><span class="atneq">=</span><span class="z">"</span><span class="txt">dev</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="en">p</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="cl">p</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:template</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:stringToCharSequence</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="z">&lt;!--</span><span class="cm"> new comment </span><span class="z">--&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">string</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$i</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="function">string-length</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">return</span><span class="whitespace"> </span><span class="function">substring</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$i</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:createPairs</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">brackets</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">nested</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:call-template</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">getNesting</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:with-param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">positions</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$brackets</span><span class="z">"</span><span class="z"> </span><span class="atn">tunnel</span><span class="atneq">=</span><span class="z">"</span><span class="txt">yes</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:with-param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="numeric">0</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:with-param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="numeric">1</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:call-template</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="z">&lt;!--</span><span class="cm">  pair up start and end elements </span><span class="z">--&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">ends</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$nested</span><span class="filter">[</span><span class="axis">@</span><span class="qname">end</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:for-each</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$nested</span><span class="filter">[</span><span class="axis">@</span><span class="qname">start</span><span class="filter">]</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">start</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="axis">@</span><span class="qname">level</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pair</span><span class="z">"</span><span class="z"> &#xD;
                 </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="parenthesis">(</span><span class="variable">$ends</span><span class="filter">[</span><span class="axis">@</span><span class="qname">level</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$level</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                          </span><span class="filter">[</span><span class="function">number</span><span class="parenthesis">(</span><span class="axis">@</span><span class="qname">end</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="variable">$start</span><span class="filter">]</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="z">"</span><span class="z">&#xD;
    </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="open"></span><span class="function">concat</span><span class="parenthesis">(</span><span class="function">name</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">'</span><span class="literal">}}</span><span class="op">'</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$level</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pair</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pair</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:for-each</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:template</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">getNesting</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">positions</span><span class="z">"</span><span class="z"> </span><span class="atn">tunnel</span><span class="atneq">=</span><span class="z">"</span><span class="txt">yes</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pos</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$positions</span><span class="filter">[</span><span class="variable">$index</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isOpen</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$pos</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">[</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">(:</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isBracket</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$pos</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isComment</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$pos</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">(:</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">blockType</span><span class="z">"</span><span class="z">&#xD;
                </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="parenthesis">(</span><span class="variable">$isBracket</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">bracket</span><span class="op">'</span><span class="open"></span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="parenthesis">(</span><span class="variable">$isComment</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">comment</span><span class="op">'</span><span class="open"></span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">predicate</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">newLevel</span><span class="z">"</span><span class="z">&#xD;
                </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="if">if</span><span class="parenthesis">(</span><span class="variable">$isOpen</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$level</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$level</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$pos</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$isOpen</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$blockType</span><span class="op">}</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pos</span><span class="step">/</span><span class="axis">@</span><span class="qname">position</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$newLevel</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$blockType</span><span class="op">}</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pos</span><span class="step">/</span><span class="axis">@</span><span class="qname">position</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$level</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="function">count</span><span class="parenthesis">(</span><span class="variable">$positions</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:call-template</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">getNesting</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:with-param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$newLevel</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:with-param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:call-template</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:template</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:createBlocks</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">chars</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">skip</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">awaiting</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">charCount</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">count</span><span class="parenthesis">(</span><span class="variable">$chars</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">char</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$chars</span><span class="filter">[</span><span class="variable">$index</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">nChar</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$chars</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pChar</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$chars</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">newLevel</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="whitespace">&#xD;
                           </span><span class="if">if</span><span class="parenthesis">(</span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$nChar</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$level</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace">&#xD;
                           </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$pChar</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:</span><span class="op">'</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$level</span><span class="whitespace"> </span><span class="op">gt</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$level</span><span class="whitespace"> </span><span class="numeric">-1</span><span class="whitespace">&#xD;
                           </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$level</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$level</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">nowAwaiting</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="op">=</span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z">&#xD;
                   </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="parenthesis">(</span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">&amp;apos;&amp;apos;</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">&amp;quot;</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                            </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$char</span><span class="whitespace"> &#xD;
                           </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$nChar</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> &#xD;
                            </span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="open"></span><span class="whitespace"> &#xD;
                           </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$awaiting</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$pChar</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:</span><span class="op">'</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$level</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">0</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$awaiting</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">nowSkip</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$skip</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$nChar</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$char</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">true</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$nowAwaiting</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$char</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">[</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">]</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="en">block</span><span class="z"> </span><span class="atn">position</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$index</span><span class="op">}</span><span class="z">"</span><span class="z"> </span><span class="atn">type</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$char</span><span class="op">}</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isFound</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="z">&#xD;
   </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">not</span><span class="parenthesis">(</span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$nowAwaiting</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="function">not</span><span class="parenthesis">(</span><span class="variable">$skip</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$nowSkip</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">newStart</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$isFound</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">ne</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$isFound</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">comment</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">literal</span><span class="op">'</span><span class="op">}</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">ne</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$char</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$index</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="variable">$charCount</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">ne</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="function">not</span><span class="parenthesis">(</span><span class="variable">$isFound</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">comment</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">literal</span><span class="op">'</span><span class="op">}</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$awaiting</span><span class="whitespace"> </span><span class="op">ne</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:)</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$awaiting</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z">&#xD;
       </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:createBlocks</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                                 </span><span class="variable">$chars</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$nowSkip</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$nowAwaiting</span><span class="op">,</span><span class="whitespace">&#xD;
                                 </span><span class="variable">$newStart</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$newLevel</span><span class="whitespace">&#xD;
                                </span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="z">&lt;!--</span><span class="cm"> top-level call - marks up tokens with their type </span><span class="z">--&gt;</span><span class="txt">&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:getTokens</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">chunk</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">omitPairs</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pbPairs</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">tokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:createTokens</span><span class="parenthesis">(</span><span class="variable">$chunk</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$omitPairs</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:rationalizeTokens</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">,</span><span class="whitespace"> </span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$pbPairs</span><span class="op">,</span><span class="whitespace"> </span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:rationalizeTokens</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">tokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">prevIsClosed</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pbPairs</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">typeExpected</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">quantifierExpected</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="z">&lt;!--</span><span class="cm"> when closed, a probable operator is a QName instead </span><span class="z">--&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">token</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$tokens</span><span class="filter">[</span><span class="variable">$index</span><span class="filter">]</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()?</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isQuantifier</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$quantifierExpected</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">?</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">*</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">currentIsClosed</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="z">&#xD;
                </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$isQuantifier</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="function">not</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> &#xD;
                        </span><span class="parenthesis">(</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">]</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> &#xD;
                        </span><span class="parenthesis">(</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">literal</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">numeric</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">variable</span><span class="op">'</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">token</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">value</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">probableOp</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$prevIsClosed</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">op</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">not</span><span class="parenthesis">(</span><span class="variable">$isQuantifier</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="function">not</span><span class="parenthesis">(</span><span class="variable">$prevIsClosed</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">*</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="z">&lt;!--</span><span class="cm">&#xD;
        &lt;xsl:attribute name="type" select="'any'"/&gt;&#xD;
     </span><span class="z">--&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">function</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">if</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">node</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">[</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pair</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pbPairs</span><span class="filter">[</span><span class="axis">@</span><span class="qname">start</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$typeExpected</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">node</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">node-type</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">not</span><span class="parenthesis">(</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$pair</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pair</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">pair-end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pair</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">level</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$pair</span><span class="step">/</span><span class="axis">@</span><span class="qname">level</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$typeExpected</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">type-name</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$isQuantifier</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">quantifier</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">ignorable</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">whitespace</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">comment</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isNewClosed</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$ignorable</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$prevIsClosed</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">probableOp</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">not</span><span class="parenthesis">(</span><span class="variable">$prevIsClosed</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$currentIsClosed</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">newTypeExpected</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="z">&#xD;
                </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$ignorable</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$typeExpected</span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">type</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">type-op</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">le</span><span class="whitespace"> </span><span class="function">count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">qExpected</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$typeExpected</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$token</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z">&#xD;
                 </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:rationalizeTokens</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$isNewClosed</span><span class="op">,</span><span class="whitespace">&#xD;
                 </span><span class="variable">$pbPairs</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$newTypeExpected</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$qExpected</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="z">&lt;!--</span><span class="cm"> check tokens like </span><span class="z">--&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:createTokens</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">string</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">excludes</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">exclude</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()?</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$excludes</span><span class="filter">[</span><span class="variable">$index</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer?</span><span class="z">"</span><span class="z">&#xD;
                </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$exclude</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                           </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                           </span><span class="op">then</span><span class="whitespace">&#xD;
                           </span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="whitespace"> </span><span class="type-op">cast as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">exStart</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer?</span><span class="z">"</span><span class="z">&#xD;
                </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$exclude</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">part</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$exclude</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$string</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">exists</span><span class="parenthesis">(</span><span class="variable">$exStart</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$exStart</span><span class="whitespace"> </span><span class="op">ge</span><span class="whitespace"> </span><span class="variable">$start</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">substring</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$start</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$exStart</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="variable">$start</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">substring</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$start</span><span class="op">,</span><span class="whitespace"> </span><span class="function">string-length</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="variable">$start</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">string-length</span><span class="parenthesis">(</span><span class="variable">$part</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">gt</span><span class="whitespace"> </span><span class="numeric">0</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">tokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:rawTokens</span><span class="parenthesis">(</span><span class="variable">$part</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
   </span><span class="z">&lt;!--</span><span class="cm"> The XSLT that generates the tokens </span><span class="z">--&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:processTokens</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$start</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">not</span><span class="parenthesis">(</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$exclude</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">token</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">stringEnd</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                           </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">end</span><span class="whitespace">&#xD;
                           </span><span class="op">else</span><span class="whitespace"> </span><span class="function">string-length</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">value</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">substring</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="op">,</span><span class="whitespace">&#xD;
                                     </span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">start</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$stringEnd</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="variable">$exclude</span><span class="step">/</span><span class="axis">@</span><span class="qname">start</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:attribute</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">name</span><span class="parenthesis">(</span><span class="variable">$exclude</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="z">&lt;!--</span><span class="cm"> iterate 1 pos beyond end of excludes length </span><span class="z">--&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">not</span><span class="parenthesis">(</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$excludes</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
                </span><span class="op">and</span><span class="whitespace"> </span><span class="function">not</span><span class="parenthesis">(</span><span class="function">empty</span><span class="parenthesis">(</span><span class="variable">$end</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
                </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">le</span><span class="whitespace"> </span><span class="function">count</span><span class="parenthesis">(</span><span class="variable">$excludes</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:createTokens</span><span class="parenthesis">(</span><span class="variable">$string</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$excludes</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$end</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:processTokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">element()*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">tokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">token</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string?</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$tokens</span><span class="filter">[</span><span class="variable">$index</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$start</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="function">string-length</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:element</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">token</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">start</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$start</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">end</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$end</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">value</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isSimpleOps</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$simpleOps</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$isSimpleOps</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">/</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">//</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">step</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">op</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">isDoubleToken</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:boolean</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$isSimpleOps</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">splitToken</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">tokenize</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">[\n\p{Zs}]+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z">&#xD;
       </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">count</span><span class="parenthesis">(</span><span class="variable">$splitToken</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">ne</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
                </span><span class="op">then</span><span class="whitespace"> </span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
               </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$splitToken</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">instance</span><span class="op">'</span><span class="open"></span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$splitToken</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">of</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
                </span><span class="op">then</span><span class="whitespace"> </span><span class="function">true</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
               </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$splitToken</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">cast</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">castable</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">treat</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$splitToken</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">as</span><span class="op">'</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">then</span><span class="whitespace"> </span><span class="function">true</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="function">false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$isDoubleToken</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">type-op</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">functionType</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z">&#xD;
      </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$isSimpleOps</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$isDoubleToken</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="function">string-length</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="function">not</span><span class="parenthesis">(</span><span class="function">ends-with</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="op">,</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:text</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:variable</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">fnName</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">tokenize</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">[\n\p{Zs}]+|\(</span><span class="op">'</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$fnName</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">if</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:text</span><span class="scx">&gt;</span><span class="txt">if</span><span class="ez">&lt;/</span><span class="clxsl">xsl:text</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="higher">some</span><span class="whitespace"> </span><span class="variable">$n</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$nodeTests</span><span class="whitespace"> </span><span class="op">satisfies</span><span class="whitespace"> </span><span class="variable">$n</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$fnName</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:text</span><span class="scx">&gt;</span><span class="txt">node</span><span class="ez">&lt;/</span><span class="clxsl">xsl:text</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="higher">some</span><span class="whitespace"> </span><span class="variable">$x</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$typeTests</span><span class="whitespace"> </span><span class="op">satisfies</span><span class="whitespace"> </span><span class="variable">$x</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$fnName</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:text</span><span class="scx">&gt;</span><span class="txt">type</span><span class="ez">&lt;/</span><span class="clxsl">xsl:text</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="scx">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="enxsl">xsl:text</span><span class="scx">&gt;</span><span class="txt">function</span><span class="ez">&lt;/</span><span class="clxsl">xsl:text</span><span class="ec">&gt;</span><span class="txt">&#xD;
       </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
      </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:otherwise</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:variable</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$isSimpleOps</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$isDoubleToken</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$functionType</span><span class="whitespace"> </span><span class="op">ne</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$functionType</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">ends-with</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">::</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">@</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">axis</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">matches</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="op">,</span><span class="op">'</span><span class="literal">[\n\p{Zs}]+</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">whitespace</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">.</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">..</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">context</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">)</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">parenthesis</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">'</span><span class="literal">[</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal">]</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">filter</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">number</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="function">number</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">numeric</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$ambiguousOps</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">probableOp</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$higherOps</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">starts-with</span><span class="parenthesis">(</span><span class="function">loc:nextNonWhite</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$index</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">$</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">higher</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="variable">$token</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">if</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">loc:nextNonWhite</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$index</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">(</span><span class="op">'</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
      </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">if</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
     </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="function">starts-with</span><span class="parenthesis">(</span><span class="variable">$token</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">$</span><span class="op">'</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
     </span><span class="es">&lt;</span><span class="enxsl">xsl:attribute</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">type</span><span class="z">"</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="op">'</span><span class="literal">variable</span><span class="op">'</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
    </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:element</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:if</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">le</span><span class="whitespace"> </span><span class="function">count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:sequence</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">loc:processTokens</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$end</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:if</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:nextNonWhite</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string?</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">tokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">index</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:integer</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:choose</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:when</span><span class="z"> </span><span class="atn">test</span><span class="atneq">=</span><span class="z">"</span><span class="function">true</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="z">&lt;!--</span><span class="cm"> test="$index + 2 lt count($tokens)"&gt;  </span><span class="z">--&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z">&#xD;
         </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="open"></span><span class="if">if</span><span class="parenthesis">(</span><span class="function">replace</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="op">'</span><span class="literal">[\n\p{Zs}]+</span><span class="op">'</span><span class="open"></span><span class="op">,</span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="op">'</span><span class="literal"></span><span class="op">'</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                    </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace">&#xD;
                    </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="variable">$index</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="filter">]</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:when</span><span class="ec">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:otherwise</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:choose</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
 </span><span class="es">&lt;</span><span class="enxsl">xsl:function</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">loc:rawTokens</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string*</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:param</span><span class="z"> </span><span class="atn">name</span><span class="atneq">=</span><span class="z">"</span><span class="txt">chunk</span><span class="z">"</span><span class="z"> </span><span class="atn">as</span><span class="atneq">=</span><span class="z">"</span><span class="txt">xs:string</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
  </span><span class="es">&lt;</span><span class="enxsl">xsl:analyze-string</span><span class="z">&#xD;
   </span><span class="atn">regex</span><span class="atneq">=</span><span class="z">"</span><span class="txt">(((-)?\d+)(\.)?(\d+([eE][\+\-]?)?\d*)?)|(\?)|(instance[\n\p{{Zs}}]+of)|(cast[\n\p{{Zs}}]+as)|(castable[\n\p{{Zs}}]+as)|(treat[\n\p{{Zs}}]+as)|((\$[\n\p{{Zs}}]*)?[\i\*][\p{{L}}\p{{Nd}}\.\-]*(:[\p{{L}}\p{{Nd}}\.\-\*]*)?(::)?:?)(\()?|(\.\.)|((-)?\d?\.\d*)|-|([&amp;lt;&amp;gt;!]=)|(&amp;gt;&amp;gt;|&amp;lt;&amp;lt;)|(//)|([\n\p{{Zs}}]+)|(\C)</span><span class="z">"</span><span class="z">&#xD;
   </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="variable">$chunk</span><span class="z">"</span><span class="scx">&gt;</span><span class="txt">&#xD;
   </span><span class="es">&lt;</span><span class="enxsl">xsl:matching-substring</span><span class="scx">&gt;</span><span class="txt">&#xD;
    </span><span class="es">&lt;</span><span class="enxsl">xsl:value-of</span><span class="z"> </span><span class="atn">select</span><span class="atneq">=</span><span class="z">"</span><span class="function">string</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="z">"</span><span class="sc">/&gt;</span><span class="txt">&#xD;
   </span><span class="ez">&lt;/</span><span class="clxsl">xsl:matching-substring</span><span class="ec">&gt;</span><span class="txt">&#xD;
  </span><span class="ez">&lt;/</span><span class="clxsl">xsl:analyze-string</span><span class="ec">&gt;</span><span class="txt">&#xD;
 </span><span class="ez">&lt;/</span><span class="clxsl">xsl:function</span><span class="ec">&gt;</span><span class="txt">&#xD;
&#xD;
</span><span class="ez">&lt;/</span><span class="clxsl">xsl:transform</span><span class="ec">&gt;</span><span class="txt">&#xD;
</span></pre></div></body></html>