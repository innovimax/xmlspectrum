<globals xmlns="http://www.w3.org/1999/xhtml">
<file path="highlight-file.xsl">
<uri>file:/C:/Users/Philip/Documents/GitHub/xmlspectrum/app/xsl/highlight-file.xsl
</uri>
<doc-prefix>xsl</doc-prefix>
<templates>
<item>main</item>
<item>wrap-spans</item>
<item>wrap-spans-only</item>
<item>get-common-root</item>
<item>output-html-d
oc</item>
<item>get-result-spans</item>
</templates>
<functions>
<item>{internal}get-css-link</item>
<item>{internal}ancestor-path</item>
<item>{internal}path-to-uri</item>
<item>{internal}min-common-item</item><item>{internal}get-all-files</item><item>{internal}get-all-files</item><item>{internal}fix-uri</item><item>{interna
l}get-globals</item><item>{internal}file-from-uri</item></functions>
<variables>
<item>do-trim</item>
<item>do-link</item>
<item>indent-size</item>
<item>css-name</item>
<item>do-output-path</item>
</variables>
<params><item>sourcepath</item><item>indent</item><item>color-theme</item><item>css-path</item><item>auto-trim</item>
<item>link-names</item><item>output-path</item><item>format-mixed-content</item><item>font-name</item><item>output-method</item><item>css-inline</item><item>doc
ument-type</item><item>document-type-prefix</item><item>w3c-xpath-functions-uri</item></params>
</file>
<file path="xmlspectrum.xsl">
<uri>file:/C:/Users/Philip/Do
cuments/GitHub/xmlspectrum/app/xsl/xmlspectrum.xsl</uri>
<doc-prefix>xsl</doc-prefix>
<templates/>
<functions>
<item>{internal}render</item>
<item>{internal}get-them
e</item>
<item>{internal}get-css</item>
<item>{internal}get-css-font</item>
<item>{internal}inline-css-main</item>
<item>{internal}inline-css-toc</item>
<item>{inter
nal}get-inline-colors</item>
<item>{internal}getTagType</item>
<item>{internal}expected-offset</item>
<item>{internal}iterateTokens</item>
<item>{internal}getNewExp
andStack</item>
<item>{internal}getExpandTextValue</item>
<item>{internal}checkExpandSpans</item>
<item>{internal}getAttributes</item>
<item>{internal}get-av-class</item>
<item>{internal}unescape-p</item><item>{internal}processAVT</item><item>{internal}splitAttributeName</item><item>{com.qutoric.sketchpath.functions}showXPa
th</item><item>{internal}style-spans</item></functions>
<variables>
<item>ignore-mc</item>
<item>insert-newlines</item>
<item>max-newline-length</item>
<item>resolve
d-theme</item>
<item>w3c-xpath-functions-uri</item>
<item>font-name</item>
<item>theme-doc-uri</item>
<item>css-inline</item>
<item>css-doc</item>
<item>color-theme-d
ata</item>
<item>color-modes</item>
<item>document-type</item>
</variables>
<params>
<item>color-theme</item>
<item>force-newline</item>
<item>format-mixed-content</item>
</params>
</file>
<file path="xq-spectrum.xsl">
<uri>file:/C:/Users/Philip/Documents/GitHub/xmlspectrum/app/xsl/xq-spectrum.xsl</uri>
<doc-prefix>xsl</doc-prefix
>
<templates/>
<functions>
<item>{urn:xq.internal-function}show-xquery</item>
<item>{urn:xq.internal-function}show-xsl-tvt</item>
<item>{urn:xq.internal-function}tok
eniseBlocks</item>
<item>{urn:xq.internal-function}tokeniseBlocks</item>
<item>{urn:xq.internal-function}handleXquery</item>
<item>{urn:xq.internal-function}create
XqBlocks</item>
<item>{urn:xq.internal-function}createXslTvtBlocks</item>
<item>{urn:xq.internal-function}getClassFromType</item>
<item>{urn:xq.internal-function}g
etClassFromName</item>
<item>{urn:xq.internal-function}createXmlBlocks</item>
<item>{urn:xq.internal-function}createXqBlocks</item>
<item>{urn:xq.internal-function
}getAwaitingFrom2ndChar</item>
<item>{urn:xq.internal-function}tagStart</item>
</functions>
<variables><item>cQuote</item><item>cApos</item><item>cColon</item><item>cParenStart</item><item>cParenEnd</item><item>cBracketStart</item><item>cBracketEnd</item><item>cCloseComment</item><item>cTagStart</item><item>cTagEnd</item>
<item>cWhitespace</item><item>cFnStart</item><item>cFnEnd</item><item>xExclam</item><item>xPI</item><item>xSlash</item><item>xHyphen</item><item>xEquals</item><item>xxInitTagEnd</item>
<item>xxTagEnd</item>
<item>xxAnyTagEnd</item>
<item>xxCloseTagEnd</item>
<item>class-in</item>
<item>class-out</item>
<item>name-in</item>
<item>name-out</item>
</variables>
<params/>
</file>
<file path="make-toc.xsl">
<uri>file:/C:/Users/Philip/Documents/GitHub/xmlspectrum/app/xsl/make-toc.xsl</uri>
<doc-prefix>xsl</doc-prefix>
<templates>
<item>create-toc</item>
</templates>
<functions>
<item>{internal}resolve-clark-name</item>
</functions>
<variables/>
<params/>
</file
>
<file path="doctype-functions.xsl">
<uri>file:/C:/Users/Philip/Documents/GitHub/xmlspectrum/app/xsl/doctype-functions.xsl</uri>
<doc-prefix>xsl</doc-prefix>
<templates/>
<functions>
<item>{internal}doctype-from-xmlns</item>
<item>{internal}xsd-xpath-names</item>
<item>{internal}xsd-highlight-names</item>
<item>{internal}prefi
xed-name</item>
<item>{internal}get-xsd-element-names</item>
<item>{internal}get-xsd-attribute-names</item>
<item>{internal}get-xsd-fnames</item>
<item>{internal}is
-xsd-fname</item>
</functions>
<variables>
<item>doctypes-data-uri</item>
<item>xsd-names</item>
</variables>
<params/>
</file>
<file path="xslt-formatting-functions.xs
l">
<uri>file:/C:/Users/Philip/Documents/GitHub/xmlspectrum/app/xsl/xslt-formatting-functions.xsl</uri>
<doc-prefix>xsl</doc-prefix>
<templates>
<item>indentSpans</item>
<item>get-root-spans</item>
<item>get-next-class</item>
</templates>
<functions>
<item>{internal}indent</item>
<item>{internal}clark-name</item>
<item>{internal}
gen-id</item>
<item>{internal}get-xmlns</item>
<item>{internal}indentTextSpan</item>
<item>{internal}add-nbsp</item>
<item>{internal}space-fix</item>
<item>{internal
}autotrim</item>
<item>{internal}autotrim-txt</item>
<item>{internal}autotrim-comment</item>
<item>{internal}left-trim</item>
<item>{internal}right-trim</item>
<item
>{internal}createIndent</item>
</functions>
<variables/>
<params/>
</file>
<file path="xq-handler.xsl">
<uri>file:/C:/Users/Philip/Documents/GitHub/xmlspectrum/app/xs
l/xq-handler.xsl</uri>
<doc-prefix>xsl</doc-prefix>
<templates/>
<functions>
<item>{com.qutoric.xq.functions}pad</item>
<item>{com.qutoric.xq.functions}createXqToken
s</item>
<item>{com.qutoric.xq.functions}rationalizeTokens</item>
<item>{com.qutoric.xq.functions}processXqTokens</item>
<item>{com.qutoric.xq.functions}nextNonWhi
te</item>
<item>{com.qutoric.xq.functions}rawTokens</item>
</functions>
<variables>
<item>ops</item>
<item>aOps</item>
<item>hOps</item>
<item>nodes</item>
<item>types</item>
<item>possOps</item><item>ambiguousOps</item><item>simpleOps</item><item>nodeTests</item><item>typeTests</item><item>higherOps</item><item>bgColor</item></variables>
<params/></file>
</globals>
