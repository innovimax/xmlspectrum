<?xml version="1.0" encoding="UTF-8"?><result><comment start="1" end="1408"/><literal type="34" start="1420" end="1464"/><literal type="34" start="1500" end="1543"/><literal type="34" start="1548" end="1563"/><literal type="34" start="1580" end="1623"/><literal type="34" start="1628" end="1650"/><literal type="34" start="1681" end="1725"/><literal type="34" start="1730" end="1746"/><comment start="1751" end="1867"/><literal type="34" start="1919" end="1929"/><literal type="34" start="1934" end="1949"/><comment start="1958" end="2025"/><comment start="2098" end="2146"/><literal type="34" start="2200" end="2204"/><comment start="2208" end="2232"/><comment start="2237" end="2265"/><comment start="2270" end="2448"/><xml-open-tag pos="3391"/><xml-name-end pos="3407"/><x-equals pos="3423"/><xml-att-quote pos="3424"/><xml-literal-start pos="3425"/><xml-att-quote pos="3429"/><xml-literal-end pos="3430"/><x-equals pos="3436"/><xml-att-quote pos="3437"/><xml-literal-start pos="3438"/><xml-att-quote pos="3480"/><x-tag-end pos="3481" length="1"/><nested-query pos="3492"/><start-xquery pos="3493"/><xml-open-tag pos="3528"/><x-tag-end pos="3533" length="1"/><xml-open-tag pos="3548"/><x-tag-end pos="3553" length="1"/><nested-query pos="3554"/><start-xquery pos="3555"/><unnested-xquery pos="3560"/><xml-close-tag pos="3561"/><x-tag-end pos="3567" length="1"/><nested-query pos="3582"/><start-xquery pos="3583"/><xml-open-tag pos="3631"/><x-tag-end pos="3640" length="1"/><nested-query pos="3641"/><start-xquery pos="3642"/><unnested-xquery pos="3648"/><xml-close-tag pos="3649"/><x-tag-end pos="3659" length="1"/><start-xquery pos="3660"/><unnested-xquery pos="3695"/><resume-x-literal-txt pos="3696"/><xml-close-tag pos="3706"/><x-tag-end pos="3712" length="1"/><start-xquery pos="3713"/><unnested-xquery pos="3740"/><resume-x-literal-txt pos="3741"/><nested-query pos="3751"/><start-xquery pos="3752"/><unnested-xquery pos="3795"/><resume-x-literal-txt pos="3796"/><nested-query pos="3806"/><start-xquery pos="3807"/><unnested-xquery pos="3840"/><resume-x-literal-txt pos="3841"/><nested-query pos="3851"/><start-xquery pos="3852"/><xml-open-tag pos="3910"/><x-tag-end pos="3921" length="1"/><nested-query pos="3940"/><start-xquery pos="3941"/><xml-open-tag pos="3963"/><x-tag-end pos="3968" length="1"/><nested-query pos="3969"/><start-xquery pos="3970"/><unnested-xquery pos="3981"/><xml-close-tag pos="3982"/><x-tag-end pos="3988" length="1"/><start-xquery pos="3989"/><unnested-xquery pos="3997"/><resume-x-literal-txt pos="3998"/><nested-query pos="4016"/><start-xquery pos="4017"/><xml-open-tag pos="4037"/><x-tag-end pos="4040" length="1"/><nested-query pos="4041"/><start-xquery pos="4042"/><unnested-xquery pos="4051"/><xml-close-tag pos="4052"/><x-tag-end pos="4056" length="1"/><start-xquery pos="4057"/><unnested-xquery pos="4065"/><resume-x-literal-txt pos="4066"/><xml-close-tag pos="4080"/><x-tag-end pos="4092" length="1"/><start-xquery pos="4093"/><xml-open-tag pos="4141"/><x-tag-end pos="4152" length="1"/><xml-open-tag pos="4171"/><x-tag-end pos="4189" length="1"/><nested-query pos="4190"/><start-xquery pos="4191"/><unnested-xquery pos="4200"/><xml-close-tag pos="4201"/><x-tag-end pos="4220" length="1"/><xml-close-tag pos="4235"/><x-tag-end pos="4247" length="1"/><start-xquery pos="4248"/><unnested-xquery pos="4288"/><resume-x-literal-txt pos="4289"/><nested-query pos="4299"/><start-xquery pos="4300"/><literal type="34" start="4351" end="4355"/><xml-open-tag pos="4434"/><x-tag-end pos="4439" length="1"/><xml-open-tag pos="4440"/><x-tag-end pos="4454" length="1"/><nested-query pos="4455"/><start-xquery pos="4456"/><unnested-xquery pos="4461"/><xml-close-tag pos="4462"/><x-tag-end pos="4477" length="1"/><xml-close-tag pos="4478"/><x-tag-end pos="4484" length="1"/><start-xquery pos="4485"/><xml-open-tag pos="4551"/><x-tag-end pos="4556" length="1"/><xml-open-tag pos="4557"/><x-tag-end pos="4571" length="1"/><xml-close-tag pos="4576"/><x-tag-end pos="4591" length="1"/><xml-close-tag pos="4592"/><x-tag-end pos="4598" length="1"/><start-xquery pos="4599"/><unnested-xquery pos="4605"/><resume-x-literal-txt pos="4606"/><xml-close-tag pos="4612"/><x-tag-end pos="4629" length="1"/><start-xquery pos="4630"/><xml-open-tag pos="5225"/><x-tag-end pos="5238" length="1"/><nested-query pos="5239"/><start-xquery pos="5240"/><unnested-xquery pos="5250"/><xml-close-tag pos="5251"/><x-tag-end pos="5265" length="1"/><start-xquery pos="5266"/><literal type="34" start="5298" end="5302"/><xml-open-tag pos="5335"/><xml-name-end pos="5347"/><x-equals pos="5353"/><xml-att-quote pos="5354"/><xml-literal-start pos="5355"/><xml-att-quote pos="5397"/><x-tag-end pos="5398" length="1"/><xml-open-tag pos="5417"/><x-tag-end pos="5424" length="1"/><nested-query pos="5425"/><start-xquery pos="5426"/><unnested-xquery pos="5433"/><xml-close-tag pos="5434"/><x-tag-end pos="5442" length="1"/><nested-query pos="5461"/><start-xquery pos="5462"/><unnested-xquery pos="5468"/><resume-x-literal-txt pos="5469"/><xml-close-tag pos="5483"/><x-tag-end pos="5496" length="1"/><start-xquery pos="5497"/><xml-open-tag pos="6125"/><x-tag-end pos="6138" length="1"/><nested-query pos="6139"/><start-xquery pos="6140"/><unnested-xquery pos="6150"/><xml-close-tag pos="6151"/><x-tag-end pos="6165" length="1"/><start-xquery pos="6166"/><literal type="34" start="6199" end="6203"/><xml-open-tag pos="6236"/><xml-name-end pos="6243"/><x-equals pos="6249"/><xml-att-quote pos="6250"/><xml-literal-start pos="6251"/><xml-att-quote pos="6293"/><x-tag-end pos="6294" length="1"/><xml-open-tag pos="6313"/><x-tag-end pos="6322" length="1"/><nested-query pos="6323"/><start-xquery pos="6324"/><unnested-xquery pos="6331"/><xml-close-tag pos="6332"/><x-tag-end pos="6342" length="1"/><nested-query pos="6361"/><start-xquery pos="6362"/><unnested-xquery pos="6369"/><resume-x-literal-txt pos="6370"/><xml-close-tag pos="6384"/><x-tag-end pos="6392" length="1"/><start-xquery pos="6393"/><literal type="39" start="6509" end="6511"/><literal type="34" start="6620" end="6622"/><comment start="6651" end="6680"/><comment start="6685" end="7005"/><xml-open-tag pos="7137"/><xml-name-end pos="7142"/><x-equals pos="7149"/><xml-att-quote pos="7150"/><xml-literal-start pos="7151"/><xml-att-quote pos="7161"/><xml-literal-end pos="7162"/><x-equals pos="7169"/><xml-att-quote pos="7170"/><xml-literal-start pos="7171"/><xml-att-quote pos="7174"/><x-tag-end pos="7175" length="1"/><xml-open-tag pos="7191"/><xml-name-end pos="7195"/><x-equals pos="7201"/><xml-att-quote pos="7202"/><xml-literal-start pos="7203"/><xml-att-quote pos="7276"/><x-tag-end pos="7277" length="1"/><nested-query pos="7292"/><start-xquery pos="7293"/><literal type="34" start="7344" end="7361"/><literal type="34" start="7402" end="7404"/><literal type="34" start="7445" end="7450"/><literal type="34" start="7492" end="7538"/><unnested-xquery pos="7657"/><resume-x-literal-txt pos="7658"/><nested-query pos="7672"/><start-xquery pos="7673"/><xml-open-tag pos="7712"/><xml-name-end pos="7719"/><x-equals pos="7724"/><xml-att-quote pos="7725"/><xml-literal-start pos="7726"/><xml-att-quote pos="7731"/><xml-literal-end pos="7732"/><x-equals pos="7738"/><xml-att-quote pos="7739"/><xml-literal-start pos="7740"/><xml-att-quote pos="7772"/><x-tag-end pos="7773" length="1"/><nested-query pos="7789"/><start-xquery pos="7790"/><literal type="34" start="7890" end="7893"/><literal type="34" start="8021" end="8022"/><literal type="34" start="8091" end="8100"/><unnested-xquery pos="8155"/><resume-x-literal-txt pos="8156"/><xml-close-tag pos="8164"/><x-tag-end pos="8172" length="1"/><start-xquery pos="8173"/><unnested-xquery pos="8189"/><resume-x-literal-txt pos="8190"/><xml-close-tag pos="8200"/><x-tag-end pos="8205" length="1"/><nested-query pos="8216"/><start-xquery pos="8217"/><unnested-xquery pos="8463"/><resume-x-literal-txt pos="8464"/><nested-query pos="8474"/><start-xquery pos="8475"/><unnested-xquery pos="8557"/><resume-x-literal-txt pos="8558"/><xml-open-tag pos="8562"/><xml-name-end pos="8568"/><x-equals pos="8574"/><xml-att-quote pos="8575"/><xml-literal-start pos="8576"/><xml-att-quote pos="8582"/><xml-literal-end pos="8583"/><x-equals pos="8588"/><xml-att-quote pos="8589"/><xml-literal-start pos="8590"/><xml-att-quote pos="8596"/><xml-literal-end pos="8597"/><x-equals pos="8603"/><xml-att-quote pos="8604"/><xml-literal-start pos="8605"/><xml-att-quote pos="8611"/><xml-literal-end pos="8612"/><x-equals pos="8618"/><xml-att-quote pos="8619"/><xml-literal-start pos="8620"/><xml-att-quote pos="8651"/><xml-literal-end pos="8652"/><x-tag-end pos="8653" length="2" level="2"/><xml-close-tag pos="8658"/><x-tag-end pos="8664" length="1"/><start-xquery pos="8665"/><xml-open-tag pos="9077"/><xml-name-end pos="9100"/><x-tag-end pos="9101" length="2" level="1"/><start-xquery pos="9103"/><xml-open-tag pos="9134"/><xml-name-end pos="9138"/><x-equals pos="9144"/><xml-att-quote pos="9145"/><xml-literal-start pos="9146"/><xml-att-quote pos="9164"/><x-tag-end pos="9165" length="1"/><nested-query pos="9176"/><start-xquery pos="9177"/><unnested-xquery pos="9183"/><resume-x-literal-txt pos="9184"/><xml-open-tag pos="9201"/><x-tag-end pos="9204" length="2" level="2"/><xml-open-tag pos="9216"/><xml-name-end pos="9223"/><x-equals pos="9226"/><xml-att-quote pos="9227"/><xml-literal-start pos="9228"/><nested-query pos="9235"/><start-xquery pos="9236"/><unnested-xquery pos="9245"/><xml-att-quote pos="9246"/><xml-literal-end pos="9247"/><x-equals pos="9256"/><xml-att-quote pos="9257"/><xml-literal-start pos="9258"/><xml-att-quote pos="9266"/><xml-literal-end pos="9267"/><x-equals pos="9272"/><xml-att-quote pos="9273"/><xml-literal-start pos="9274"/><xml-att-quote pos="9278"/><xml-literal-end pos="9279"/><x-equals pos="9284"/><xml-att-quote pos="9285"/><xml-literal-start pos="9286"/><xml-att-quote pos="9287"/><xml-literal-end pos="9288"/><x-equals pos="9294"/><xml-att-quote pos="9295"/><xml-literal-start pos="9296"/><xml-att-quote pos="9308"/><xml-literal-end pos="9309"/><x-tag-end pos="9310" length="1"/><xml-open-tag pos="9325"/><xml-name-end pos="9332"/><x-equals pos="9338"/><xml-att-quote pos="9339"/><nested-query pos="9340"/><start-xquery pos="9341"/><literal type="34" start="9371" end="9376"/><unnested-xquery pos="9378"/><xml-att-quote pos="9379"/><x-tag-end pos="9380" length="1"/><nested-query pos="9399"/><start-xquery pos="9400"/><literal type="34" start="9480" end="9485"/><literal type="34" start="9531" end="9540"/><unnested-xquery pos="9567"/><resume-x-literal-txt pos="9568"/><nested-query pos="9590"/><start-xquery pos="9591"/><unnested-xquery pos="9597"/><resume-x-literal-txt pos="9598"/><xml-close-tag pos="9612"/><x-tag-end pos="9620" length="1"/><nested-query pos="9635"/><start-xquery pos="9636"/><literal type="34" start="9789" end="9791"/><xml-open-tag pos="9856"/><xml-name-end pos="9863"/><x-equals pos="9869"/><xml-att-quote pos="9870"/><nested-query pos="9871"/><start-xquery pos="9872"/><unnested-xquery pos="9878"/><xml-att-quote pos="9879"/><x-tag-end pos="9880" length="1"/><nested-query pos="9900"/><start-xquery pos="9901"/><literal type="34" start="9978" end="9987"/><unnested-xquery pos="10015"/><resume-x-literal-txt pos="10016"/><nested-query pos="10035"/><start-xquery pos="10036"/><literal type="34" start="10059" end="10062"/><literal type="34" start="10088" end="10090"/><unnested-xquery pos="10092"/><resume-x-literal-txt pos="10093"/><xml-close-tag pos="10111"/><x-tag-end pos="10119" length="1"/><start-xquery pos="10120"/><unnested-xquery pos="10120"/><resume-x-literal-txt pos="10121"/><xml-close-tag pos="10129"/><x-tag-end pos="10137" length="1"/><xml-close-tag pos="10145"/><x-tag-end pos="10150" length="1"/><start-xquery pos="10151"/><xml-open-tag pos="10258"/><xml-name-end pos="10262"/><x-equals pos="10268"/><xml-att-quote pos="10269"/><xml-literal-start pos="10270"/><xml-att-quote pos="10288"/><x-tag-end pos="10289" length="1"/><xml-open-tag pos="10305"/><x-tag-end pos="10308" length="2" level="2"/><xml-open-tag pos="10320"/><xml-name-end pos="10324"/><x-equals pos="10330"/><xml-att-quote pos="10331"/><xml-literal-start pos="10332"/><xml-att-quote pos="10347"/><x-tag-end pos="10348" length="1"/><xml-open-tag pos="10363"/><xml-name-end pos="10369"/><x-equals pos="10375"/><xml-att-quote pos="10376"/><xml-literal-start pos="10377"/><xml-att-quote pos="10431"/><x-tag-end pos="10432" length="1"/><xml-close-tag pos="10440"/><x-tag-end pos="10447" length="1"/><xml-open-tag pos="10462"/><xml-name-end pos="10469"/><x-equals pos="10474"/><xml-att-quote pos="10475"/><xml-literal-start pos="10476"/><xml-att-quote pos="10487"/><x-tag-end pos="10488" length="1"/><xml-open-tag pos="10504"/><xml-name-end pos="10511"/><x-equals pos="10517"/><xml-att-quote pos="10518"/><xml-literal-start pos="10519"/><xml-att-quote pos="10521"/><x-tag-end pos="10522" length="1"/><nested-query pos="10523"/><start-xquery pos="10524"/><literal type="34" start="10558" end="10561"/><unnested-xquery pos="10563"/><resume-x-literal-txt pos="10564"/><xml-close-tag pos="10571"/><x-tag-end pos="10579" length="1"/><xml-open-tag pos="10595"/><xml-name-end pos="10602"/><x-equals pos="10608"/><xml-att-quote pos="10609"/><xml-literal-start pos="10610"/><xml-att-quote pos="10612"/><x-tag-end pos="10613" length="1"/><nested-query pos="10614"/><start-xquery pos="10615"/><literal type="34" start="10649" end="10652"/><unnested-xquery pos="10654"/><resume-x-literal-txt pos="10655"/><xml-close-tag pos="10663"/><x-tag-end pos="10671" length="1"/><xml-open-tag pos="10687"/><xml-name-end pos="10694"/><x-equals pos="10700"/><xml-att-quote pos="10701"/><xml-literal-start pos="10702"/><xml-att-quote pos="10704"/><x-tag-end pos="10705" length="1"/><nested-query pos="10706"/><start-xquery pos="10707"/><literal type="34" start="10741" end="10744"/><unnested-xquery pos="10746"/><resume-x-literal-txt pos="10747"/><xml-close-tag pos="10752"/><x-tag-end pos="10760" length="1"/><xml-open-tag pos="10776"/><xml-name-end pos="10783"/><x-equals pos="10789"/><xml-att-quote pos="10790"/><xml-literal-start pos="10791"/><xml-att-quote pos="10793"/><x-tag-end pos="10794" length="1"/><nested-query pos="10795"/><start-xquery pos="10796"/><literal type="34" start="10830" end="10833"/><unnested-xquery pos="10835"/><resume-x-literal-txt pos="10836"/><xml-close-tag pos="10841"/><x-tag-end pos="10849" length="1"/><xml-open-tag pos="10865"/><xml-name-end pos="10872"/><x-equals pos="10878"/><xml-att-quote pos="10879"/><xml-literal-start pos="10880"/><xml-att-quote pos="10882"/><x-tag-end pos="10883" length="1"/><nested-query pos="10884"/><start-xquery pos="10885"/><literal type="34" start="10919" end="10922"/><unnested-xquery pos="10924"/><resume-x-literal-txt pos="10925"/><xml-close-tag pos="10928"/><x-tag-end pos="10936" length="1"/><xml-open-tag pos="10952"/><xml-name-end pos="10959"/><x-equals pos="10965"/><xml-att-quote pos="10966"/><xml-literal-start pos="10967"/><xml-att-quote pos="10969"/><x-tag-end pos="10970" length="1"/><nested-query pos="10971"/><start-xquery pos="10972"/><literal type="34" start="11006" end="11009"/><unnested-xquery pos="11011"/><resume-x-literal-txt pos="11012"/><xml-close-tag pos="11016"/><x-tag-end pos="11024" length="1"/><xml-open-tag pos="11040"/><xml-name-end pos="11047"/><x-equals pos="11053"/><xml-att-quote pos="11054"/><xml-literal-start pos="11055"/><xml-att-quote pos="11057"/><x-tag-end pos="11058" length="1"/><nested-query pos="11059"/><start-xquery pos="11060"/><literal type="34" start="11094" end="11097"/><unnested-xquery pos="11099"/><resume-x-literal-txt pos="11100"/><xml-close-tag pos="11104"/><x-tag-end pos="11112" length="1"/><xml-open-tag pos="11128"/><xml-name-end pos="11135"/><x-equals pos="11141"/><xml-att-quote pos="11142"/><xml-literal-start pos="11143"/><xml-att-quote pos="11145"/><x-tag-end pos="11146" length="1"/><nested-query pos="11147"/><start-xquery pos="11148"/><literal type="34" start="11182" end="11185"/><unnested-xquery pos="11187"/><resume-x-literal-txt pos="11188"/><xml-close-tag pos="11194"/><x-tag-end pos="11202" length="1"/><xml-open-tag pos="11218"/><xml-name-end pos="11225"/><x-equals pos="11231"/><xml-att-quote pos="11232"/><xml-literal-start pos="11233"/><xml-att-quote pos="11235"/><x-tag-end pos="11236" length="1"/><nested-query pos="11237"/><start-xquery pos="11238"/><literal type="34" start="11272" end="11275"/><unnested-xquery pos="11277"/><resume-x-literal-txt pos="11278"/><xml-close-tag pos="11287"/><x-tag-end pos="11295" length="1"/><xml-open-tag pos="11311"/><xml-name-end pos="11318"/><x-equals pos="11324"/><xml-att-quote pos="11325"/><xml-literal-start pos="11326"/><xml-att-quote pos="11328"/><x-tag-end pos="11329" length="1"/><nested-query pos="11330"/><start-xquery pos="11331"/><literal type="34" start="11365" end="11368"/><unnested-xquery pos="11370"/><resume-x-literal-txt pos="11371"/><xml-close-tag pos="11378"/><x-tag-end pos="11386" length="1"/><xml-open-tag pos="11402"/><xml-name-end pos="11409"/><x-equals pos="11415"/><xml-att-quote pos="11416"/><xml-literal-start pos="11417"/><xml-att-quote pos="11419"/><x-tag-end pos="11420" length="1"/><nested-query pos="11421"/><start-xquery pos="11422"/><literal type="34" start="11456" end="11459"/><unnested-xquery pos="11461"/><resume-x-literal-txt pos="11462"/><xml-close-tag pos="11470"/><x-tag-end pos="11478" length="1"/><xml-open-tag pos="11494"/><xml-name-end pos="11501"/><x-equals pos="11507"/><xml-att-quote pos="11508"/><xml-literal-start pos="11509"/><xml-att-quote pos="11511"/><x-tag-end pos="11512" length="1"/><nested-query pos="11513"/><start-xquery pos="11514"/><literal type="34" start="11548" end="11551"/><unnested-xquery pos="11553"/><resume-x-literal-txt pos="11554"/><xml-close-tag pos="11562"/><x-tag-end pos="11570" length="1"/><xml-close-tag pos="11585"/><x-tag-end pos="11593" length="1"/><nested-query pos="11608"/><start-xquery pos="11609"/><literal type="34" start="11609" end="11613"/><unnested-xquery pos="11614"/><resume-x-literal-txt pos="11615"/><xml-open-tag pos="11629"/><xml-name-end pos="11635"/><x-equals pos="11640"/><xml-att-quote pos="11641"/><xml-literal-start pos="11642"/><xml-att-quote pos="11646"/><xml-literal-end pos="11647"/><x-equals pos="11652"/><xml-att-quote pos="11653"/><xml-literal-start pos="11654"/><xml-att-quote pos="11663"/><xml-literal-end pos="11664"/><x-equals pos="11670"/><xml-att-quote pos="11671"/><nested-query pos="11672"/><start-xquery pos="11673"/><unnested-xquery pos="11701"/><xml-att-quote pos="11702"/><xml-literal-end pos="11703"/><x-equals pos="11709"/><xml-att-quote pos="11710"/><xml-literal-start pos="11711"/><xml-att-quote pos="11721"/><xml-literal-end pos="11722"/><x-tag-end pos="11723" length="2" level="3"/><nested-query pos="11739"/><start-xquery pos="11740"/><literal type="34" start="11740" end="11744"/><unnested-xquery pos="11745"/><resume-x-literal-txt pos="11746"/><xml-open-tag pos="11760"/><xml-name-end pos="11766"/><x-equals pos="11771"/><xml-att-quote pos="11772"/><xml-literal-start pos="11773"/><xml-att-quote pos="11777"/><xml-literal-end pos="11778"/><x-equals pos="11783"/><xml-att-quote pos="11784"/><xml-literal-start pos="11785"/><xml-att-quote pos="11795"/><xml-literal-end pos="11796"/><x-equals pos="11802"/><xml-att-quote pos="11803"/><nested-query pos="11804"/><start-xquery pos="11805"/><unnested-xquery pos="11834"/><xml-att-quote pos="11835"/><xml-literal-end pos="11836"/><x-equals pos="11842"/><xml-att-quote pos="11843"/><xml-literal-start pos="11844"/><xml-att-quote pos="11854"/><xml-literal-end pos="11855"/><x-tag-end pos="11856" length="2" level="3"/><xml-close-tag pos="11868"/><x-tag-end pos="11873" length="1"/><xml-open-tag pos="11884"/><x-tag-end pos="11888" length="1"/><xml-open-tag pos="11903"/><xml-name-end pos="11909"/><x-equals pos="11915"/><xml-att-quote pos="11916"/><xml-literal-start pos="11917"/><xml-att-quote pos="11971"/><x-tag-end pos="11972" length="1"/><xml-close-tag pos="11978"/><x-tag-end pos="11985" length="1"/><xml-open-tag pos="12000"/><xml-name-end pos="12007"/><x-equals pos="12012"/><xml-att-quote pos="12013"/><xml-literal-start pos="12014"/><xml-att-quote pos="12023"/><x-tag-end pos="12024" length="1"/><xml-open-tag pos="12040"/><xml-name-end pos="12047"/><x-equals pos="12053"/><xml-att-quote pos="12054"/><xml-literal-start pos="12055"/><xml-att-quote pos="12057"/><x-tag-end pos="12058" length="1"/><nested-query pos="12059"/><start-xquery pos="12060"/><literal type="34" start="12092" end="12095"/><unnested-xquery pos="12097"/><resume-x-literal-txt pos="12098"/><xml-close-tag pos="12105"/><x-tag-end pos="12113" length="1"/><xml-open-tag pos="12129"/><xml-name-end pos="12136"/><x-equals pos="12142"/><xml-att-quote pos="12143"/><xml-literal-start pos="12144"/><xml-att-quote pos="12146"/><x-tag-end pos="12147" length="1"/><nested-query pos="12148"/><start-xquery pos="12149"/><literal type="34" start="12181" end="12184"/><unnested-xquery pos="12186"/><resume-x-literal-txt pos="12187"/><xml-close-tag pos="12195"/><x-tag-end pos="12203" length="1"/><xml-open-tag pos="12219"/><xml-name-end pos="12226"/><x-equals pos="12232"/><xml-att-quote pos="12233"/><xml-literal-start pos="12234"/><xml-att-quote pos="12236"/><x-tag-end pos="12237" length="1"/><nested-query pos="12238"/><start-xquery pos="12239"/><literal type="34" start="12271" end="12274"/><unnested-xquery pos="12276"/><resume-x-literal-txt pos="12277"/><xml-close-tag pos="12282"/><x-tag-end pos="12290" length="1"/><xml-open-tag pos="12306"/><xml-name-end pos="12313"/><x-equals pos="12319"/><xml-att-quote pos="12320"/><xml-literal-start pos="12321"/><xml-att-quote pos="12323"/><x-tag-end pos="12324" length="1"/><nested-query pos="12325"/><start-xquery pos="12326"/><literal type="34" start="12358" end="12361"/><unnested-xquery pos="12363"/><resume-x-literal-txt pos="12364"/><xml-close-tag pos="12369"/><x-tag-end pos="12377" length="1"/><xml-open-tag pos="12393"/><xml-name-end pos="12400"/><x-equals pos="12406"/><xml-att-quote pos="12407"/><xml-literal-start pos="12408"/><xml-att-quote pos="12410"/><x-tag-end pos="12411" length="1"/><nested-query pos="12412"/><start-xquery pos="12413"/><literal type="34" start="12445" end="12448"/><unnested-xquery pos="12450"/><resume-x-literal-txt pos="12451"/><xml-close-tag pos="12454"/><x-tag-end pos="12462" length="1"/><xml-open-tag pos="12478"/><xml-name-end pos="12485"/><x-equals pos="12491"/><xml-att-quote pos="12492"/><xml-literal-start pos="12493"/><xml-att-quote pos="12495"/><x-tag-end pos="12496" length="1"/><nested-query pos="12497"/><start-xquery pos="12498"/><literal type="34" start="12530" end="12533"/><unnested-xquery pos="12535"/><resume-x-literal-txt pos="12536"/><xml-close-tag pos="12540"/><x-tag-end pos="12548" length="1"/><xml-open-tag pos="12564"/><xml-name-end pos="12571"/><x-equals pos="12577"/><xml-att-quote pos="12578"/><xml-literal-start pos="12579"/><xml-att-quote pos="12581"/><x-tag-end pos="12582" length="1"/><nested-query pos="12583"/><start-xquery pos="12584"/><literal type="34" start="12616" end="12619"/><unnested-xquery pos="12621"/><resume-x-literal-txt pos="12622"/><xml-close-tag pos="12626"/><x-tag-end pos="12634" length="1"/><xml-open-tag pos="12650"/><xml-name-end pos="12657"/><x-equals pos="12663"/><xml-att-quote pos="12664"/><xml-literal-start pos="12665"/><xml-att-quote pos="12667"/><x-tag-end pos="12668" length="1"/><nested-query pos="12669"/><start-xquery pos="12670"/><literal type="34" start="12702" end="12705"/><unnested-xquery pos="12707"/><resume-x-literal-txt pos="12708"/><xml-close-tag pos="12714"/><x-tag-end pos="12722" length="1"/><xml-open-tag pos="12738"/><xml-name-end pos="12745"/><x-equals pos="12751"/><xml-att-quote pos="12752"/><xml-literal-start pos="12753"/><xml-att-quote pos="12755"/><x-tag-end pos="12756" length="1"/><nested-query pos="12757"/><start-xquery pos="12758"/><literal type="34" start="12790" end="12793"/><unnested-xquery pos="12795"/><resume-x-literal-txt pos="12796"/><xml-close-tag pos="12805"/><x-tag-end pos="12813" length="1"/><xml-open-tag pos="12829"/><xml-name-end pos="12836"/><x-equals pos="12842"/><xml-att-quote pos="12843"/><xml-literal-start pos="12844"/><xml-att-quote pos="12846"/><x-tag-end pos="12847" length="1"/><nested-query pos="12848"/><start-xquery pos="12849"/><literal type="34" start="12881" end="12884"/><unnested-xquery pos="12886"/><resume-x-literal-txt pos="12887"/><xml-close-tag pos="12894"/><x-tag-end pos="12902" length="1"/><xml-open-tag pos="12918"/><xml-name-end pos="12925"/><x-equals pos="12931"/><xml-att-quote pos="12932"/><xml-literal-start pos="12933"/><xml-att-quote pos="12935"/><x-tag-end pos="12936" length="1"/><nested-query pos="12937"/><start-xquery pos="12938"/><literal type="34" start="12970" end="12973"/><unnested-xquery pos="12975"/><resume-x-literal-txt pos="12976"/><xml-close-tag pos="12984"/><x-tag-end pos="12992" length="1"/><xml-open-tag pos="13008"/><xml-name-end pos="13015"/><x-equals pos="13021"/><xml-att-quote pos="13022"/><xml-literal-start pos="13023"/><xml-att-quote pos="13025"/><x-tag-end pos="13026" length="1"/><nested-query pos="13027"/><start-xquery pos="13028"/><literal type="34" start="13060" end="13063"/><unnested-xquery pos="13065"/><resume-x-literal-txt pos="13066"/><xml-close-tag pos="13074"/><x-tag-end pos="13082" length="1"/><xml-close-tag pos="13097"/><x-tag-end pos="13105" length="1"/><nested-query pos="13120"/><start-xquery pos="13121"/><literal type="34" start="13121" end="13125"/><unnested-xquery pos="13126"/><resume-x-literal-txt pos="13127"/><xml-open-tag pos="13141"/><xml-name-end pos="13147"/><x-equals pos="13152"/><xml-att-quote pos="13153"/><xml-literal-start pos="13154"/><xml-att-quote pos="13158"/><xml-literal-end pos="13159"/><x-equals pos="13164"/><xml-att-quote pos="13165"/><xml-literal-start pos="13166"/><xml-att-quote pos="13173"/><xml-literal-end pos="13174"/><x-equals pos="13180"/><xml-att-quote pos="13181"/><nested-query pos="13182"/><start-xquery pos="13183"/><unnested-xquery pos="13209"/><xml-att-quote pos="13210"/><xml-literal-end pos="13211"/><x-equals pos="13217"/><xml-att-quote pos="13218"/><xml-literal-start pos="13219"/><xml-att-quote pos="13229"/><xml-literal-end pos="13230"/><x-tag-end pos="13231" length="2" level="3"/><nested-query pos="13247"/><start-xquery pos="13248"/><literal type="34" start="13248" end="13252"/><unnested-xquery pos="13253"/><resume-x-literal-txt pos="13254"/><xml-open-tag pos="13268"/><xml-name-end pos="13274"/><x-equals pos="13279"/><xml-att-quote pos="13280"/><xml-literal-start pos="13281"/><xml-att-quote pos="13285"/><xml-literal-end pos="13286"/><x-equals pos="13291"/><xml-att-quote pos="13292"/><xml-literal-start pos="13293"/><xml-att-quote pos="13301"/><xml-literal-end pos="13302"/><x-equals pos="13308"/><xml-att-quote pos="13309"/><nested-query pos="13310"/><start-xquery pos="13311"/><unnested-xquery pos="13338"/><xml-att-quote pos="13339"/><xml-literal-end pos="13340"/><x-equals pos="13346"/><xml-att-quote pos="13347"/><xml-literal-start pos="13348"/><xml-att-quote pos="13358"/><xml-literal-end pos="13359"/><x-tag-end pos="13360" length="2" level="3"/><xml-close-tag pos="13372"/><x-tag-end pos="13377" length="1"/><xml-close-tag pos="13382"/><x-tag-end pos="13387" length="1"/><start-xquery pos="13388"/><literal type="34" start="13535" end="13544"/><comment start="13561" end="13589"/><comment start="13594" end="14798"/><comment start="14803" end="15073"/><comment start="15790" end="15944"/><xml-open-tag pos="16028"/><x-tag-end pos="16032" length="1"/><nested-query pos="16033"/><start-xquery pos="16034"/><unnested-xquery pos="16050"/><xml-close-tag pos="16051"/><x-tag-end pos="16056" length="1"/><start-xquery pos="16057"/><comment start="16081" end="16539"/><xml-open-tag pos="16836"/><xml-name-end pos="16840"/><x-equals pos="16846"/><xml-att-quote pos="16847"/><xml-literal-start pos="16848"/><xml-att-quote pos="16862"/><x-tag-end pos="16863" length="1"/><xml-open-tag pos="16874"/><xml-name-end pos="16878"/><x-equals pos="16884"/><xml-att-quote pos="16885"/><xml-literal-start pos="16886"/><xml-att-quote pos="16892"/><x-tag-end pos="16893" length="1"/><xml-open-tag pos="16944"/><xml-name-end pos="16946"/><x-equals pos="16951"/><xml-att-quote pos="16952"/><xml-literal-start pos="16953"/><nested-query pos="16964"/><start-xquery pos="16965"/><literal type="34" start="16997" end="16999"/><literal type="34" start="17002" end="17007"/><unnested-xquery pos="17010"/><xml-att-quote pos="17011"/><x-tag-end pos="17012" length="1"/><xml-close-tag pos="17028"/><x-tag-end pos="17031" length="1"/><xml-close-tag pos="17032"/><x-tag-end pos="17037" length="1"/><nested-query pos="17048"/><start-xquery pos="17049"/><unnested-xquery pos="17150"/><resume-x-literal-txt pos="17151"/><xml-close-tag pos="17157"/><x-tag-end pos="17162" length="1"/><start-xquery pos="17163"/><comment start="17183" end="17258"/><literal type="34" start="17471" end="17476"/><literal type="34" start="17528" end="17530"/><literal type="34" start="17701" end="17706"/><comment start="17720" end="17746"/><comment start="17753" end="17854"/><literal type="34" start="18026" end="18028"/><xml-open-tag pos="18503"/><x-tag-end pos="18507" length="1"/><nested-query pos="18512"/><start-xquery pos="18513"/><xml-open-tag pos="18531"/><x-tag-end pos="18534" length="1"/><nested-query pos="18535"/><start-xquery pos="18536"/><unnested-xquery pos="18542"/><xml-close-tag pos="18543"/><x-tag-end pos="18547" length="1"/><start-xquery pos="18548"/><unnested-xquery pos="18557"/><resume-x-literal-txt pos="18558"/><xml-open-tag pos="18562"/><xml-name-end pos="18566"/><x-equals pos="18572"/><xml-att-quote pos="18573"/><xml-literal-start pos="18574"/><xml-att-quote pos="18586"/><x-tag-end pos="18587" length="1"/><nested-query pos="18592"/><start-xquery pos="18593"/><comment start="18594" end="18602"/><literal type="34" start="18822" end="18828"/><literal type="34" start="18837" end="18839"/><xml-open-tag pos="18865"/><x-tag-end pos="18869" length="1"/><xml-open-tag pos="18870"/><xml-name-end pos="18872"/><x-equals pos="18877"/><xml-att-quote pos="18878"/><xml-literal-start pos="18879"/><nested-query pos="18890"/><start-xquery pos="18891"/><unnested-xquery pos="18894"/><xml-att-quote pos="18895"/><x-tag-end pos="18896" length="1"/><nested-query pos="18909"/><start-xquery pos="18910"/><xml-open-tag pos="19064"/><xml-name-end pos="19068"/><x-equals pos="19072"/><xml-att-quote pos="19073"/><xml-literal-start pos="19074"/><xml-att-quote pos="19102"/><xml-literal-end pos="19103"/><x-equals pos="19109"/><xml-att-quote pos="19110"/><xml-literal-start pos="19111"/><xml-att-quote pos="19124"/><x-tag-end pos="19125" length="2" level="5"/><start-xquery pos="19127"/><xml-open-tag pos="19128"/><x-tag-end pos="19135" length="1"/><nested-query pos="19136"/><start-xquery pos="19137"/><unnested-xquery pos="19142"/><xml-close-tag pos="19143"/><x-tag-end pos="19151" length="1"/><start-xquery pos="19152"/><unnested-xquery pos="19187"/><resume-x-literal-txt pos="19188"/><xml-close-tag pos="19199"/><x-tag-end pos="19202" length="1"/><xml-close-tag pos="19203"/><x-tag-end pos="19208" length="1"/><start-xquery pos="19209"/><unnested-xquery pos="19219"/><resume-x-literal-txt pos="19220"/><nested-query pos="19227"/><start-xquery pos="19228"/><comment start="19229" end="19245"/><literal type="34" start="19400" end="19402"/><literal type="34" start="19497" end="19500"/><literal type="34" start="19509" end="19511"/><comment start="19533" end="19640"/><literal type="34" start="19971" end="19973"/><literal type="34" start="19984" end="19986"/><xml-open-tag pos="20038"/><x-tag-end pos="20042" length="1"/><xml-open-tag pos="20043"/><xml-name-end pos="20045"/><x-equals pos="20050"/><xml-att-quote pos="20051"/><xml-literal-start pos="20052"/><nested-query pos="20063"/><start-xquery pos="20064"/><unnested-xquery pos="20067"/><xml-att-quote pos="20068"/><x-tag-end pos="20069" length="1"/><nested-query pos="20080"/><start-xquery pos="20081"/><xml-open-tag pos="20194"/><xml-name-end pos="20198"/><x-equals pos="20202"/><xml-att-quote pos="20203"/><xml-literal-start pos="20204"/><xml-att-quote pos="20233"/><xml-literal-end pos="20234"/><x-equals pos="20240"/><xml-att-quote pos="20241"/><xml-literal-start pos="20242"/><xml-att-quote pos="20255"/><x-tag-end pos="20256" length="2" level="5"/><start-xquery pos="20258"/><xml-open-tag pos="20259"/><x-tag-end pos="20266" length="1"/><nested-query pos="20267"/><start-xquery pos="20268"/><unnested-xquery pos="20273"/><xml-close-tag pos="20274"/><x-tag-end pos="20282" length="1"/><start-xquery pos="20283"/><unnested-xquery pos="20314"/><resume-x-literal-txt pos="20315"/><xml-close-tag pos="20324"/><x-tag-end pos="20327" length="1"/><xml-close-tag pos="20328"/><x-tag-end pos="20333" length="1"/><start-xquery pos="20334"/><unnested-xquery pos="20354"/><resume-x-literal-txt pos="20355"/><xml-close-tag pos="20360"/><x-tag-end pos="20365" length="1"/><xml-close-tag pos="20370"/><x-tag-end pos="20375" length="1"/><start-xquery pos="20376"/><comment start="20647" end="20677"/><literal type="34" start="21038" end="21042"/><literal type="34" start="21094" end="21096"/><literal type="34" start="21228" end="21233"/><comment start="21247" end="21268"/><comment start="21275" end="21376"/><literal type="34" start="21533" end="21535"/><xml-open-tag pos="21985"/><x-tag-end pos="21989" length="1"/><nested-query pos="21994"/><start-xquery pos="21995"/><xml-open-tag pos="22013"/><x-tag-end pos="22016" length="1"/><nested-query pos="22017"/><start-xquery pos="22018"/><unnested-xquery pos="22024"/><xml-close-tag pos="22025"/><x-tag-end pos="22029" length="1"/><start-xquery pos="22030"/><unnested-xquery pos="22039"/><resume-x-literal-txt pos="22040"/><xml-open-tag pos="22044"/><xml-name-end pos="22048"/><x-equals pos="22054"/><xml-att-quote pos="22055"/><xml-literal-start pos="22056"/><xml-att-quote pos="22068"/><x-tag-end pos="22069" length="1"/><nested-query pos="22074"/><start-xquery pos="22075"/><comment start="22076" end="22084"/><literal type="34" start="22303" end="22309"/><literal type="34" start="22318" end="22320"/><xml-open-tag pos="22346"/><x-tag-end pos="22350" length="1"/><xml-open-tag pos="22351"/><xml-name-end pos="22353"/><x-equals pos="22358"/><xml-att-quote pos="22359"/><xml-literal-start pos="22360"/><nested-query pos="22371"/><start-xquery pos="22372"/><unnested-xquery pos="22375"/><xml-att-quote pos="22376"/><x-tag-end pos="22377" length="1"/><nested-query pos="22390"/><start-xquery pos="22391"/><xml-open-tag pos="22541"/><xml-name-end pos="22545"/><x-equals pos="22549"/><xml-att-quote pos="22550"/><xml-literal-start pos="22551"/><xml-att-quote pos="22579"/><xml-literal-end pos="22580"/><x-equals pos="22586"/><xml-att-quote pos="22587"/><xml-literal-start pos="22588"/><xml-att-quote pos="22601"/><xml-literal-end pos="22602"/><x-tag-end pos="22603" length="2" level="5"/><start-xquery pos="22605"/><xml-open-tag pos="22606"/><x-tag-end pos="22613" length="1"/><nested-query pos="22614"/><start-xquery pos="22615"/><unnested-xquery pos="22620"/><xml-close-tag pos="22621"/><x-tag-end pos="22629" length="1"/><start-xquery pos="22630"/><unnested-xquery pos="22665"/><resume-x-literal-txt pos="22666"/><xml-close-tag pos="22677"/><x-tag-end pos="22680" length="1"/><xml-close-tag pos="22681"/><x-tag-end pos="22686" length="1"/><start-xquery pos="22687"/><unnested-xquery pos="22697"/><resume-x-literal-txt pos="22698"/><nested-query pos="22705"/><start-xquery pos="22706"/><comment start="22707" end="22718"/><literal type="34" start="22861" end="22863"/><literal type="34" start="22982" end="22985"/><literal type="34" start="22994" end="22996"/><comment start="23025" end="23135"/><literal type="34" start="23485" end="23487"/><literal type="34" start="23515" end="23517"/><comment start="23552" end="23662"/><literal type="34" start="23969" end="23971"/><literal type="34" start="23999" end="24001"/><literal type="34" start="24068" end="24072"/><xml-open-tag pos="24092"/><x-tag-end pos="24096" length="1"/><xml-open-tag pos="24097"/><xml-name-end pos="24099"/><x-equals pos="24104"/><xml-att-quote pos="24105"/><xml-literal-start pos="24106"/><nested-query pos="24117"/><start-xquery pos="24118"/><unnested-xquery pos="24125"/><xml-att-quote pos="24126"/><x-tag-end pos="24127" length="1"/><nested-query pos="24142"/><start-xquery pos="24143"/><xml-open-tag pos="24266"/><xml-name-end pos="24270"/><x-equals pos="24274"/><xml-att-quote pos="24275"/><xml-literal-start pos="24276"/><xml-att-quote pos="24305"/><xml-literal-end pos="24306"/><x-equals pos="24312"/><xml-att-quote pos="24313"/><xml-literal-start pos="24314"/><xml-att-quote pos="24327"/><x-tag-end pos="24328" length="2" level="5"/><start-xquery pos="24330"/><xml-open-tag pos="24331"/><x-tag-end pos="24338" length="1"/><nested-query pos="24339"/><start-xquery pos="24340"/><unnested-xquery pos="24345"/><xml-close-tag pos="24346"/><x-tag-end pos="24354" length="1"/><start-xquery pos="24355"/><unnested-xquery pos="24394"/><resume-x-literal-txt pos="24395"/><xml-close-tag pos="24408"/><x-tag-end pos="24411" length="1"/><xml-close-tag pos="24412"/><x-tag-end pos="24417" length="1"/><start-xquery pos="24418"/><literal type="34" start="24453" end="24459"/><xml-open-tag pos="24479"/><x-tag-end pos="24483" length="1"/><xml-open-tag pos="24484"/><xml-name-end pos="24486"/><x-equals pos="24491"/><xml-att-quote pos="24492"/><xml-literal-start pos="24493"/><nested-query pos="24504"/><start-xquery pos="24505"/><unnested-xquery pos="24512"/><xml-att-quote pos="24513"/><x-tag-end pos="24514" length="1"/><nested-query pos="24529"/><start-xquery pos="24530"/><xml-open-tag pos="24653"/><xml-name-end pos="24657"/><x-equals pos="24661"/><xml-att-quote pos="24662"/><xml-literal-start pos="24663"/><xml-att-quote pos="24692"/><xml-literal-end pos="24693"/><x-equals pos="24699"/><xml-att-quote pos="24700"/><xml-literal-start pos="24701"/><xml-att-quote pos="24714"/><x-tag-end pos="24715" length="2" level="5"/><start-xquery pos="24717"/><xml-open-tag pos="24718"/><x-tag-end pos="24725" length="1"/><nested-query pos="24726"/><start-xquery pos="24727"/><unnested-xquery pos="24732"/><xml-close-tag pos="24733"/><x-tag-end pos="24741" length="1"/><start-xquery pos="24742"/><unnested-xquery pos="24781"/><resume-x-literal-txt pos="24782"/><xml-close-tag pos="24795"/><x-tag-end pos="24798" length="1"/><nested-query pos="24799"/><start-xquery pos="24800"/><literal type="34" start="24800" end="24802"/><unnested-xquery pos="24803"/><xml-open-tag pos="24804"/><xml-name-end pos="24806"/><x-equals pos="24811"/><xml-att-quote pos="24812"/><xml-literal-start pos="24813"/><nested-query pos="24824"/><start-xquery pos="24825"/><unnested-xquery pos="24832"/><xml-att-quote pos="24833"/><x-tag-end pos="24834" length="1"/><xml-close-tag pos="24841"/><x-tag-end pos="24844" length="1"/><xml-close-tag pos="24845"/><x-tag-end pos="24850" length="1"/><start-xquery pos="24851"/><xml-open-tag pos="24886"/><x-tag-end pos="24890" length="1"/><xml-open-tag pos="24891"/><xml-name-end pos="24893"/><x-equals pos="24898"/><xml-att-quote pos="24899"/><xml-literal-start pos="24900"/><nested-query pos="24911"/><start-xquery pos="24912"/><unnested-xquery pos="24919"/><xml-att-quote pos="24920"/><x-tag-end pos="24921" length="1"/><nested-query pos="24936"/><start-xquery pos="24937"/><xml-open-tag pos="25060"/><xml-name-end pos="25064"/><x-equals pos="25068"/><xml-att-quote pos="25069"/><xml-literal-start pos="25070"/><xml-att-quote pos="25098"/><xml-literal-end pos="25099"/><x-equals pos="25105"/><xml-att-quote pos="25106"/><xml-literal-start pos="25107"/><xml-att-quote pos="25120"/><x-tag-end pos="25121" length="2" level="5"/><start-xquery pos="25123"/><xml-open-tag pos="25124"/><x-tag-end pos="25131" length="1"/><nested-query pos="25132"/><start-xquery pos="25133"/><unnested-xquery pos="25138"/><xml-close-tag pos="25139"/><x-tag-end pos="25147" length="1"/><start-xquery pos="25148"/><unnested-xquery pos="25187"/><resume-x-literal-txt pos="25188"/><xml-close-tag pos="25201"/><x-tag-end pos="25204" length="1"/><xml-close-tag pos="25205"/><x-tag-end pos="25210" length="1"/><start-xquery pos="25211"/><unnested-xquery pos="25249"/><resume-x-literal-txt pos="25250"/><xml-close-tag pos="25255"/><x-tag-end pos="25260" length="1"/><xml-close-tag pos="25265"/><x-tag-end pos="25270" length="1"/><start-xquery pos="25271"/><literal type="34" start="25788" end="25793"/><literal type="34" start="25849" end="25851"/><literal type="34" start="25991" end="25996"/><comment start="26018" end="26039"/><comment start="26050" end="26151"/><literal type="34" start="26316" end="26318"/><xml-open-tag pos="26829"/><x-tag-end pos="26833" length="1"/><nested-query pos="26848"/><start-xquery pos="26849"/><xml-open-tag pos="26866"/><xml-name-end pos="26870"/><x-equals pos="26876"/><xml-att-quote pos="26877"/><xml-literal-start pos="26878"/><xml-att-quote pos="26882"/><xml-literal-end pos="26883"/><x-equals pos="26887"/><xml-att-quote pos="26888"/><nested-query pos="26889"/><start-xquery pos="26890"/><unnested-xquery pos="26895"/><xml-att-quote pos="26896"/><xml-literal-end pos="26897"/><x-tag-end pos="26898" length="2" level="2"/><start-xquery pos="26900"/><literal type="34" start="26901" end="26903"/><unnested-xquery pos="26913"/><xml-open-tag pos="26914"/><x-tag-end pos="26921" length="1"/><nested-query pos="26922"/><start-xquery pos="26923"/><unnested-xquery pos="26929"/><xml-close-tag pos="26930"/><x-tag-end pos="26938" length="1"/><xml-open-tag pos="26955"/><xml-name-end pos="26960"/><x-equals pos="26966"/><xml-att-quote pos="26967"/><xml-literal-start pos="26968"/><xml-att-quote pos="26975"/><xml-literal-end pos="26976"/><x-equals pos="26986"/><xml-att-quote pos="26987"/><xml-literal-start pos="26988"/><xml-att-quote pos="26996"/><x-tag-end pos="26997" length="1"/><nested-query pos="27006"/><start-xquery pos="27007"/><comment start="27008" end="27016"/><literal type="34" start="27251" end="27267"/><xml-open-tag pos="27462"/><xml-name-end pos="27464"/><x-equals pos="27469"/><xml-att-quote pos="27470"/><xml-literal-start pos="27471"/><nested-query pos="27482"/><start-xquery pos="27483"/><unnested-xquery pos="27486"/><xml-att-quote pos="27487"/><x-tag-end pos="27488" length="1"/><xml-open-tag pos="27489"/><x-tag-end pos="27496" length="1"/><nested-query pos="27497"/><start-xquery pos="27498"/><unnested-xquery pos="27503"/><xml-close-tag pos="27504"/><x-tag-end pos="27512" length="1"/><xml-close-tag pos="27513"/><x-tag-end pos="27516" length="1"/><start-xquery pos="27517"/><unnested-xquery pos="27531"/><resume-x-literal-txt pos="27532"/><nested-query pos="27543"/><start-xquery pos="27544"/><comment start="27545" end="27556"/><literal type="34" start="27707" end="27709"/><comment start="27867" end="27978"/><literal type="34" start="28337" end="28339"/><literal type="34" start="28367" end="28369"/><literal type="34" start="28434" end="28436"/><xml-open-tag pos="28438"/><xml-name-end pos="28440"/><x-equals pos="28445"/><xml-att-quote pos="28446"/><xml-literal-start pos="28447"/><nested-query pos="28458"/><start-xquery pos="28459"/><unnested-xquery pos="28462"/><xml-att-quote pos="28463"/><x-tag-end pos="28464" length="1"/><xml-open-tag pos="28465"/><xml-name-end pos="28470"/><x-equals pos="28476"/><xml-att-quote pos="28477"/><nested-query pos="28478"/><start-xquery pos="28479"/><unnested-xquery pos="28485"/><resume-x-literal pos="28486"/><xml-att-quote pos="28496"/><xml-literal-end pos="28497"/><x-equals pos="28503"/><xml-att-quote pos="28504"/><xml-literal-start pos="28505"/><nested-query pos="28509"/><start-xquery pos="28510"/><unnested-xquery pos="28556"/><xml-att-quote pos="28557"/><x-tag-end pos="28558" length="1"/><nested-query pos="28573"/><start-xquery pos="28574"/><xml-open-tag pos="28699"/><xml-name-end pos="28706"/><x-equals pos="28712"/><xml-att-quote pos="28713"/><xml-literal-start pos="28714"/><xml-att-quote pos="28722"/><x-tag-end pos="28723" length="1"/><nested-query pos="28724"/><start-xquery pos="28725"/><unnested-xquery pos="28730"/><xml-close-tag pos="28731"/><x-tag-end pos="28739" length="1"/><start-xquery pos="28740"/><unnested-xquery pos="28779"/><resume-x-literal-txt pos="28780"/><xml-close-tag pos="28793"/><x-tag-end pos="28799" length="1"/><xml-close-tag pos="28800"/><x-tag-end pos="28803" length="1"/><start-xquery pos="28804"/><unnested-xquery pos="28833"/><resume-x-literal-txt pos="28834"/><xml-close-tag pos="28863"/><x-tag-end pos="28869" length="1"/><xml-close-tag pos="28878"/><x-tag-end pos="28883" length="1"/><start-xquery pos="28884"/><literal type="34" start="29141" end="29143"/><xml-open-tag pos="29171"/><x-tag-end pos="29175" length="1"/><nested-query pos="29187"/><start-xquery pos="29188"/><comment start="29188" end="29269"/><unnested-xquery pos="29270"/><resume-x-literal-txt pos="29271"/><nested-query pos="29282"/><start-xquery pos="29283"/><xml-open-tag pos="29300"/><x-tag-end pos="29303" length="1"/><nested-query pos="29304"/><start-xquery pos="29305"/><unnested-xquery pos="29311"/><xml-close-tag pos="29312"/><x-tag-end pos="29316" length="1"/><start-xquery pos="29317"/><unnested-xquery pos="29325"/><resume-x-literal-txt pos="29326"/><xml-open-tag pos="29340"/><xml-name-end pos="29344"/><x-equals pos="29350"/><xml-att-quote pos="29351"/><xml-literal-start pos="29352"/><xml-att-quote pos="29364"/><x-tag-end pos="29365" length="1"/><nested-query pos="29374"/><start-xquery pos="29375"/><comment start="29384" end="29392"/><literal type="34" start="29459" end="29463"/><literal type="34" start="29631" end="29637"/><literal type="34" start="29646" end="29648"/><xml-open-tag pos="29680"/><x-tag-end pos="29684" length="1"/><xml-open-tag pos="29685"/><xml-name-end pos="29687"/><x-equals pos="29692"/><xml-att-quote pos="29693"/><xml-literal-start pos="29694"/><nested-query pos="29705"/><start-xquery pos="29706"/><unnested-xquery pos="29709"/><xml-att-quote pos="29710"/><x-tag-end pos="29711" length="1"/><nested-query pos="29722"/><start-xquery pos="29723"/><xml-open-tag pos="29783"/><xml-name-end pos="29787"/><x-equals pos="29791"/><xml-att-quote pos="29792"/><xml-literal-start pos="29793"/><xml-att-quote pos="29818"/><xml-literal-end pos="29819"/><x-equals pos="29825"/><xml-att-quote pos="29826"/><xml-literal-start pos="29827"/><xml-att-quote pos="29840"/><x-tag-end pos="29841" length="2" level="5"/><start-xquery pos="29843"/><xml-open-tag pos="29844"/><x-tag-end pos="29851" length="1"/><nested-query pos="29852"/><start-xquery pos="29853"/><unnested-xquery pos="29858"/><xml-close-tag pos="29859"/><x-tag-end pos="29867" length="1"/><start-xquery pos="29868"/><unnested-xquery pos="29909"/><resume-x-literal-txt pos="29910"/><xml-close-tag pos="29920"/><x-tag-end pos="29923" length="1"/><xml-close-tag pos="29934"/><x-tag-end pos="29939" length="1"/><start-xquery pos="29940"/><comment start="29959" end="29973"/><literal type="34" start="30183" end="30187"/><xml-open-tag pos="30190"/><x-tag-end pos="30194" length="1"/><nested-query pos="30195"/><start-xquery pos="30196"/><unnested-xquery pos="30202"/><xml-close-tag pos="30203"/><x-tag-end pos="30208" length="1"/><start-xquery pos="30209"/><literal type="34" start="30376" end="30379"/><literal type="34" start="30388" end="30390"/><xml-open-tag pos="30441"/><x-tag-end pos="30445" length="1"/><xml-open-tag pos="30446"/><xml-name-end pos="30448"/><x-equals pos="30453"/><xml-att-quote pos="30454"/><xml-literal-start pos="30455"/><nested-query pos="30466"/><start-xquery pos="30467"/><unnested-xquery pos="30470"/><xml-att-quote pos="30471"/><x-tag-end pos="30472" length="1"/><nested-query pos="30499"/><start-xquery pos="30500"/><xml-open-tag pos="30585"/><xml-name-end pos="30589"/><x-equals pos="30593"/><xml-att-quote pos="30594"/><xml-literal-start pos="30595"/><xml-att-quote pos="30620"/><xml-literal-end pos="30621"/><x-equals pos="30627"/><xml-att-quote pos="30628"/><xml-literal-start pos="30629"/><xml-att-quote pos="30642"/><x-tag-end pos="30643" length="2" level="5"/><start-xquery pos="30645"/><xml-open-tag pos="30646"/><x-tag-end pos="30653" length="1"/><nested-query pos="30654"/><start-xquery pos="30655"/><unnested-xquery pos="30660"/><xml-close-tag pos="30661"/><x-tag-end pos="30669" length="1"/><start-xquery pos="30670"/><unnested-xquery pos="30733"/><resume-x-literal-txt pos="30734"/><xml-close-tag pos="30756"/><x-tag-end pos="30759" length="1"/><xml-close-tag pos="30760"/><x-tag-end pos="30765" length="1"/><start-xquery pos="30766"/><unnested-xquery pos="30780"/><resume-x-literal-txt pos="30781"/><xml-close-tag pos="30789"/><x-tag-end pos="30794" length="1"/><xml-close-tag pos="30805"/><x-tag-end pos="30810" length="1"/><start-xquery pos="30811"/><comment start="30966" end="31018"/><comment start="31025" end="31071"/><comment start="31289" end="31317"/><comment start="31324" end="31383"/><literal type="34" start="31938" end="31947"/><literal type="34" start="32088" end="32098"/><literal type="34" start="32240" end="32246"/><comment start="32400" end="32427"/><comment start="32432" end="32817"/><xml-open-tag pos="33075"/><xml-name-end pos="33080"/><x-equals pos="33086"/><xml-att-quote pos="33087"/><xml-literal-start pos="33088"/><xml-att-quote pos="33100"/><x-tag-end pos="33101" length="1"/><nested-query pos="33102"/><start-xquery pos="33103"/><unnested-xquery pos="33112"/><xml-close-tag pos="33113"/><x-tag-end pos="33119" length="1"/><start-xquery pos="33120"/><comment start="33145" end="33425"/><comment start="33598" end="33627"/><comment start="33632" end="34767"/><xml-open-tag pos="35098"/><xml-name-end pos="35100"/><x-equals pos="35106"/><xml-att-quote pos="35107"/><xml-literal-start pos="35108"/><xml-att-quote pos="35115"/><x-tag-end pos="35116" length="1"/><nested-query pos="35117"/><start-xquery pos="35118"/><xml-open-tag pos="35210"/><x-tag-end pos="35215" length="1"/><nested-query pos="35229"/><start-xquery pos="35230"/><unnested-xquery pos="35242"/><resume-x-literal-txt pos="35243"/><xml-open-tag pos="35256"/><x-tag-end pos="35261" length="1"/><nested-query pos="35275"/><start-xquery pos="35276"/><unnested-xquery pos="35288"/><resume-x-literal-txt pos="35289"/><xml-open-tag pos="35302"/><x-tag-end pos="35304" length="1"/><xml-close-tag pos="35308"/><x-tag-end pos="35311" length="1"/><xml-close-tag pos="35328"/><x-tag-end pos="35334" length="1"/><xml-close-tag pos="35345"/><x-tag-end pos="35351" length="1"/><start-xquery pos="35352"/><xml-open-tag pos="35378"/><xml-name-end pos="35380"/><x-equals pos="35385"/><xml-att-quote pos="35386"/><xml-literal-start pos="35387"/><xml-att-quote pos="35406"/><xml-literal-end pos="35407"/><x-equals pos="35418"/><xml-att-quote pos="35419"/><xml-literal-start pos="35420"/><nested-query pos="35427"/><start-xquery pos="35428"/><unnested-xquery pos="35432"/><resume-x-literal pos="35433"/><xml-att-quote pos="35460"/><xml-literal-end pos="35461"/><x-equals pos="35469"/><xml-att-quote pos="35470"/><xml-literal-start pos="35471"/><nested-query pos="35496"/><start-xquery pos="35497"/><unnested-xquery pos="35510"/><resume-x-literal pos="35511"/><nested-query pos="35577"/><start-xquery pos="35578"/><unnested-xquery pos="35599"/><resume-x-literal pos="35600"/><nested-query pos="35606"/><start-xquery pos="35607"/><unnested-xquery pos="35630"/><resume-x-literal pos="35631"/><xml-att-quote pos="35658"/><x-tag-end pos="35659" length="1"/><nested-query pos="35673"/><start-xquery pos="35674"/><unnested-xquery pos="35686"/><resume-x-literal-txt pos="35687"/><xml-open-tag pos="35700"/><x-tag-end pos="35705" length="1"/><nested-query pos="35719"/><start-xquery pos="35720"/><unnested-xquery pos="35732"/><resume-x-literal-txt pos="35733"/><xml-open-tag pos="35746"/><x-tag-end pos="35748" length="1"/><xml-close-tag pos="35752"/><x-tag-end pos="35755" length="1"/><xml-close-tag pos="35772"/><x-tag-end pos="35778" length="1"/><xml-close-tag pos="35789"/><x-tag-end pos="35792" length="1"/><start-xquery pos="35793"/><unnested-xquery pos="35798"/><xml-close-tag pos="35799"/><x-tag-end pos="35802" length="1"/><start-xquery pos="35803"/><xml-open-tag pos="35852"/><xml-name-end pos="35856"/><x-equals pos="35862"/><xml-att-quote pos="35863"/><xml-literal-start pos="35864"/><xml-att-quote pos="35871"/><x-tag-end pos="35872" length="1"/><nested-query pos="35877"/><start-xquery pos="35878"/><literal type="34" start="35888" end="35890"/><unnested-xquery pos="35891"/><resume-x-literal-txt pos="35892"/><xml-close-tag pos="35896"/><x-tag-end pos="35901" length="1"/><start-xquery pos="35902"/><xml-open-tag pos="35913"/><xml-name-end pos="35917"/><x-equals pos="35920"/><xml-att-quote pos="35921"/><xml-literal-start pos="35922"/><nested-query pos="35926"/><start-xquery pos="35927"/><unnested-xquery pos="35931"/><xml-att-quote pos="35932"/><xml-literal-end pos="35933"/><x-equals pos="35939"/><xml-att-quote pos="35940"/><xml-literal-start pos="35941"/><xml-att-quote pos="35956"/><x-tag-end pos="35957" length="1"/><xml-close-tag pos="35959"/><x-tag-end pos="35964" length="1"/><start-xquery pos="35965"/><comment start="35973" end="36329"/><comment start="36443" end="36954"/><literal type="34" start="37158" end="37171"/><literal type="34" start="37299" end="37305"/><xml-open-tag pos="37316"/><xml-name-end pos="37321"/><x-equals pos="37327"/><xml-att-quote pos="37328"/><nested-query pos="37329"/><start-xquery pos="37330"/><unnested-xquery pos="37351"/><xml-att-quote pos="37352"/><xml-literal-end pos="37353"/><x-equals pos="37359"/><xml-att-quote pos="37360"/><xml-literal-start pos="37361"/><xml-att-quote pos="37371"/><x-tag-end pos="37372" length="1"/><nested-query pos="37373"/><start-xquery pos="37374"/><xml-open-tag pos="37406"/><xml-name-end pos="37411"/><x-equals pos="37417"/><xml-att-quote pos="37418"/><xml-literal-start pos="37419"/><xml-att-quote pos="37429"/><x-tag-end pos="37430" length="1"/><nested-query pos="37431"/><start-xquery pos="37432"/><unnested-xquery pos="37508"/><xml-close-tag pos="37509"/><x-tag-end pos="37515" length="1"/><start-xquery pos="37516"/><unnested-xquery pos="37548"/><xml-close-tag pos="37549"/><x-tag-end pos="37555" length="1"/><start-xquery pos="37556"/><xml-open-tag pos="37600"/><xml-name-end pos="37604"/><x-equals pos="37610"/><xml-att-quote pos="37611"/><xml-literal-start pos="37612"/><xml-att-quote pos="37620"/><x-tag-end pos="37621" length="1"/><nested-query pos="37622"/><start-xquery pos="37623"/><unnested-xquery pos="37628"/><xml-close-tag pos="37629"/><x-tag-end pos="37634" length="1"/><start-xquery pos="37635"/><comment start="37664" end="37795"/><comment start="37868" end="38027"/><comment start="38218" end="38256"/><literal type="34" start="38330" end="38343"/><comment start="38376" end="38416"/><comment start="38612" end="38618"/><comment start="38851" end="38857"/><comment start="38891" end="38928"/><literal type="34" start="39018" end="39031"/><comment start="39074" end="39189"/><comment start="39295" end="39355"/><literal type="34" start="39476" end="39477"/><literal type="34" start="39520" end="39522"/><literal type="34" start="39550" end="39551"/><comment start="39655" end="39715"/><literal type="34" start="39844" end="39845"/><literal type="34" start="39888" end="39890"/><literal type="34" start="39928" end="39929"/><literal type="34" start="39972" end="39974"/><literal type="34" start="40064" end="40065"/><comment start="40082" end="40119"/><literal type="34" start="40191" end="40204"/><comment start="40229" end="40268"/><comment start="40456" end="40462"/><comment start="40691" end="40697"/><literal type="34" start="40762" end="40763"/><comment start="40786" end="40849"/><literal type="34" start="40982" end="40984"/><literal type="34" start="41025" end="41026"/><literal type="34" start="41134" end="41135"/><comment start="41158" end="41221"/><literal type="34" start="41354" end="41356"/><literal type="34" start="41397" end="41398"/><literal type="34" start="41476" end="41477"/><literal type="34" start="41550" end="41563"/><comment start="41732" end="41922"/><literal type="34" start="42090" end="42092"/><literal type="34" start="42103" end="42113"/><literal type="34" start="42120" end="42123"/><literal type="34" start="42238" end="42260"/><comment start="42300" end="42319"/><comment start="42324" end="42599"/><literal type="34" start="42714" end="42715"/><xml-open-tag pos="42728"/><xml-name-end pos="42732"/><x-equals pos="42738"/><xml-att-quote pos="42739"/><xml-literal-start pos="42740"/><xml-att-quote pos="42757"/><x-tag-end pos="42758" length="1"/><nested-query pos="42769"/><start-xquery pos="42770"/><literal type="34" start="42771" end="42780"/><xml-open-tag pos="42782"/><x-tag-end pos="42787" length="1"/><xml-open-tag pos="42792"/><x-tag-end pos="42794" length="1"/><nested-query pos="42795"/><start-xquery pos="42796"/><unnested-xquery pos="42805"/><xml-close-tag pos="42806"/><x-tag-end pos="42809" length="1"/><xml-close-tag pos="42810"/><x-tag-end pos="42816" length="1"/><start-xquery pos="42817"/><literal type="34" start="42818" end="42820"/><xml-open-tag pos="42867"/><x-tag-end pos="42872" length="1"/><xml-open-tag pos="42876"/><x-tag-end pos="42878" length="1"/><nested-query pos="42879"/><start-xquery pos="42880"/><unnested-xquery pos="42893"/><xml-close-tag pos="42894"/><x-tag-end pos="42897" length="1"/><xml-close-tag pos="42898"/><x-tag-end pos="42904" length="1"/><start-xquery pos="42905"/><xml-open-tag pos="42925"/><xml-name-end pos="42927"/><x-equals pos="42932"/><xml-att-quote pos="42933"/><xml-literal-start pos="42934"/><nested-query pos="42945"/><start-xquery pos="42946"/><literal type="34" start="42978" end="42980"/><unnested-xquery pos="42983"/><xml-att-quote pos="42984"/><x-tag-end pos="42985" length="1"/><xml-close-tag pos="42989"/><x-tag-end pos="42992" length="1"/><start-xquery pos="42993"/><unnested-xquery pos="42994"/><resume-x-literal-txt pos="42995"/><xml-close-tag pos="43001"/><x-tag-end pos="43006" length="1"/><start-xquery pos="43007"/><comment start="43063" end="43476"/><xml-open-tag pos="43760"/><xml-name-end pos="43764"/><x-equals pos="43770"/><xml-att-quote pos="43771"/><xml-literal-start pos="43772"/><xml-att-quote pos="43784"/><x-tag-end pos="43785" length="1"/><xml-open-tag pos="43793"/><x-tag-end pos="43798" length="1"/><xml-open-tag pos="43810"/><x-tag-end pos="43817" length="1"/><nested-query pos="43818"/><start-xquery pos="43819"/><unnested-xquery pos="43846"/><resume-x-literal-txt pos="43847"/><nested-query pos="43851"/><start-xquery pos="43852"/><unnested-xquery pos="43877"/><xml-close-tag pos="43878"/><x-tag-end pos="43886" length="1"/><xml-open-tag pos="43897"/><x-tag-end pos="43904" length="1"/><nested-query pos="43905"/><start-xquery pos="43906"/><unnested-xquery pos="43933"/><xml-close-tag pos="43934"/><x-tag-end pos="43942" length="1"/><xml-open-tag pos="43965"/><x-tag-end pos="43972" length="1"/><nested-query pos="43973"/><start-xquery pos="43974"/><unnested-xquery pos="43979"/><resume-x-literal-txt pos="43980"/><xml-close-tag pos="43981"/><x-tag-end pos="43989" length="1"/><xml-close-tag pos="43991"/><x-tag-end pos="43997" length="1"/><nested-query pos="43999"/><start-xquery pos="44000"/><literal type="34" start="44021" end="44023"/><xml-open-tag pos="44025"/><xml-name-end pos="44027"/><x-equals pos="44032"/><xml-att-quote pos="44033"/><xml-literal-start pos="44034"/><xml-att-quote pos="44044"/><x-tag-end pos="44045" length="1"/><xml-close-tag pos="44060"/><x-tag-end pos="44063" length="1"/><start-xquery pos="44064"/><unnested-xquery pos="44073"/><xml-close-tag pos="44074"/><x-tag-end pos="44079" length="1"/><start-xquery pos="44080"/><comment start="44087" end="44465"/><xml-open-tag pos="44575"/><xml-name-end pos="44579"/><x-equals pos="44585"/><xml-att-quote pos="44586"/><xml-literal-start pos="44587"/><xml-att-quote pos="44607"/><x-tag-end pos="44608" length="1"/><xml-open-tag pos="44616"/><xml-name-end pos="44621"/><x-equals pos="44628"/><xml-att-quote pos="44629"/><xml-literal-start pos="44630"/><xml-att-quote pos="44633"/><xml-literal-end pos="44634"/><x-equals pos="44641"/><xml-att-quote pos="44642"/><xml-literal-start pos="44643"/><xml-att-quote pos="44653"/><x-tag-end pos="44654" length="1"/><xml-open-tag pos="44669"/><xml-name-end pos="44676"/><x-equals pos="44681"/><xml-att-quote pos="44682"/><xml-literal-start pos="44683"/><xml-att-quote pos="44687"/><xml-literal-end pos="44688"/><x-equals pos="44697"/><xml-att-quote pos="44698"/><xml-literal-start pos="44699"/><xml-att-quote pos="44718"/><x-tag-end pos="44719" length="1"/><xml-open-tag pos="44734"/><xml-name-end pos="44741"/><x-equals pos="44747"/><xml-att-quote pos="44748"/><xml-literal-start pos="44749"/><xml-att-quote pos="44752"/><x-tag-end pos="44753" length="1"/><nested-query pos="44772"/><start-xquery pos="44773"/><literal type="34" start="44819" end="44823"/><literal type="34" start="44826" end="44827"/><literal type="34" start="44856" end="44865"/><unnested-xquery pos="44875"/><resume-x-literal-txt pos="44876"/><xml-close-tag pos="44925"/><x-tag-end pos="44933" length="1"/><xml-open-tag pos="44948"/><xml-name-end pos="44955"/><x-equals pos="44961"/><xml-att-quote pos="44962"/><xml-literal-start pos="44963"/><xml-att-quote pos="44967"/><x-tag-end pos="44968" length="1"/><nested-query pos="44987"/><start-xquery pos="44988"/><literal type="34" start="45008" end="45013"/><literal type="34" start="45042" end="45051"/><unnested-xquery pos="45061"/><resume-x-literal-txt pos="45062"/><xml-close-tag pos="45106"/><x-tag-end pos="45114" length="1"/><xml-close-tag pos="45129"/><x-tag-end pos="45137" length="1"/><nested-query pos="45146"/><start-xquery pos="45147"/><literal type="34" start="45192" end="45197"/><xml-open-tag pos="45227"/><xml-name-end pos="45233"/><x-equals pos="45238"/><xml-att-quote pos="45239"/><xml-literal-start pos="45240"/><xml-att-quote pos="45246"/><xml-literal-end pos="45247"/><x-equals pos="45252"/><xml-att-quote pos="45253"/><nested-query pos="45254"/><start-xquery pos="45255"/><unnested-xquery pos="45276"/><xml-att-quote pos="45277"/><xml-literal-end pos="45278"/><x-equals pos="45284"/><xml-att-quote pos="45285"/><xml-literal-start pos="45286"/><xml-att-quote pos="45290"/><xml-literal-end pos="45291"/><x-equals pos="45297"/><xml-att-quote pos="45298"/><nested-query pos="45299"/><start-xquery pos="45300"/><unnested-xquery pos="45306"/><xml-att-quote pos="45307"/><xml-literal-end pos="45308"/><x-tag-end pos="45309" length="2" level="3"/><start-xquery pos="45311"/><unnested-xquery pos="45311"/><resume-x-literal-txt pos="45312"/><xml-close-tag pos="45319"/><x-tag-end pos="45325" length="1"/><xml-close-tag pos="45332"/><x-tag-end pos="45337" length="1"/><start-xquery pos="45338"/><comment start="45358" end="45622"/><literal type="34" start="45745" end="45747"/><xml-open-tag pos="45772"/><xml-name-end pos="45777"/><x-equals pos="45784"/><xml-att-quote pos="45785"/><xml-literal-start pos="45786"/><xml-att-quote pos="45789"/><xml-literal-end pos="45790"/><x-equals pos="45797"/><xml-att-quote pos="45798"/><xml-literal-start pos="45799"/><xml-att-quote pos="45809"/><x-tag-end pos="45810" length="1"/><xml-open-tag pos="45819"/><xml-name-end pos="45825"/><x-equals pos="45830"/><xml-att-quote pos="45831"/><xml-literal-start pos="45832"/><xml-att-quote pos="45836"/><xml-literal-end pos="45837"/><x-equals pos="45842"/><xml-att-quote pos="45843"/><xml-literal-start pos="45844"/><xml-att-quote pos="45845"/><xml-literal-end pos="45846"/><x-equals pos="45852"/><xml-att-quote pos="45853"/><xml-literal-start pos="45854"/><xml-att-quote pos="45864"/><xml-literal-end pos="45865"/><x-equals pos="45868"/><xml-att-quote pos="45869"/><xml-literal-start pos="45870"/><xml-att-quote pos="45883"/><xml-literal-end pos="45884"/><x-equals pos="45890"/><xml-att-quote pos="45891"/><xml-literal-start pos="45892"/><xml-att-quote pos="45899"/><xml-literal-end pos="45900"/><x-equals pos="45906"/><xml-att-quote pos="45907"/><nested-query pos="45908"/><start-xquery pos="45909"/><unnested-xquery pos="45968"/><xml-att-quote pos="45969"/><xml-literal-end pos="45970"/><x-tag-end pos="45971" length="2" level="2"/><nested-query pos="45973"/><start-xquery pos="45974"/><literal type="34" start="45974" end="45976"/><unnested-xquery pos="45977"/><resume-x-literal-txt pos="45978"/><nested-query pos="45986"/><start-xquery pos="45987"/><xml-open-tag pos="46027"/><xml-name-end pos="46034"/><x-equals pos="46039"/><xml-att-quote pos="46040"/><xml-literal-start pos="46041"/><xml-att-quote pos="46046"/><xml-literal-end pos="46047"/><x-equals pos="46053"/><xml-att-quote pos="46054"/><xml-literal-start pos="46055"/><xml-att-quote pos="46089"/><x-tag-end pos="46090" length="1"/><nested-query pos="46107"/><start-xquery pos="46108"/><literal type="34" start="46211" end="46214"/><literal type="34" start="46346" end="46347"/><literal type="34" start="46417" end="46426"/><unnested-xquery pos="46485"/><resume-x-literal-txt pos="46486"/><xml-close-tag pos="46495"/><x-tag-end pos="46503" length="1"/><start-xquery pos="46504"/><unnested-xquery pos="46521"/><resume-x-literal-txt pos="46522"/><xml-open-tag pos="46530"/><xml-name-end pos="46536"/><x-equals pos="46541"/><xml-att-quote pos="46542"/><xml-literal-start pos="46543"/><xml-att-quote pos="46549"/><xml-literal-end pos="46550"/><x-equals pos="46556"/><xml-att-quote pos="46557"/><xml-literal-start pos="46558"/><xml-att-quote pos="46564"/><xml-literal-end pos="46565"/><x-equals pos="46571"/><xml-att-quote pos="46572"/><xml-literal-start pos="46573"/><xml-att-quote pos="46579"/><xml-literal-end pos="46580"/><x-tag-end pos="46581" length="2" level="2"/><nested-query pos="46591"/><start-xquery pos="46592"/><literal type="34" start="46643" end="46645"/><literal type="34" start="46648" end="46654"/><xml-open-tag pos="46679"/><xml-name-end pos="46685"/><x-equals pos="46690"/><xml-att-quote pos="46691"/><xml-literal-start pos="46692"/><xml-att-quote pos="46698"/><xml-literal-end pos="46699"/><x-equals pos="46704"/><xml-att-quote pos="46705"/><nested-query pos="46706"/><start-xquery pos="46707"/><unnested-xquery pos="46728"/><xml-att-quote pos="46729"/><xml-literal-end pos="46730"/><x-equals pos="46736"/><xml-att-quote pos="46737"/><xml-literal-start pos="46738"/><xml-att-quote pos="46742"/><xml-literal-end pos="46743"/><x-equals pos="46749"/><xml-att-quote pos="46750"/><nested-query pos="46751"/><start-xquery pos="46752"/><unnested-xquery pos="46758"/><xml-att-quote pos="46759"/><xml-literal-end pos="46760"/><x-tag-end pos="46761" length="2" level="2"/><start-xquery pos="46763"/><unnested-xquery pos="46763"/><resume-x-literal-txt pos="46764"/><xml-close-tag pos="46771"/><x-tag-end pos="46777" length="1"/><start-xquery pos="46778"/><comment start="46785" end="47135"/><xml-open-tag pos="47372"/><xml-name-end pos="47376"/><x-equals pos="47382"/><xml-att-quote pos="47383"/><xml-literal-start pos="47384"/><xml-att-quote pos="47389"/><x-tag-end pos="47390" length="1"/><nested-query pos="47405"/><start-xquery pos="47406"/><xml-open-tag pos="47439"/><xml-name-end pos="47441"/><x-equals pos="47447"/><xml-att-quote pos="47448"/><xml-literal-start pos="47449"/><xml-att-quote pos="47457"/><xml-literal-end pos="47458"/><x-equals pos="47464"/><xml-att-quote pos="47465"/><xml-literal-start pos="47466"/><xml-att-quote pos="47485"/><xml-literal-end pos="47486"/><x-equals pos="47491"/><xml-att-quote pos="47492"/><xml-literal-start pos="47493"/><nested-query pos="47504"/><start-xquery pos="47505"/><literal type="34" start="47537" end="47539"/><unnested-xquery pos="47542"/><resume-x-literal pos="47543"/><nested-query pos="47546"/><start-xquery pos="47547"/><unnested-xquery pos="47556"/><xml-att-quote pos="47557"/><x-tag-end pos="47558" length="1"/><xml-close-tag pos="47580"/><x-tag-end pos="47583" length="1"/><start-xquery pos="47584"/><unnested-xquery pos="47619"/><resume-x-literal-txt pos="47620"/><nested-query pos="47634"/><start-xquery pos="47635"/><xml-open-tag pos="47695"/><xml-name-end pos="47697"/><x-equals pos="47703"/><xml-att-quote pos="47704"/><xml-literal-start pos="47705"/><xml-att-quote pos="47713"/><xml-literal-end pos="47714"/><x-equals pos="47720"/><xml-att-quote pos="47721"/><nested-query pos="47722"/><start-xquery pos="47723"/><unnested-xquery pos="47743"/><xml-att-quote pos="47744"/><xml-literal-end pos="47745"/><x-equals pos="47750"/><xml-att-quote pos="47751"/><xml-literal-start pos="47752"/><nested-query pos="47763"/><start-xquery pos="47764"/><literal type="34" start="47796" end="47798"/><unnested-xquery pos="47801"/><resume-x-literal pos="47802"/><nested-query pos="47805"/><start-xquery pos="47806"/><unnested-xquery pos="47815"/><xml-att-quote pos="47816"/><x-tag-end pos="47817" length="1"/><nested-query pos="47818"/><start-xquery pos="47819"/><unnested-xquery pos="47839"/><xml-close-tag pos="47840"/><x-tag-end pos="47843" length="1"/><start-xquery pos="47844"/><unnested-xquery pos="47879"/><resume-x-literal-txt pos="47880"/><nested-query pos="47894"/><start-xquery pos="47895"/><xml-open-tag pos="47981"/><xml-name-end pos="47983"/><x-equals pos="47989"/><xml-att-quote pos="47990"/><xml-literal-start pos="47991"/><xml-att-quote pos="47999"/><xml-literal-end pos="48000"/><x-equals pos="48006"/><xml-att-quote pos="48007"/><nested-query pos="48008"/><start-xquery pos="48009"/><unnested-xquery pos="48029"/><xml-att-quote pos="48030"/><xml-literal-end pos="48031"/><x-equals pos="48036"/><xml-att-quote pos="48037"/><xml-literal-start pos="48038"/><nested-query pos="48049"/><start-xquery pos="48050"/><literal type="34" start="48082" end="48084"/><unnested-xquery pos="48087"/><resume-x-literal pos="48088"/><nested-query pos="48091"/><start-xquery pos="48092"/><unnested-xquery pos="48101"/><xml-att-quote pos="48102"/><x-tag-end pos="48103" length="1"/><nested-query pos="48104"/><start-xquery pos="48105"/><unnested-xquery pos="48125"/><xml-close-tag pos="48126"/><x-tag-end pos="48129" length="1"/><start-xquery pos="48130"/><unnested-xquery pos="48165"/><resume-x-literal-txt pos="48166"/><nested-query pos="48180"/><start-xquery pos="48181"/><xml-open-tag pos="48267"/><xml-name-end pos="48269"/><x-equals pos="48275"/><xml-att-quote pos="48276"/><xml-literal-start pos="48277"/><xml-att-quote pos="48285"/><xml-literal-end pos="48286"/><x-equals pos="48292"/><xml-att-quote pos="48293"/><nested-query pos="48294"/><start-xquery pos="48295"/><unnested-xquery pos="48315"/><xml-att-quote pos="48316"/><xml-literal-end pos="48317"/><x-equals pos="48322"/><xml-att-quote pos="48323"/><xml-literal-start pos="48324"/><nested-query pos="48335"/><start-xquery pos="48336"/><literal type="34" start="48368" end="48370"/><unnested-xquery pos="48373"/><resume-x-literal pos="48374"/><nested-query pos="48377"/><start-xquery pos="48378"/><unnested-xquery pos="48387"/><xml-att-quote pos="48388"/><x-tag-end pos="48389" length="1"/><nested-query pos="48390"/><start-xquery pos="48391"/><unnested-xquery pos="48411"/><xml-close-tag pos="48412"/><x-tag-end pos="48415" length="1"/><start-xquery pos="48416"/><unnested-xquery pos="48451"/><resume-x-literal-txt pos="48452"/><nested-query pos="48466"/><start-xquery pos="48467"/><xml-open-tag pos="48522"/><xml-name-end pos="48524"/><x-equals pos="48530"/><xml-att-quote pos="48531"/><xml-literal-start pos="48532"/><xml-att-quote pos="48540"/><xml-literal-end pos="48541"/><x-equals pos="48547"/><xml-att-quote pos="48548"/><nested-query pos="48549"/><start-xquery pos="48550"/><unnested-xquery pos="48570"/><xml-att-quote pos="48571"/><xml-literal-end pos="48572"/><x-equals pos="48577"/><xml-att-quote pos="48578"/><xml-literal-start pos="48579"/><nested-query pos="48590"/><start-xquery pos="48591"/><literal type="34" start="48623" end="48625"/><unnested-xquery pos="48628"/><resume-x-literal pos="48629"/><nested-query pos="48632"/><start-xquery pos="48633"/><unnested-xquery pos="48642"/><xml-att-quote pos="48643"/><x-tag-end pos="48644" length="1"/><nested-query pos="48645"/><start-xquery pos="48646"/><unnested-xquery pos="48666"/><xml-close-tag pos="48667"/><x-tag-end pos="48670" length="1"/><start-xquery pos="48671"/><unnested-xquery pos="48706"/><resume-x-literal-txt pos="48707"/><nested-query pos="48721"/><start-xquery pos="48722"/><xml-open-tag pos="48761"/><xml-name-end pos="48763"/><x-equals pos="48769"/><xml-att-quote pos="48770"/><xml-literal-start pos="48771"/><xml-att-quote pos="48779"/><xml-literal-end pos="48780"/><x-equals pos="48786"/><xml-att-quote pos="48787"/><nested-query pos="48788"/><start-xquery pos="48789"/><unnested-xquery pos="48805"/><xml-att-quote pos="48806"/><xml-literal-end pos="48807"/><x-equals pos="48812"/><xml-att-quote pos="48813"/><xml-literal-start pos="48814"/><nested-query pos="48825"/><start-xquery pos="48826"/><literal type="34" start="48858" end="48860"/><unnested-xquery pos="48863"/><resume-x-literal pos="48864"/><nested-query pos="48867"/><start-xquery pos="48868"/><unnested-xquery pos="48873"/><xml-att-quote pos="48874"/><x-tag-end pos="48875" length="1"/><xml-open-tag pos="48876"/><x-tag-end pos="48883" length="1"/><nested-query pos="48884"/><start-xquery pos="48885"/><unnested-xquery pos="48901"/><xml-close-tag pos="48902"/><x-tag-end pos="48910" length="1"/><xml-close-tag pos="48911"/><x-tag-end pos="48914" length="1"/><start-xquery pos="48915"/><unnested-xquery pos="48950"/><resume-x-literal-txt pos="48951"/><nested-query pos="48965"/><start-xquery pos="48966"/><xml-open-tag pos="49009"/><xml-name-end pos="49011"/><x-equals pos="49017"/><xml-att-quote pos="49018"/><xml-literal-start pos="49019"/><xml-att-quote pos="49027"/><xml-literal-end pos="49028"/><x-equals pos="49034"/><xml-att-quote pos="49035"/><nested-query pos="49036"/><start-xquery pos="49037"/><unnested-xquery pos="49057"/><xml-att-quote pos="49058"/><xml-literal-end pos="49059"/><x-equals pos="49064"/><xml-att-quote pos="49065"/><xml-literal-start pos="49066"/><nested-query pos="49077"/><start-xquery pos="49078"/><literal type="34" start="49110" end="49112"/><unnested-xquery pos="49115"/><resume-x-literal pos="49116"/><nested-query pos="49119"/><start-xquery pos="49120"/><unnested-xquery pos="49129"/><xml-att-quote pos="49130"/><x-tag-end pos="49131" length="1"/><nested-query pos="49132"/><start-xquery pos="49133"/><unnested-xquery pos="49153"/><xml-close-tag pos="49154"/><x-tag-end pos="49157" length="1"/><start-xquery pos="49158"/><unnested-xquery pos="49193"/><resume-x-literal-txt pos="49194"/><nested-query pos="49208"/><start-xquery pos="49209"/><xml-open-tag pos="49252"/><xml-name-end pos="49254"/><x-equals pos="49260"/><xml-att-quote pos="49261"/><xml-literal-start pos="49262"/><xml-att-quote pos="49271"/><xml-literal-end pos="49272"/><x-equals pos="49278"/><xml-att-quote pos="49279"/><nested-query pos="49280"/><start-xquery pos="49281"/><unnested-xquery pos="49301"/><xml-att-quote pos="49302"/><xml-literal-end pos="49303"/><x-equals pos="49308"/><xml-att-quote pos="49309"/><xml-literal-start pos="49310"/><nested-query pos="49321"/><start-xquery pos="49322"/><literal type="34" start="49354" end="49356"/><unnested-xquery pos="49359"/><resume-x-literal pos="49360"/><nested-query pos="49363"/><start-xquery pos="49364"/><unnested-xquery pos="49373"/><xml-att-quote pos="49374"/><x-tag-end pos="49375" length="1"/><nested-query pos="49376"/><start-xquery pos="49377"/><unnested-xquery pos="49397"/><xml-close-tag pos="49398"/><x-tag-end pos="49401" length="1"/><start-xquery pos="49402"/><unnested-xquery pos="49437"/><resume-x-literal-txt pos="49438"/><nested-query pos="49452"/><start-xquery pos="49453"/><xml-open-tag pos="49496"/><xml-name-end pos="49498"/><x-equals pos="49504"/><xml-att-quote pos="49505"/><xml-literal-start pos="49506"/><xml-att-quote pos="49515"/><xml-literal-end pos="49516"/><x-equals pos="49522"/><xml-att-quote pos="49523"/><nested-query pos="49524"/><start-xquery pos="49525"/><unnested-xquery pos="49545"/><xml-att-quote pos="49546"/><xml-literal-end pos="49547"/><x-equals pos="49552"/><xml-att-quote pos="49553"/><xml-literal-start pos="49554"/><nested-query pos="49565"/><start-xquery pos="49566"/><literal type="34" start="49598" end="49600"/><unnested-xquery pos="49603"/><resume-x-literal pos="49604"/><nested-query pos="49607"/><start-xquery pos="49608"/><unnested-xquery pos="49617"/><xml-att-quote pos="49618"/><x-tag-end pos="49619" length="1"/><nested-query pos="49620"/><start-xquery pos="49621"/><unnested-xquery pos="49641"/><xml-close-tag pos="49642"/><x-tag-end pos="49645" length="1"/><start-xquery pos="49646"/><unnested-xquery pos="49681"/><resume-x-literal-txt pos="49682"/><nested-query pos="49696"/><start-xquery pos="49697"/><xml-open-tag pos="49740"/><xml-name-end pos="49742"/><x-equals pos="49748"/><xml-att-quote pos="49749"/><xml-literal-start pos="49750"/><xml-att-quote pos="49759"/><xml-literal-end pos="49760"/><x-equals pos="49766"/><xml-att-quote pos="49767"/><nested-query pos="49768"/><start-xquery pos="49769"/><unnested-xquery pos="49789"/><xml-att-quote pos="49790"/><xml-literal-end pos="49791"/><x-equals pos="49796"/><xml-att-quote pos="49797"/><xml-literal-start pos="49798"/><nested-query pos="49809"/><start-xquery pos="49810"/><literal type="34" start="49842" end="49844"/><unnested-xquery pos="49847"/><resume-x-literal pos="49848"/><nested-query pos="49851"/><start-xquery pos="49852"/><unnested-xquery pos="49861"/><xml-att-quote pos="49862"/><x-tag-end pos="49863" length="1"/><nested-query pos="49864"/><start-xquery pos="49865"/><unnested-xquery pos="49885"/><xml-close-tag pos="49886"/><x-tag-end pos="49889" length="1"/><start-xquery pos="49890"/><unnested-xquery pos="49925"/><resume-x-literal-txt pos="49926"/><nested-query pos="49940"/><start-xquery pos="49941"/><xml-open-tag pos="49984"/><xml-name-end pos="49986"/><x-equals pos="49992"/><xml-att-quote pos="49993"/><xml-literal-start pos="49994"/><xml-att-quote pos="50003"/><xml-literal-end pos="50004"/><x-equals pos="50010"/><xml-att-quote pos="50011"/><nested-query pos="50012"/><start-xquery pos="50013"/><unnested-xquery pos="50033"/><xml-att-quote pos="50034"/><xml-literal-end pos="50035"/><x-equals pos="50040"/><xml-att-quote pos="50041"/><xml-literal-start pos="50042"/><nested-query pos="50053"/><start-xquery pos="50054"/><literal type="34" start="50086" end="50088"/><unnested-xquery pos="50091"/><resume-x-literal pos="50092"/><nested-query pos="50095"/><start-xquery pos="50096"/><unnested-xquery pos="50105"/><xml-att-quote pos="50106"/><x-tag-end pos="50107" length="1"/><nested-query pos="50108"/><start-xquery pos="50109"/><unnested-xquery pos="50129"/><xml-close-tag pos="50130"/><x-tag-end pos="50133" length="1"/><start-xquery pos="50134"/><unnested-xquery pos="50169"/><resume-x-literal-txt pos="50170"/><nested-query pos="50184"/><start-xquery pos="50185"/><xml-open-tag pos="50228"/><xml-name-end pos="50230"/><x-equals pos="50236"/><xml-att-quote pos="50237"/><xml-literal-start pos="50238"/><xml-att-quote pos="50247"/><xml-literal-end pos="50248"/><x-equals pos="50254"/><xml-att-quote pos="50255"/><nested-query pos="50256"/><start-xquery pos="50257"/><unnested-xquery pos="50277"/><xml-att-quote pos="50278"/><xml-literal-end pos="50279"/><x-equals pos="50284"/><xml-att-quote pos="50285"/><xml-literal-start pos="50286"/><nested-query pos="50297"/><start-xquery pos="50298"/><literal type="34" start="50330" end="50332"/><unnested-xquery pos="50335"/><resume-x-literal pos="50336"/><nested-query pos="50339"/><start-xquery pos="50340"/><unnested-xquery pos="50349"/><xml-att-quote pos="50350"/><x-tag-end pos="50351" length="1"/><nested-query pos="50352"/><start-xquery pos="50353"/><unnested-xquery pos="50373"/><xml-close-tag pos="50374"/><x-tag-end pos="50377" length="1"/><start-xquery pos="50378"/><unnested-xquery pos="50413"/><resume-x-literal-txt pos="50414"/><nested-query pos="50428"/><start-xquery pos="50429"/><xml-open-tag pos="50472"/><xml-name-end pos="50474"/><x-equals pos="50480"/><xml-att-quote pos="50481"/><xml-literal-start pos="50482"/><xml-att-quote pos="50491"/><xml-literal-end pos="50492"/><x-equals pos="50498"/><xml-att-quote pos="50499"/><nested-query pos="50500"/><start-xquery pos="50501"/><unnested-xquery pos="50521"/><xml-att-quote pos="50522"/><xml-literal-end pos="50523"/><x-equals pos="50528"/><xml-att-quote pos="50529"/><xml-literal-start pos="50530"/><nested-query pos="50541"/><start-xquery pos="50542"/><literal type="34" start="50574" end="50576"/><unnested-xquery pos="50579"/><resume-x-literal pos="50580"/><nested-query pos="50583"/><start-xquery pos="50584"/><unnested-xquery pos="50593"/><xml-att-quote pos="50594"/><x-tag-end pos="50595" length="1"/><nested-query pos="50596"/><start-xquery pos="50597"/><unnested-xquery pos="50617"/><xml-close-tag pos="50618"/><x-tag-end pos="50621" length="1"/><start-xquery pos="50622"/><unnested-xquery pos="50657"/><resume-x-literal-txt pos="50658"/><nested-query pos="50672"/><start-xquery pos="50673"/><xml-open-tag pos="50716"/><xml-name-end pos="50718"/><x-equals pos="50724"/><xml-att-quote pos="50725"/><xml-literal-start pos="50726"/><xml-att-quote pos="50735"/><xml-literal-end pos="50736"/><x-equals pos="50742"/><xml-att-quote pos="50743"/><nested-query pos="50744"/><start-xquery pos="50745"/><unnested-xquery pos="50765"/><xml-att-quote pos="50766"/><xml-literal-end pos="50767"/><x-equals pos="50772"/><xml-att-quote pos="50773"/><xml-literal-start pos="50774"/><nested-query pos="50785"/><start-xquery pos="50786"/><literal type="34" start="50818" end="50820"/><unnested-xquery pos="50823"/><resume-x-literal pos="50824"/><nested-query pos="50827"/><start-xquery pos="50828"/><unnested-xquery pos="50837"/><xml-att-quote pos="50838"/><x-tag-end pos="50839" length="1"/><nested-query pos="50840"/><start-xquery pos="50841"/><unnested-xquery pos="50861"/><xml-close-tag pos="50862"/><x-tag-end pos="50865" length="1"/><start-xquery pos="50866"/><unnested-xquery pos="50901"/><resume-x-literal-txt pos="50902"/><nested-query pos="50916"/><start-xquery pos="50917"/><xml-open-tag pos="50978"/><xml-name-end pos="50980"/><x-equals pos="50986"/><xml-att-quote pos="50987"/><xml-literal-start pos="50988"/><xml-att-quote pos="50997"/><xml-literal-end pos="50998"/><x-equals pos="51004"/><xml-att-quote pos="51005"/><nested-query pos="51006"/><start-xquery pos="51007"/><unnested-xquery pos="51027"/><xml-att-quote pos="51028"/><xml-literal-end pos="51029"/><x-equals pos="51034"/><xml-att-quote pos="51035"/><xml-literal-start pos="51036"/><nested-query pos="51047"/><start-xquery pos="51048"/><literal type="34" start="51080" end="51082"/><unnested-xquery pos="51085"/><resume-x-literal pos="51086"/><nested-query pos="51089"/><start-xquery pos="51090"/><unnested-xquery pos="51099"/><xml-att-quote pos="51100"/><x-tag-end pos="51101" length="1"/><nested-query pos="51102"/><start-xquery pos="51103"/><unnested-xquery pos="51123"/><xml-close-tag pos="51124"/><x-tag-end pos="51127" length="1"/><start-xquery pos="51128"/><unnested-xquery pos="51163"/><resume-x-literal-txt pos="51164"/><nested-query pos="51178"/><start-xquery pos="51179"/><xml-open-tag pos="51222"/><xml-name-end pos="51224"/><x-equals pos="51230"/><xml-att-quote pos="51231"/><xml-literal-start pos="51232"/><xml-att-quote pos="51240"/><xml-literal-end pos="51241"/><x-equals pos="51247"/><xml-att-quote pos="51248"/><xml-literal-start pos="51249"/><xml-att-quote pos="51264"/><xml-literal-end pos="51265"/><x-equals pos="51270"/><xml-att-quote pos="51271"/><xml-literal-start pos="51272"/><nested-query pos="51283"/><start-xquery pos="51284"/><literal type="34" start="51316" end="51318"/><unnested-xquery pos="51321"/><resume-x-literal pos="51322"/><nested-query pos="51325"/><start-xquery pos="51326"/><unnested-xquery pos="51335"/><xml-att-quote pos="51336"/><x-tag-end pos="51337" length="1"/><xml-close-tag pos="51355"/><x-tag-end pos="51358" length="1"/><start-xquery pos="51359"/><unnested-xquery pos="51394"/><resume-x-literal-txt pos="51395"/><xml-close-tag pos="51405"/><x-tag-end pos="51410" length="1"/><start-xquery pos="51411"/><xml-open-tag pos="51620"/><xml-name-end pos="51624"/><x-equals pos="51630"/><xml-att-quote pos="51631"/><xml-literal-start pos="51632"/><xml-att-quote pos="51649"/><x-tag-end pos="51650" length="1"/><xml-open-tag pos="51673"/><x-tag-end pos="51678" length="1"/><xml-close-tag pos="51682"/><x-tag-end pos="51688" length="1"/><nested-query pos="51689"/><start-xquery pos="51690"/><literal type="34" start="51690" end="51692"/><unnested-xquery pos="51693"/><resume-x-literal-txt pos="51694"/><nested-query pos="51708"/><start-xquery pos="51709"/><literal type="34" start="52043" end="52046"/><xml-open-tag pos="52074"/><x-tag-end pos="52079" length="1"/><nested-query pos="52080"/><start-xquery pos="52081"/><unnested-xquery pos="52091"/><resume-x-literal-txt pos="52092"/><nested-query pos="52113"/><start-xquery pos="52114"/><literal type="34" start="52239" end="52244"/><xml-open-tag pos="52255"/><x-tag-end pos="52257" length="1"/><nested-query pos="52258"/><start-xquery pos="52259"/><unnested-xquery pos="52288"/><xml-close-tag pos="52289"/><x-tag-end pos="52292" length="1"/><start-xquery pos="52293"/><literal type="34" start="52295" end="52297"/><xml-open-tag pos="52325"/><xml-name-end pos="52327"/><x-equals pos="52332"/><xml-att-quote pos="52333"/><xml-literal-start pos="52334"/><nested-query pos="52345"/><start-xquery pos="52346"/><literal type="34" start="52432" end="52434"/><unnested-xquery pos="52448"/><xml-att-quote pos="52449"/><x-tag-end pos="52450" length="1"/><xml-close-tag pos="52454"/><x-tag-end pos="52457" length="1"/><start-xquery pos="52458"/><unnested-xquery pos="52477"/><resume-x-literal-txt pos="52478"/><xml-close-tag pos="52496"/><x-tag-end pos="52502" length="1"/><start-xquery pos="52503"/><unnested-xquery pos="52536"/><resume-x-literal-txt pos="52537"/><nested-query pos="52551"/><start-xquery pos="52552"/><literal type="34" start="52591" end="52609"/><xml-open-tag pos="52612"/><x-tag-end pos="52614" length="1"/><nested-query pos="52615"/><start-xquery pos="52616"/><literal type="34" start="52656" end="52659"/><literal type="34" start="52662" end="52663"/><unnested-xquery pos="52665"/><resume-x-literal-txt pos="52666"/><nested-query pos="52666"/><start-xquery pos="52667"/><literal type="34" start="52667" end="52673"/><unnested-xquery pos="52674"/><xml-close-tag pos="52675"/><x-tag-end pos="52678" length="1"/><start-xquery pos="52679"/><literal type="34" start="52681" end="52683"/><xml-open-tag pos="52699"/><xml-name-end pos="52701"/><x-equals pos="52706"/><xml-att-quote pos="52707"/><xml-literal-start pos="52708"/><nested-query pos="52719"/><start-xquery pos="52720"/><literal type="34" start="52772" end="52776"/><unnested-xquery pos="52799"/><xml-att-quote pos="52800"/><x-tag-end pos="52801" length="1"/><xml-close-tag pos="52805"/><x-tag-end pos="52808" length="1"/><start-xquery pos="52809"/><unnested-xquery pos="52831"/><resume-x-literal-txt pos="52832"/><xml-close-tag pos="52842"/><x-tag-end pos="52847" length="1"/><start-xquery pos="52848"/><xml-open-tag pos="53264"/><x-tag-end pos="53282" length="1"/><nested-query pos="53283"/><start-xquery pos="53284"/><literal type="34" start="53301" end="53306"/><literal type="34" start="53309" end="53313"/><literal type="34" start="53316" end="53320"/><literal type="34" start="53526" end="53530"/><xml-open-tag pos="53606"/><xml-name-end pos="53612"/><x-equals pos="53618"/><xml-att-quote pos="53619"/><nested-query pos="53620"/><start-xquery pos="53621"/><unnested-xquery pos="53623"/><xml-att-quote pos="53624"/><x-tag-end pos="53625" length="1"/><nested-query pos="53626"/><start-xquery pos="53627"/><xml-open-tag pos="53674"/><xml-name-end pos="53679"/><x-equals pos="53685"/><xml-att-quote pos="53686"/><nested-query pos="53687"/><start-xquery pos="53688"/><unnested-xquery pos="53693"/><xml-att-quote pos="53694"/><x-tag-end pos="53695" length="2" level="3"/><start-xquery pos="53697"/><unnested-xquery pos="53703"/><xml-close-tag pos="53704"/><x-tag-end pos="53711" length="1"/><start-xquery pos="53712"/><unnested-xquery pos="53718"/><xml-close-tag pos="53719"/><x-tag-end pos="53738" length="1"/><start-xquery pos="53739"/><literal type="34" start="53868" end="53870"/><literal type="34" start="54035" end="54037"/><terminate-xquery/><tokens><span class="comment">(:&#xD;
 : search-ui.xqy&#xD;
 :&#xD;
 : Copyright (c) 2008 Mark Logic Corporation. All rights reserved.&#xD;
 :&#xD;
 : Licensed under the Apache License, Version 2.0 (the "License");&#xD;
 : you may not use this file except in compliance with the License.&#xD;
 : You may obtain a copy of the License at&#xD;
 :&#xD;
 :     http://www.apache.org/licenses/LICENSE-2.0&#xD;
 :&#xD;
 : Unless required by applicable law or agreed to in writing, software&#xD;
 : distributed under the License is distributed on an "AS IS" BASIS,&#xD;
 : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xD;
 : See the License for the specific language governing permissions and&#xD;
 : limitations under the License.&#xD;
 :&#xD;
 :&#xD;
 : Search UI Library&#xD;
 : This library has over 1,000 lines of code used specifically for&#xD;
 : creating search experiences in an end-to-end XQuery application.&#xD;
 : Primarily used in demos and prototypes to speed development of common&#xD;
 : search-related tasks.&#xD;
 : &#xD;
 : This library is meant to be changed to suit your application's needs.&#xD;
 : Please test your application when using this library.&#xD;
 :&#xD;
 : Coordinator:&#xD;
 : @author &lt;a href="mailto:chris.welch@marklogic.com"&gt;Chris Welch&lt;/a&gt;&#xD;
 :&#xD;
 : @requires MarkLogic Server 3.2&#xD;
 : @requires Versi&#xD;
 : @requires lib-search&#xD;
 : @requires lib-uitools&#xD;
 : All are available for download on developer.marklogic.com&#xD;
 : Format: 3.2-YYYY-MM-DD.[Incremental]&#xD;
 : @version 3.2-2008-06-10&#xD;
 :&#xD;
 :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">module</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/versi/search-ui</span><span class="op">"</span><span class="open"/><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">import</span><span class="whitespace"> </span><span class="qname">module</span><span class="whitespace"> </span><span class="qname">namespace</span><span class="whitespace"> </span><span class="qname">search</span><span class="op">=</span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/lib/lib-search</span><span class="op">"</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">lib-search.xqy</span><span class="op">"</span><span class="whitespace">&#xD;
</span><span class="qname">import</span><span class="whitespace"> </span><span class="qname">module</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/lib/lib-search</span><span class="op">"</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">lib-search-custom.xqy</span><span class="op">"</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">import</span><span class="whitespace"> </span><span class="qname">module</span><span class="whitespace"> </span><span class="qname">namespace</span><span class="whitespace"> </span><span class="qname">uit</span><span class="op">=</span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/lib/lib-uitools</span><span class="op">"</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">lib-uitools.xqy</span><span class="op">"</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Defines the fields in which a user can search in. Each item should be in the format "[scope-id]|[display-name]" :)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">variable</span><span class="whitespace"> </span><span class="variable">$SEARCH-FIELDS</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">{</span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">|Anywhere</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">title|Headline</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Enable the date range search boxes in the advance search forms :)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">variable</span><span class="whitespace"> </span><span class="variable">$ENABLE-DATE-CRITERIA</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:boolean</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace"> </span><span class="function">fn:false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: The default rendering mode for value facets :)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">variable</span><span class="whitespace"> </span><span class="variable">$DEFAULT-FACET-MODE</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">add</span><span class="op">"</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace"> </span><span class="comment">(: "mixed | one | add" :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:-- Search UI Functions --:)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Converts &lt;params&gt; into &lt;search:search-criteria&gt;.  &#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return The equivalent search-criteria XML.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">params-to-query</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$start-date</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-year</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-day</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$end-date</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-year</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-day</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
    	</span><span class="function">build-query-element</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="function">xdmp:url-decode</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> &#xD;
    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$start-date</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$end-date</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">build-query-element</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$text</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$field</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$collections</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$values</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$start-date</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:date</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$end-date</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:date</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$duration</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:duration</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$sort</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="whitespace">&#xD;
    </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">search-criteria</span><span class="atn"> fast-pagination</span><span class="atneq">=</span><span class="z">"</span><span class="av">true</span><span class="z">"</span><span class="atn"> xmlns</span><span class="atneq">=</span><span class="z">"</span><span class="av">http://www.marklogic.com/ps/lib/lib-search</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$text</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">term</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">text</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$text</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">text</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="es">&lt;</span><span class="en">scope-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$field</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">scope-id</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">term</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="function">construct-collection-criteria</span><span class="parenthesis">(</span><span class="variable">$collections</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="function">construct-value-criteria</span><span class="parenthesis">(</span><span class="variable">$values</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$start-date</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$end-date</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">date-range</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$start-date</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">from</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$start-date</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">from</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$end-date</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">to</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$end-date</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">to</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">date-range</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$duration</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">date-range</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="es">&lt;</span><span class="en">trailing-duration</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$duration</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">trailing-duration</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">date-range</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$text</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$sort</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">rel</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$sort</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="es">&lt;</span><span class="en">sort</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">sort-field-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$sort</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">sort-field-id</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">sort</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">sort</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">sort-field-id</span><span class="z">&gt;</span><span class="txt">date</span><span class="sc">&lt;/</span><span class="cl">sort-field-id</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">sort</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">}</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">search-criteria</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">construct-collection-criteria</span><span class="parenthesis">(</span><span class="variable">$collections</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-ids</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">fn:distinct-values</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$collections</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
               </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$criteria</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$set-ids</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$names</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$collections</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">search:value</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">search:value</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$names</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">all</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">collections</span><span class="atn"> xmlns</span><span class="atneq">=</span><span class="z">"</span><span class="av">http://www.marklogic.com/ps/lib/lib-search</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="es">&lt;</span><span class="en">set-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$set-id</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">set-id</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="variable">$names</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">collections</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="variable">$criteria</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">construct-value-criteria</span><span class="parenthesis">(</span><span class="variable">$search-values</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$scope-ids</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">fn:distinct-values</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$search-values</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
               </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$criteria</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$scope-ids</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$values</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$search-values</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">search:value</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">search:value</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$values</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">all</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">values</span><span class="atn"> xmlns</span><span class="atneq">=</span><span class="z">"</span><span class="av">http://www.marklogic.com/ps/lib/lib-search</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="es">&lt;</span><span class="en">scope-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$set-id</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">scope-id</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="variable">$values</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">values</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="variable">$criteria</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$raw</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:</span><span class="op">'</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$raw</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">(</span><span class="variable">$raw</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="variable">$raw</span><span class="filter">[</span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$raw</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:-- Search Form Controls --:)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders an advanced search form, including building&#xD;
: parametric select boxes based on facet information. &#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $facet-defs The facets to use to build the advanced search form.&#xD;
: @return A &lt;form&gt; containing the rendered search form.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-form</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
	</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
	</span><span class="variable">$facet-defs</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-defs</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">form</span><span class="atn"> action</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="atn"> method</span><span class="atneq">=</span><span class="z">"</span><span class="av">get</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">	    &#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">background:#F8F8F8;border:1px solid #D0D0D0;width:38em;padding:.6em .7em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="axis">element</span><span class="whitespace"> </span><span class="qname">input</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace">&#xD;
                    </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">id</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">adv-search-terms</span><span class="op">"</span><span class="open"/><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">name</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="open"/><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">type</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">text</span><span class="op">"</span><span class="open"/><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">style</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">display:inline;width:250px;padding:.2em .3em;</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">value</span><span class="whitespace"> </span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="op">}</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$SEARCH-FIELDS</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">field</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">display:inline;margin-left:.3em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="op">{</span><span class="open"/><span class="whitespace">     &#xD;
    			</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$option</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$SEARCH-FIELDS</span><span class="whitespace">&#xD;
    			</span><span class="op">return</span><span class="whitespace">&#xD;
					</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$option</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">\|</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
					</span><span class="op">return</span><span class="whitespace"> &#xD;
						</span><span class="axis">element</span><span class="whitespace"> </span><span class="qname">option</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace">&#xD;
							</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">value</span><span class="whitespace"> </span><span class="op">{</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">}</span><span class="op">,</span><span class="whitespace">&#xD;
							</span><span class="if">if(</span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> &#xD;
								</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
							</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
							</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace">&#xD;
						</span><span class="op">}</span><span class="whitespace">&#xD;
    			</span><span class="op">}</span><span class="txt">&#xD;
		    </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="whitespace">&#xD;
		    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="filter">[</span><span class="qname">search:collection-set-facet</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="function">search-form-control-collection-set</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                </span><span class="variable">$params</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="variable">$facet</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="variable">$pos</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$ENABLE-DATE-CRITERIA</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">search-form-control-discrete-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">Search</span><span class="z">"</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">submit</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">button</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">display:block;margin:.5em .5em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
	</span><span class="sc">&lt;/</span><span class="cl">form</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-form-control-collection-set</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$facet-def</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-def</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$position</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="whitespace">&#xD;
    </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$collection-set-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet-def</span><span class="step">/</span><span class="qname">search:collection-set-facet</span><span class="step">/</span><span class="qname">search:set-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$resolved-facet</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">search:resolve-facet</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">search:search-criteria</span><span class="atn"> </span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-def</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin: .7em .7em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="txt"> [Article Count]:</span><span class="es">&lt;</span><span class="en">br</span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> id</span><span class="atneq">=</span><span class="z">"</span><span class="av">select-</span><span class="op">{</span><span class="variable">$position</span><span class="op">}</span><span class="z">"</span><span class="atn"> multiple</span><span class="atneq">=</span><span class="z">"</span><span class="av">multiple</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">coll</span><span class="z">"</span><span class="atn"> size</span><span class="atneq">=</span><span class="z">"</span><span class="av">4</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:300px;</span><span class="z">"</span><span class="atn"> </span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="open"/><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                All </span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$resolved-facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> &#xD;
                </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$value</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                	</span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                	</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
                	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                	</span><span class="op">{</span><span class="open"/><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="op">}</span><span class="txt">&#xD;
     	</span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
     </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-form-control-discrete-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin: .7em .7em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        Date:</span><span class="es">&lt;</span><span class="en">br</span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin-top:.3em</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">label</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">font-weight:bold;float:left;margin-top:.4em;width:4em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">Start: </span><span class="sc">&lt;/</span><span class="cl">label</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">start-month</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">01</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">01</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">January</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">02</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">02</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">February</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">03</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">03</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">March</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">04</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">04</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">April</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">05</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">05</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">May</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">06</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">06</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">June</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">07</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">07</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">July</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">08</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">08</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">August</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">09</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">09</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">September</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">10</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">10</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">October</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">11</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">11</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">November</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">12</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">12</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">December</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">start-day</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-day</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:2em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">start-year</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-year</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:4em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">label</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">font-weight:bold;float:left;margin-top:.4em;width:4em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">End: </span><span class="sc">&lt;/</span><span class="cl">label</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">end-month</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">01</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">01</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">January</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">02</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">02</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">February</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">03</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">03</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">March</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">04</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">04</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">April</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">05</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">05</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">May</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">06</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">06</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">June</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">07</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">07</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">July</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">08</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">08</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">August</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">09</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">09</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">September</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">10</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">10</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">October</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">11</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">11</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">November</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">12</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">12</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">December</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">end-day</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-day</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:2em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">end-year</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-year</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:4em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
 	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">attribute</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Search Facets Functions :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: &#xD;
   The format of the facet definitions is proscribed by lib-search. You can also&#xD;
   include custom elements which search-ui.xqy will use when rendering your facet.&#xD;
   Make sure to pass the custom section for each facet, which contains:&#xD;
   facet-def/custom/title : The heading used to display all related UI controls.&#xD;
   facet-def/custom/sort : default (default), count, name-asc, name-desc&#xD;
   facet-def/custom/icon : an image filename, used in the analysis panel only&#xD;
   facet-def/custom/qs-id : for collection and value facets, scope-ids should be used,&#xD;
       and this should match the name of the scope-id&#xD;
   facet-def/custom/mode : currently used only in value facets, changes how the user&#xD;
       interacts with the facet.&#xD;
   &#xD;
   For more information on defining facets, see the Search Library Guide.&#xD;
&#xD;
    &lt;facet-defs xmlns="http://www.marklogic.com/ps/lib/lib-search"&gt;&#xD;
        &lt;facet-def&gt;&#xD;
        ...&#xD;
        &lt;custom&gt;&#xD;
            &lt;sort&gt;name-asc&lt;/sort&gt;&#xD;
            &lt;qs-id&gt;comp&lt;/qs-id&gt;&#xD;
            &lt;title&gt;Companies&lt;/title&gt;&#xD;
            &lt;icon&gt;/images/silk/building.png&lt;/icon&gt;&#xD;
            &lt;mode&gt;mixed|one|add&lt;/mode&gt;&#xD;
        &lt;/custom&gt;&#xD;
        &lt;/facet-def&gt;&#xD;
    &lt;/facet-defs&gt;&#xD;
:)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders an facets meant to be displayed on the sidebar of&#xD;
: the search page.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $facet-defs The facets to use to build the advanced search form.&#xD;
: @return The rendered HTML facets.&#xD;
:)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-facets</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-defs</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$rendered-facets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">params-to-query</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">search:resolve-facets</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="step">/</span><span class="qname">search:facet</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:collection-set-facet</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="function">collection-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:value-facet</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:trailing-date-facet</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="function">trailing-date-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="comment">(: Unhandled facet type&#xD;
            else if ($facet[search:facet-def/search:date-group-facet]) then&#xD;
                (date-group-facet($params, $facet)):)</span><span class="open"/><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$rendered-facets</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$rendered-facets</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders tag clouds meant to be displayed on the top of&#xD;
: the search page. The items in the tag cloud are given a 1-6 "heat" rating,&#xD;
: which can be individually styled. The heat rating is determined, and can&#xD;
: be customized using the "determine-heat" function.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $facet-defs The facets to use to build the advanced search form.&#xD;
: @return The rendered HTML tag clouds&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-results-analysis</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-defs</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">params-to-query</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">search:resolve-facets</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facets</span><span class="step">/</span><span class="qname">search:facet</span><span class="step">/</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">analysis-panel</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">header</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">These documents contain references to:&amp;nbsp;&amp;nbsp;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">hval</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[CLEAR FILTERS]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="step">/</span><span class="qname">search:facet</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="function">value-heatmap</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: NB: This facet doesn't yet support facet modes. It must be added later :)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">collection-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">coll</span><span class="op">"</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$collection-set-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:collection-set-facet</span><span class="step">/</span><span class="qname">search:set-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="comment">(: Collection Management :)</span><span class="whitespace">&#xD;
    </span><span class="comment">(: Selects the param values that are within scope (ie have been returned from) of the current facet :)</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$passed-colls</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:starts-with</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$collection-set-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$out-of-scope-colls</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$passed-colls</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$out-of-scope-colls</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$out-of-scope-colls</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace">&#xD;
    &#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="open"/><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$title</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">h3</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">h3</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">search_facet</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: ALL :)</span><span class="open"/><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$facet-colls</span><span class="op">,</span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">All [</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="op">return</span><span class="whitespace">			&#xD;
        	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        		</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
        		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        		    </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        			</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	     			</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_black.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        		</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
        		</span><span class="op">}</span><span class="txt">&#xD;
        	</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: COLLECTIONS :)</span><span class="open"/><span class="whitespace">&#xD;
    	</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
 			</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
			   from params, else add to the params :)</span><span class="open"/><span class="whitespace">&#xD;
			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
	    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
				</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$value</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
			</span><span class="op">else</span><span class="whitespace">&#xD;
				</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
					</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
					</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	</span><span class="op">return</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
	    			</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_delete.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
	    			</span><span class="op">}</span><span class="txt">&#xD;
	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
	    	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
 		</span><span class="op">}</span><span class="txt">&#xD;
 		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
 	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace"> </span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="comment">(: mode == (one, add, mixed) :)</span><span class="open"/><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
	    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$mode</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:mode</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:mode</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace">&#xD;
	            </span><span class="variable">$DEFAULT-FACET-MODE</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">val</span><span class="op">"</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="comment">(: Value Management :)</span><span class="whitespace">&#xD;
    </span><span class="comment">(: Selects the param values that are within scope (ie have been returned from) of the current facet :)</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:starts-with</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$out-of-scope-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$out-of-scope-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$out-of-scope-vals</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace">&#xD;
    &#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="open"/><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$title</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">h3</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">h3</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">search_facet</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: ALL :)</span><span class="open"/><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$facet-vals</span><span class="op">,</span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">All [</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="op">return</span><span class="whitespace">			&#xD;
        	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        		</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
        		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        		    </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        			</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	     			</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_black.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        		</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
        		</span><span class="op">}</span><span class="txt">&#xD;
        	</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: VALUES :)</span><span class="open"/><span class="whitespace">&#xD;
    	</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$add-qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
     		</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
    		   from params, else add to the params :)</span><span class="open"/><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
        		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    			</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$value</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="op">else</span><span class="whitespace">&#xD;
    			</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    				</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$one-qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
     		</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
    		   from params, else add to the params :)</span><span class="open"/><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$stripped-params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> &#xD;
    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$passed-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    			    </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$passed-vals</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="op">else</span><span class="whitespace">&#xD;
    			    </span><span class="variable">$params</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
        		</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        			</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$stripped-params</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
        			</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">add</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$add-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_delete.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">mixed</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$add-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_delete.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="op">{</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$one-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">(only)</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace">&#xD;
    	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$one-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_black.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
                &#xD;
	    	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
 		</span><span class="op">}</span><span class="txt">&#xD;
 		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
 	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">value-heatmap</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$icon</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:icon</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="quantifier">?</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="quantifier">?</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:max</span><span class="parenthesis">(</span><span class="variable">$max-count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">hval</span><span class="op">"</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        &#xD;
        </span><span class="comment">(: Value Management :)</span><span class="whitespace">&#xD;
        </span><span class="comment">(: Selects the param values that are within scope of (ie have been returned from) the current facet :)</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:starts-with</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$out-of-scope-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$out-of-scope-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$out-of-scope-vals</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace">&#xD;
        &#xD;
    	</span><span class="op">return</span><span class="whitespace">&#xD;
    	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$icon</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">icon</span><span class="z">"</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$icon</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt">: &#xD;
            </span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">heatmap</span><span class="z">"</span><span class="atn"> xml:space</span><span class="atneq">=</span><span class="z">"</span><span class="av">preserve</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: ALL :)</span><span class="open"/><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$facet-vals</span><span class="op">,</span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">[CLEAR &amp;raquo;]</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="op">return</span><span class="whitespace">			&#xD;
            	</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
            	    </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
            		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
        	</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: VALUES :)</span><span class="open"/><span class="whitespace">&#xD;
        	</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
     			</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
    			   from params, else add to the params :)</span><span class="open"/><span class="whitespace">&#xD;
    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$value</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="op">else</span><span class="whitespace">&#xD;
    				</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    					</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    					</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
        	</span><span class="op">return</span><span class="whitespace">&#xD;
        		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	    		</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$count</span><span class="op">}</span><span class="av"> documents</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">heat</span><span class="op">{</span><span class="function">determine-heat</span><span class="parenthesis">(</span><span class="variable">$all-count</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$count</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">strong</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
     		</span><span class="op">}</span><span class="txt">&#xD;
             &#xD;
            </span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt">&#xD;
     	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
 	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">trailing-date-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        	</span><span class="op">{</span><span class="comment">(: Only display the date facets when there is no start and non-valid end fields :)</span><span class="op">}</span><span class="txt">&#xD;
    	    </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$title</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">h3</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">h3</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">search_facet</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="whitespace">&#xD;
    			</span><span class="comment">(: ALL :)</span><span class="open"/><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">dur</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">All [</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="op">return</span><span class="whitespace">					&#xD;
    				</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
    				</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    					</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_go.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    				</span><span class="op">else</span><span class="whitespace">&#xD;
    					</span><span class="variable">$link</span><span class="whitespace">&#xD;
    				</span><span class="op">}</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
    			</span><span class="op">,</span><span class="whitespace">&#xD;
    			</span><span class="comment">(: DURATIONS :)</span><span class="open"/><span class="whitespace">&#xD;
                </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xs:duration</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$desc</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">dur</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">dur</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$value</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">dur</span><span class="z">&gt;</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$desc</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">return</span><span class="whitespace">			&#xD;
                    </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                        </span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
                        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                         	</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_go.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
                        </span><span class="op">}</span><span class="txt">&#xD;
                    </span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
    		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">determine-heat</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$item-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="comment">(: With this formula, an item can range from 0-67% :)</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="comment">(: Lower ranges are wider than higher ranges :)</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$comp-num</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">*</span><span class="whitespace"> </span><span class="numeric">.5</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$item-pct</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$item-count</span><span class="whitespace"> </span><span class="op">div</span><span class="whitespace"> </span><span class="variable">$comp-num</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$max-pct</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">div</span><span class="whitespace"> </span><span class="variable">$comp-num</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$item-pct</span><span class="whitespace"> </span><span class="op">div</span><span class="whitespace"> </span><span class="variable">$max-pct</span><span class="whitespace"> &#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="comment">(: apply specific controls :)</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="comment">(: These are a hack for now. Will need to tune this later :)</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$item-count</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> &#xD;
        </span><span class="numeric">2</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">3</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$item-count</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">4</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.25</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">1</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.46</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">2</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.63</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">3</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.77</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">4</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.89</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">5</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="numeric">6</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$type</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">name-asc</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
        </span><span class="type-op">order by</span><span class="whitespace"> </span><span class="node-type">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">ascending</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">name-desc</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
        </span><span class="type-op">order by</span><span class="whitespace"> </span><span class="node-type">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">descending</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">count</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
        </span><span class="type-op">order by</span><span class="whitespace"> </span><span class="node-type">xs:integer</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">descending</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace">&#xD;
        </span><span class="variable">$items</span><span class="whitespace">        &#xD;
</span><span class="op">}</span><span class="whitespace"> &#xD;
&#xD;
</span><span class="comment">(: Highlighting functions :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Will highlight a node based on the full-text search inside&#xD;
: a search-criteria. Compatible with the create-snippet and create-summary functions.&#xD;
:&#xD;
: @param $node The node to be highlighted&#xD;
: @param $query The search-criteria to be used to perform the highlighting.&#xD;
: @return The highlighted node. If not highlighting query can be built, then returns nothing.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">highlight</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$highlight-query</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">create-highlight-query</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$highlight-query</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="function">cts:highlight</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="op">,</span><span class="variable">$highlight-query</span><span class="op">,</span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">ml-highlight</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$cts:text</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Builds a cts:query from a search-criteria element suitable for highlighting a node. &#xD;
:&#xD;
: @param $query The search-criteria to be used to perform the highlighting.&#xD;
: @return The highlight query. If not highlighting query can be built, then returns nothing.&#xD;
:)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-highlight-query</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">cts:query</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="function">search:build-term-query</span><span class="parenthesis">(</span><span class="function">search:resolve</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="step">/</span><span class="qname">search:term</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Search snippet functions :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders a search result summary, which can be either the abstract of the document or&#xD;
: snippets of the document if it has been highlighted as a result of a full-text search.&#xD;
: If snippets are available, then a click-and-zoom link can also be enabled. To enable click-and-zoom&#xD;
: there must be a page that can handle a request in the format:&#xD;
: &#xD;
: request.xqy?action=show-section&amp;uri=[*]&amp;path=[*]&#xD;
: &#xD;
: The function sdis:show-section (below), can then be called to fullfil the request.&#xD;
:&#xD;
: @param $orig-node The original document. Should be an active reference to a node in the&#xD;
    repository and not dynamically constructed.&#xD;
: @param $snippet-node A highligted node, that contains the portions of the original&#xD;
    document that should be snippeted. A common design pattern is to pass only the body&#xD;
    of an article as the $snippet-node.&#xD;
: @param $default-summary If a snippet-node is not included, or nothing was highlighted,&#xD;
    then this variable will be used. This commonly is the first 1 or 2 paragraphs or the&#xD;
    abstract of a document.&#xD;
: @return A rendered HTML summary or snippet interface.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-summary</span><span class="parenthesis">(</span><span class="variable">$orig-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$snippet-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$default-summary</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type">item</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$do-zoom</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:boolean</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$uri</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xdmp:node-uri</span><span class="parenthesis">(</span><span class="variable">$orig-node</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$snippets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$snippet-node</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$snippet-node</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$summary</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:exists</span><span class="parenthesis">(</span><span class="variable">$snippets</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
			</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">p</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">summary</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
			</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$snippets</span><span class="step">/</span><span class="qname">span</span><span class="whitespace">&#xD;
			</span><span class="op">return</span><span class="whitespace"> &#xD;
			    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$do-zoom</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">title</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="txt">...</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="txt">&amp;nbsp;&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
			    </span><span class="op">else</span><span class="whitespace">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">javascript:void(0);</span><span class="z">"</span><span class="atn"> onmouseout</span><span class="atneq">=</span><span class="z">"</span><span class="av">$('abs_</span><span class="op">{</span><span class="variable">$uri</span><span class="op">}</span><span class="av">').addClassName(hideClass);</span><span class="z">"</span><span class="atn"> onclick</span><span class="atneq">=</span><span class="z">"</span><span class="av">toggleLoadedContent('abs_</span><span class="op">{</span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$uri</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">','request.xqy',{{method:'post',postBody:'action=show-section&amp;uri=</span><span class="op">{</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$uri</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;path=</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">title</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">',asynchronous:true},true);</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">title</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="txt">...</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="txt">&amp;nbsp;&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
			</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">p</span><span class="z">&gt;</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="op">else</span><span class="whitespace">&#xD;
		   </span><span class="variable">$default-summary</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
		</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">summary</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="open"/><span class="variable">$summary</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="op">,</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> id</span><span class="atneq">=</span><span class="z">"</span><span class="av">abs_</span><span class="op">{</span><span class="variable">$uri</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">abstract hidden</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">|</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders snippets based on a highlighted node. The element used for&#xD;
: highlighting should be &lt;span class="ml-highlight"&gt;. sdis:highlight is a great option&#xD;
: as a compatible highlighting function.&#xD;
:&#xD;
: @param $highlighted-node The node highlighted with &lt;span class="ml-highlight"&gt;&#xD;
: @return A &lt;div&gt; containing the rendered snippets.&#xD;
:)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">4</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">11</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders snippets based on a highlighted node. The element used for&#xD;
: highlighting should be &lt;span class="ml-highlight"&gt;. sdis:highlight is a great option&#xD;
: as a compatible highlighting function.&#xD;
:&#xD;
: @param $highlighted-node The node highlighted with &lt;span class="ml-highlight"&gt;&#xD;
: @param $max-snippet-matches The total number of snippets that are returned.&#xD;
: @param $truncate-words The total number of words a snippet will contain.&#xD;
: @return A &lt;div&gt; containing the rendered snippets.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$max-snippet-matches</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">div</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$matches</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="step">//</span><span class="qname">span</span><span class="filter">[</span><span class="axis">@</span><span class="qname">class</span><span class="op">=</span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"/><span class="filter">]</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="variable">$max-snippet-matches</span><span class="filter">]</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$hits</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$hit</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$matches</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">gt</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> ... </span><span class="op">"</span><span class="open"/><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">xpath</span><span class="parenthesis">(</span><span class="variable">$hit</span><span class="step">/</span><span class="axis">parent::</span><span class="qname">*</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">ml-snippet</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
                </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">ml-wrapper</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="parenthesis">(</span><span class="variable">$hit</span><span class="step">/</span><span class="axis">preceding-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$hit</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$hit</span><span class="step">/</span><span class="axis">following-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$hits</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">snippets</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$hits</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: In order for this function to work properly, you must declare all the&#xD;
namespaces used in your content at the top of this file :)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">xpath</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="function">xdmp:path</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: Returns the configured number of words before and after the highlight term.&#xD;
:&#xD;
: @param $x An item to be trucated.&#xD;
: @return The truncated text.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type">item</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type">item</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace">&#xD;
       </span><span class="function">typeswitch</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
       </span><span class="axis">case</span><span class="whitespace"> </span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="comment">(: is there a highlight node before? :)</span><span class="open"/><span class="whitespace">&#xD;
             </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="axis">preceding-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="filter">[</span><span class="axis">self::</span><span class="qname">span</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"/><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="comment">(: if so, print the first $g_num words :)</span><span class="whitespace">&#xD;
                        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">cts:tokenize</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="comment">(: &gt; :)</span><span class="whitespace">&#xD;
                                          </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                          </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">return</span><span class="whitespace">&#xD;
                        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="comment">(: &gt; :)</span><span class="open"/><span class="whitespace">&#xD;
                        </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="comment">(: is there a highlight node after? :)</span><span class="open"/><span class="whitespace">&#xD;
                              </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="axis">following-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="filter">[</span><span class="axis">self::</span><span class="qname">span</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"/><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                              </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="comment">(: if there is a highlight node after, we do&#xD;
                                        not want to double count it :)</span><span class="open"/><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                              </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                                </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                   </span><span class="comment">(: If the first token is punctuation, then no space before :)</span><span class="open"/><span class="whitespace">&#xD;
                                 </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                             </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                     </span><span class="comment">(: If the first token is punctuation, then no space before :)</span><span class="open"/><span class="whitespace">&#xD;
                                 </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$truncateTokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                                      </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
                             </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                      </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
&#xD;
                     </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
            </span><span class="comment">(: is there a highlight node after? :)</span><span class="open"/><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="axis">following-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="filter">[</span><span class="axis">self::</span><span class="qname">span</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"/><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="comment">(: if so, print the last $g_num words :)</span><span class="whitespace">&#xD;
                     </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">cts:tokenize</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">  </span><span class="comment">(: &gt; :)</span><span class="whitespace">&#xD;
                                 </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="op">return</span><span class="whitespace">&#xD;
                     </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="comment">(: &gt; :)</span><span class="open"/><span class="whitespace">&#xD;
                     </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                  </span><span class="comment">(: If the last token is not punctuation, then add space after :)</span><span class="open"/><span class="whitespace">&#xD;
                               </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                           </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                  </span><span class="comment">(: If the last token is not punctuation, then add space after :)</span><span class="open"/><span class="whitespace">&#xD;
                               </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                           </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                   </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
              </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
               </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
       </span><span class="axis">case</span><span class="whitespace"> </span><span class="qname">element</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="qname">span</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$x</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$x</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$z</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="variable">$z</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
       </span><span class="axis">default</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$z</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="variable">$z</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Returns a string version of any xpath in a document&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return The string version of any xpath in a document.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">show-section</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$uri</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">uri</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$path</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">path</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$nodeInstr</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">search:construct-prolog</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace">&#xD;
							</span><span class="op">"</span><span class="literal"> fn:doc('</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$uri</span><span class="op">,</span><span class="op">"</span><span class="literal">')</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="variable">$path</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$node</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xdmp:eval</span><span class="parenthesis">(</span><span class="variable">$nodeInstr</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$preview</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
		</span><span class="if">if(</span><span class="function">fn:exists</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
			</span><span class="variable">$node</span><span class="whitespace">&#xD;
		</span><span class="op">else</span><span class="whitespace">&#xD;
			</span><span class="op">"</span><span class="literal">No preview available.</span><span class="op">"</span><span class="whitespace">&#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
		</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$preview</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Search Widgets :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) A description of the query being displayed that will also&#xD;
: allow users to remove individual items from their search. &#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return An HTML rendered, interactive description of the user's search.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">query-description</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">!=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">query_description</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"/><span class="parenthesis">(</span><span class="op">"</span><span class="literal">Results </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">for </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"/><span class="op">,</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">in </span><span class="es">&lt;</span><span class="en">i</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">i</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"/><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> &#xD;
        </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[x]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="function">filter-description</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Information on the quanity of results and the time to render the results.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $query-time The amount of time required to execute the search.&#xD;
: @param $page-info The pagination element created by lib-uitools.&#xD;
: @return A rendered HTML &lt;div&gt; containing information on the quanity of results and the time to render the results.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">results-info</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$query-time</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:duration</span><span class="op">,</span><span class="whitespace">&#xD;
	</span><span class="variable">$page-info</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">pagination</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$time</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$query-time</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$time</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:substring</span><span class="parenthesis">(</span><span class="variable">$time</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">3</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-length</span><span class="parenthesis">(</span><span class="variable">$time</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">results_info</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
	    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">Displaying </span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">start</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt"> to </span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">end</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt"> of about </span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">count</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt"> results. Searched in </span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$time</span><span class="op">}</span><span class="txt">s</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt">.</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt"> </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[Reset Search]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) A widget which is meant to be displayed on the sidebar&#xD;
: and will allow the user to choose a sort order for their results.&#xD;
: Appears only when there is a full-text search. Default browse&#xD;
: sort-order is used otherwise.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return A select box which will allow the user to select the sort order.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">sort</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin: 7px 0 5px 0;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	</span><span class="es">&lt;</span><span class="en">form</span><span class="atn"> method</span><span class="atneq">=</span><span class="z">"</span><span class="av">get</span><span class="z">"</span><span class="atn"> action</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">sort</span><span class="z">"</span><span class="atn"> onchange</span><span class="atneq">=</span><span class="z">"</span><span class="av">this.form.submit();</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">rel</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">rel</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                Sort by Relevence&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">date</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">date</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                Sort by Date&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="open"/><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">sort</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="step">/</span><span class="qname">*</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">hidden</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="variable">$param</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">hide</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$param</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="sc">&lt;/</span><span class="cl">form</span><span class="z">&gt;</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) A widget meant for the sidebar that includes a search box and&#xD;
: field select box which a user can modify their current full-text search parameters.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return A search filter widget.&#xD;
:)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-filter</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$hparams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    	</span><span class="es">&lt;</span><span class="en">form</span><span class="atn"> method</span><span class="atneq">=</span><span class="z">"</span><span class="av">get</span><span class="z">"</span><span class="atn"> action</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">q</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:95%;</span><span class="z">"</span><span class="atn"> id</span><span class="atneq">=</span><span class="z">"</span><span class="av">quicksearch_q</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">textbox</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="op">{</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="open"/><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$SEARCH-FIELDS</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">field</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">display:inline;margin:3px 3px 0 0;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
	            	</span><span class="op">{</span><span class="open"/><span class="whitespace">     &#xD;
	    			</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$option</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$SEARCH-FIELDS</span><span class="whitespace">&#xD;
	    			</span><span class="op">return</span><span class="whitespace">&#xD;
						</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$option</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">\|</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
						</span><span class="op">return</span><span class="whitespace"> &#xD;
							</span><span class="axis">element</span><span class="whitespace"> </span><span class="qname">option</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace">&#xD;
								</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">value</span><span class="whitespace"> </span><span class="op">{</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">}</span><span class="op">,</span><span class="whitespace">&#xD;
								</span><span class="if">if(</span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> &#xD;
									</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
								</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
								</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace">&#xD;
							</span><span class="op">}</span><span class="whitespace">&#xD;
	    			</span><span class="op">}</span><span class="txt">&#xD;
			    </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="whitespace">&#xD;
			    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
    		</span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">submit</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">Filter</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">button</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="open"/><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="filter">[</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">field</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">hidden</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="variable">$param</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">hide</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$param</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="sc">&lt;/</span><span class="cl">form</span><span class="z">&gt;</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Pagination controls for a page.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $page-info The pagination element created by lib-uitools.&#xD;
: @return A fully functional pagination control&#xD;
  Disclaimer: We acknowledge that this function is seriously lacking, so&#xD;
   if you have the time and desire, please do. :)</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">pagination</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
	</span><span class="variable">$page-info</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">pagination</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xs:integer</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">page</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xs:integer</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">pages</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">pages</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextprev</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="av">Go to Previous Page</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&amp;laquo; Previous Page</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">thispage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage2</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage3</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage4</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage5</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage6</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage7</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage8</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage9</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="av">Go to Next Page</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">Next Page &amp;raquo;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">filter-description</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$search-items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">report-on-search-items</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$search-items</span><span class="step">/</span><span class="qname">param</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">query_description</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            Filters </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">for</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="op">{</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$type</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$tpos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$search-items</span><span class="step">/</span><span class="qname">param</span><span class="step">/</span><span class="qname">type</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$type</span><span class="step">/</span><span class="axis">parent::</span><span class="qname">param</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$type-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$type</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">get-search-items-of-type</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$type-name</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$tpos</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">, </span><span class="op">"</span><span class="open"/><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$type-name</span><span class="op">}</span><span class="txt"> = &#xD;
                </span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
                    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$ipos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
                    </span><span class="op">return</span><span class="whitespace">&#xD;
                        </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$ipos</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> OR </span><span class="op">"</span><span class="open"/><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="op">{</span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace">&#xD;
                        </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$type-name</span><span class="op">,</span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="op">,</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[x]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">}</span><span class="txt">&#xD;
                </span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"/><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> during the last </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="function">fn:translate</span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">PD</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"/><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt"/><span class="op">{</span><span class="op">"</span><span class="literal"> days</span><span class="op">"</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"/><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">dur</span><span class="op">"</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[x]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="qname">get-search-items-of-type</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$type-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$i</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="filter">[</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="filter">]</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$i</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">where</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$type-name</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">report-on-search-items</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">search-item-types</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$i</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">hval</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">val</span><span class="op">"</span><span class="open"/><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">col</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$types</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">fn:distinct-values</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="filter">[</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$i</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">all</span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">where</span><span class="whitespace"> </span><span class="variable">$types</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">param</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$i</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"/><span class="whitespace">&#xD;
    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$type</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$types</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">type</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$type</span><span class="op">}</span><span class="z">"</span><span class="z">/&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">param</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">search-item-types</span><span class="z">&gt;</span><span class="open"/><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$text</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$tok</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$text</span><span class="op">,</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"/><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">return</span><span class="whitespace"> &#xD;
            </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="whitespace"> &#xD;
                </span><span class="function">fn:upper-case</span><span class="parenthesis">(</span><span class="function">fn:substring</span><span class="parenthesis">(</span><span class="variable">$tok</span><span class="op">,</span><span class="numeric">1</span><span class="op">,</span><span class="numeric">1</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="function">fn:substring</span><span class="parenthesis">(</span><span class="variable">$tok</span><span class="op">,</span><span class="numeric">2</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
        </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="whitespace">&#xD;
    </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span></tokens></result>