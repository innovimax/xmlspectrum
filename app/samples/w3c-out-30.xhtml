<?xml version="1.0" encoding="UTF-8"?><wrap5><result><comment start="1" end="1408"></comment><literal type="34" start="1420" end="1464"></literal><literal type="34" start="1500" end="1543"></literal><literal type="34" start="1548" end="1563"></literal><literal type="34" start="1580" end="1623"></literal><literal type="34" start="1628" end="1650"></literal><literal type="34" start="1681" end="1725"></literal><literal type="34" start="1730" end="1746"></literal><comment start="1751" end="1867"></comment><literal type="34" start="1919" end="1929"></literal><literal type="34" start="1934" end="1949"></literal><comment start="1958" end="2025"></comment><comment start="2098" end="2146"></comment><literal type="34" start="2200" end="2204"></literal><comment start="2208" end="2232"></comment><comment start="2237" end="2265"></comment><comment start="2270" end="2448"></comment><xml-open-tag pos="3391"></xml-open-tag><xml-name-end pos="3407"></xml-name-end><x-equals pos="3423"></x-equals><xml-att-quote pos="3424"></xml-att-quote><xml-literal-start pos="3425"></xml-literal-start><xml-att-quote pos="3429"></xml-att-quote><xml-literal-end pos="3430"></xml-literal-end><x-equals pos="3436"></x-equals><xml-att-quote pos="3437"></xml-att-quote><xml-literal-start pos="3438"></xml-literal-start><xml-att-quote pos="3480"></xml-att-quote><x-tag-end pos="3481" length="1"></x-tag-end><nested-query pos="3492"></nested-query><start-xquery pos="3493"></start-xquery><xml-open-tag pos="3528"></xml-open-tag><x-tag-end pos="3533" length="1"></x-tag-end><xml-open-tag pos="3548"></xml-open-tag><x-tag-end pos="3553" length="1"></x-tag-end><nested-query pos="3554"></nested-query><start-xquery pos="3555"></start-xquery><unnested-xquery pos="3560"></unnested-xquery><xml-close-tag pos="3561"></xml-close-tag><x-tag-end pos="3567" length="1"></x-tag-end><nested-query pos="3582"></nested-query><start-xquery pos="3583"></start-xquery><xml-open-tag pos="3631"></xml-open-tag><x-tag-end pos="3640" length="1"></x-tag-end><nested-query pos="3641"></nested-query><start-xquery pos="3642"></start-xquery><unnested-xquery pos="3648"></unnested-xquery><xml-close-tag pos="3649"></xml-close-tag><x-tag-end pos="3659" length="1"></x-tag-end><start-xquery pos="3660"></start-xquery><unnested-xquery pos="3695"></unnested-xquery><resume-x-literal-txt pos="3696"></resume-x-literal-txt><xml-close-tag pos="3706"></xml-close-tag><x-tag-end pos="3712" length="1"></x-tag-end><start-xquery pos="3713"></start-xquery><unnested-xquery pos="3740"></unnested-xquery><resume-x-literal-txt pos="3741"></resume-x-literal-txt><nested-query pos="3751"></nested-query><start-xquery pos="3752"></start-xquery><unnested-xquery pos="3795"></unnested-xquery><resume-x-literal-txt pos="3796"></resume-x-literal-txt><nested-query pos="3806"></nested-query><start-xquery pos="3807"></start-xquery><unnested-xquery pos="3840"></unnested-xquery><resume-x-literal-txt pos="3841"></resume-x-literal-txt><nested-query pos="3851"></nested-query><start-xquery pos="3852"></start-xquery><xml-open-tag pos="3910"></xml-open-tag><x-tag-end pos="3921" length="1"></x-tag-end><nested-query pos="3940"></nested-query><start-xquery pos="3941"></start-xquery><xml-open-tag pos="3963"></xml-open-tag><x-tag-end pos="3968" length="1"></x-tag-end><nested-query pos="3969"></nested-query><start-xquery pos="3970"></start-xquery><unnested-xquery pos="3981"></unnested-xquery><xml-close-tag pos="3982"></xml-close-tag><x-tag-end pos="3988" length="1"></x-tag-end><start-xquery pos="3989"></start-xquery><unnested-xquery pos="3997"></unnested-xquery><resume-x-literal-txt pos="3998"></resume-x-literal-txt><nested-query pos="4016"></nested-query><start-xquery pos="4017"></start-xquery><xml-open-tag pos="4037"></xml-open-tag><x-tag-end pos="4040" length="1"></x-tag-end><nested-query pos="4041"></nested-query><start-xquery pos="4042"></start-xquery><unnested-xquery pos="4051"></unnested-xquery><xml-close-tag pos="4052"></xml-close-tag><x-tag-end pos="4056" length="1"></x-tag-end><start-xquery pos="4057"></start-xquery><unnested-xquery pos="4065"></unnested-xquery><resume-x-literal-txt pos="4066"></resume-x-literal-txt><xml-close-tag pos="4080"></xml-close-tag><x-tag-end pos="4092" length="1"></x-tag-end><start-xquery pos="4093"></start-xquery><xml-open-tag pos="4141"></xml-open-tag><x-tag-end pos="4152" length="1"></x-tag-end><xml-open-tag pos="4171"></xml-open-tag><x-tag-end pos="4189" length="1"></x-tag-end><nested-query pos="4190"></nested-query><start-xquery pos="4191"></start-xquery><unnested-xquery pos="4200"></unnested-xquery><xml-close-tag pos="4201"></xml-close-tag><x-tag-end pos="4220" length="1"></x-tag-end><xml-close-tag pos="4235"></xml-close-tag><x-tag-end pos="4247" length="1"></x-tag-end><start-xquery pos="4248"></start-xquery><unnested-xquery pos="4288"></unnested-xquery><resume-x-literal-txt pos="4289"></resume-x-literal-txt><nested-query pos="4299"></nested-query><start-xquery pos="4300"></start-xquery><literal type="34" start="4351" end="4355"></literal><xml-open-tag pos="4434"></xml-open-tag><x-tag-end pos="4439" length="1"></x-tag-end><xml-open-tag pos="4440"></xml-open-tag><x-tag-end pos="4454" length="1"></x-tag-end><nested-query pos="4455"></nested-query><start-xquery pos="4456"></start-xquery><unnested-xquery pos="4461"></unnested-xquery><xml-close-tag pos="4462"></xml-close-tag><x-tag-end pos="4477" length="1"></x-tag-end><xml-close-tag pos="4478"></xml-close-tag><x-tag-end pos="4484" length="1"></x-tag-end><start-xquery pos="4485"></start-xquery><xml-open-tag pos="4551"></xml-open-tag><x-tag-end pos="4556" length="1"></x-tag-end><xml-open-tag pos="4557"></xml-open-tag><x-tag-end pos="4571" length="1"></x-tag-end><xml-close-tag pos="4576"></xml-close-tag><x-tag-end pos="4591" length="1"></x-tag-end><xml-close-tag pos="4592"></xml-close-tag><x-tag-end pos="4598" length="1"></x-tag-end><start-xquery pos="4599"></start-xquery><unnested-xquery pos="4605"></unnested-xquery><resume-x-literal-txt pos="4606"></resume-x-literal-txt><xml-close-tag pos="4612"></xml-close-tag><x-tag-end pos="4629" length="1"></x-tag-end><start-xquery pos="4630"></start-xquery><xml-open-tag pos="5225"></xml-open-tag><x-tag-end pos="5238" length="1"></x-tag-end><nested-query pos="5239"></nested-query><start-xquery pos="5240"></start-xquery><unnested-xquery pos="5250"></unnested-xquery><xml-close-tag pos="5251"></xml-close-tag><x-tag-end pos="5265" length="1"></x-tag-end><start-xquery pos="5266"></start-xquery><literal type="34" start="5298" end="5302"></literal><xml-open-tag pos="5335"></xml-open-tag><xml-name-end pos="5347"></xml-name-end><x-equals pos="5353"></x-equals><xml-att-quote pos="5354"></xml-att-quote><xml-literal-start pos="5355"></xml-literal-start><xml-att-quote pos="5397"></xml-att-quote><x-tag-end pos="5398" length="1"></x-tag-end><xml-open-tag pos="5417"></xml-open-tag><x-tag-end pos="5424" length="1"></x-tag-end><nested-query pos="5425"></nested-query><start-xquery pos="5426"></start-xquery><unnested-xquery pos="5433"></unnested-xquery><xml-close-tag pos="5434"></xml-close-tag><x-tag-end pos="5442" length="1"></x-tag-end><nested-query pos="5461"></nested-query><start-xquery pos="5462"></start-xquery><unnested-xquery pos="5468"></unnested-xquery><resume-x-literal-txt pos="5469"></resume-x-literal-txt><xml-close-tag pos="5483"></xml-close-tag><x-tag-end pos="5496" length="1"></x-tag-end><start-xquery pos="5497"></start-xquery><xml-open-tag pos="6125"></xml-open-tag><x-tag-end pos="6138" length="1"></x-tag-end><nested-query pos="6139"></nested-query><start-xquery pos="6140"></start-xquery><unnested-xquery pos="6150"></unnested-xquery><xml-close-tag pos="6151"></xml-close-tag><x-tag-end pos="6165" length="1"></x-tag-end><start-xquery pos="6166"></start-xquery><literal type="34" start="6199" end="6203"></literal><xml-open-tag pos="6236"></xml-open-tag><xml-name-end pos="6243"></xml-name-end><x-equals pos="6249"></x-equals><xml-att-quote pos="6250"></xml-att-quote><xml-literal-start pos="6251"></xml-literal-start><xml-att-quote pos="6293"></xml-att-quote><x-tag-end pos="6294" length="1"></x-tag-end><xml-open-tag pos="6313"></xml-open-tag><x-tag-end pos="6322" length="1"></x-tag-end><nested-query pos="6323"></nested-query><start-xquery pos="6324"></start-xquery><unnested-xquery pos="6331"></unnested-xquery><xml-close-tag pos="6332"></xml-close-tag><x-tag-end pos="6342" length="1"></x-tag-end><nested-query pos="6361"></nested-query><start-xquery pos="6362"></start-xquery><unnested-xquery pos="6369"></unnested-xquery><resume-x-literal-txt pos="6370"></resume-x-literal-txt><xml-close-tag pos="6384"></xml-close-tag><x-tag-end pos="6392" length="1"></x-tag-end><start-xquery pos="6393"></start-xquery><literal type="39" start="6509" end="6511"></literal><literal type="34" start="6620" end="6622"></literal><comment start="6651" end="6680"></comment><comment start="6685" end="7005"></comment><xml-open-tag pos="7137"></xml-open-tag><xml-name-end pos="7142"></xml-name-end><x-equals pos="7149"></x-equals><xml-att-quote pos="7150"></xml-att-quote><xml-literal-start pos="7151"></xml-literal-start><xml-att-quote pos="7161"></xml-att-quote><xml-literal-end pos="7162"></xml-literal-end><x-equals pos="7169"></x-equals><xml-att-quote pos="7170"></xml-att-quote><xml-literal-start pos="7171"></xml-literal-start><xml-att-quote pos="7174"></xml-att-quote><x-tag-end pos="7175" length="1"></x-tag-end><xml-open-tag pos="7191"></xml-open-tag><xml-name-end pos="7195"></xml-name-end><x-equals pos="7201"></x-equals><xml-att-quote pos="7202"></xml-att-quote><xml-literal-start pos="7203"></xml-literal-start><xml-att-quote pos="7276"></xml-att-quote><x-tag-end pos="7277" length="1"></x-tag-end><nested-query pos="7292"></nested-query><start-xquery pos="7293"></start-xquery><literal type="34" start="7344" end="7361"></literal><literal type="34" start="7402" end="7404"></literal><literal type="34" start="7445" end="7450"></literal><literal type="34" start="7492" end="7538"></literal><unnested-xquery pos="7657"></unnested-xquery><resume-x-literal-txt pos="7658"></resume-x-literal-txt><nested-query pos="7672"></nested-query><start-xquery pos="7673"></start-xquery><xml-open-tag pos="7712"></xml-open-tag><xml-name-end pos="7719"></xml-name-end><x-equals pos="7724"></x-equals><xml-att-quote pos="7725"></xml-att-quote><xml-literal-start pos="7726"></xml-literal-start><xml-att-quote pos="7731"></xml-att-quote><xml-literal-end pos="7732"></xml-literal-end><x-equals pos="7738"></x-equals><xml-att-quote pos="7739"></xml-att-quote><xml-literal-start pos="7740"></xml-literal-start><xml-att-quote pos="7772"></xml-att-quote><x-tag-end pos="7773" length="1"></x-tag-end><nested-query pos="7789"></nested-query><start-xquery pos="7790"></start-xquery><literal type="34" start="7890" end="7893"></literal><literal type="34" start="8021" end="8022"></literal><literal type="34" start="8091" end="8100"></literal><unnested-xquery pos="8155"></unnested-xquery><resume-x-literal-txt pos="8156"></resume-x-literal-txt><xml-close-tag pos="8164"></xml-close-tag><x-tag-end pos="8172" length="1"></x-tag-end><start-xquery pos="8173"></start-xquery><unnested-xquery pos="8189"></unnested-xquery><resume-x-literal-txt pos="8190"></resume-x-literal-txt><xml-close-tag pos="8200"></xml-close-tag><x-tag-end pos="8205" length="1"></x-tag-end><nested-query pos="8216"></nested-query><start-xquery pos="8217"></start-xquery><unnested-xquery pos="8463"></unnested-xquery><resume-x-literal-txt pos="8464"></resume-x-literal-txt><nested-query pos="8474"></nested-query><start-xquery pos="8475"></start-xquery><unnested-xquery pos="8557"></unnested-xquery><resume-x-literal-txt pos="8558"></resume-x-literal-txt><xml-open-tag pos="8562"></xml-open-tag><xml-name-end pos="8568"></xml-name-end><x-equals pos="8574"></x-equals><xml-att-quote pos="8575"></xml-att-quote><xml-literal-start pos="8576"></xml-literal-start><xml-att-quote pos="8582"></xml-att-quote><xml-literal-end pos="8583"></xml-literal-end><x-equals pos="8588"></x-equals><xml-att-quote pos="8589"></xml-att-quote><xml-literal-start pos="8590"></xml-literal-start><xml-att-quote pos="8596"></xml-att-quote><xml-literal-end pos="8597"></xml-literal-end><x-equals pos="8603"></x-equals><xml-att-quote pos="8604"></xml-att-quote><xml-literal-start pos="8605"></xml-literal-start><xml-att-quote pos="8611"></xml-att-quote><xml-literal-end pos="8612"></xml-literal-end><x-equals pos="8618"></x-equals><xml-att-quote pos="8619"></xml-att-quote><xml-literal-start pos="8620"></xml-literal-start><xml-att-quote pos="8651"></xml-att-quote><xml-literal-end pos="8652"></xml-literal-end><x-tag-end pos="8653" length="2" level="2"></x-tag-end><xml-close-tag pos="8658"></xml-close-tag><x-tag-end pos="8664" length="1"></x-tag-end><start-xquery pos="8665"></start-xquery><xml-open-tag pos="9077"></xml-open-tag><xml-name-end pos="9100"></xml-name-end><x-tag-end pos="9101" length="2" level="1"></x-tag-end><start-xquery pos="9103"></start-xquery><xml-open-tag pos="9134"></xml-open-tag><xml-name-end pos="9138"></xml-name-end><x-equals pos="9144"></x-equals><xml-att-quote pos="9145"></xml-att-quote><xml-literal-start pos="9146"></xml-literal-start><xml-att-quote pos="9164"></xml-att-quote><x-tag-end pos="9165" length="1"></x-tag-end><nested-query pos="9176"></nested-query><start-xquery pos="9177"></start-xquery><unnested-xquery pos="9183"></unnested-xquery><resume-x-literal-txt pos="9184"></resume-x-literal-txt><xml-open-tag pos="9201"></xml-open-tag><x-tag-end pos="9204" length="2" level="2"></x-tag-end><xml-open-tag pos="9216"></xml-open-tag><xml-name-end pos="9223"></xml-name-end><x-equals pos="9226"></x-equals><xml-att-quote pos="9227"></xml-att-quote><xml-literal-start pos="9228"></xml-literal-start><nested-query pos="9235"></nested-query><start-xquery pos="9236"></start-xquery><unnested-xquery pos="9245"></unnested-xquery><xml-att-quote pos="9246"></xml-att-quote><xml-literal-end pos="9247"></xml-literal-end><x-equals pos="9256"></x-equals><xml-att-quote pos="9257"></xml-att-quote><xml-literal-start pos="9258"></xml-literal-start><xml-att-quote pos="9266"></xml-att-quote><xml-literal-end pos="9267"></xml-literal-end><x-equals pos="9272"></x-equals><xml-att-quote pos="9273"></xml-att-quote><xml-literal-start pos="9274"></xml-literal-start><xml-att-quote pos="9278"></xml-att-quote><xml-literal-end pos="9279"></xml-literal-end><x-equals pos="9284"></x-equals><xml-att-quote pos="9285"></xml-att-quote><xml-literal-start pos="9286"></xml-literal-start><xml-att-quote pos="9287"></xml-att-quote><xml-literal-end pos="9288"></xml-literal-end><x-equals pos="9294"></x-equals><xml-att-quote pos="9295"></xml-att-quote><xml-literal-start pos="9296"></xml-literal-start><xml-att-quote pos="9308"></xml-att-quote><xml-literal-end pos="9309"></xml-literal-end><x-tag-end pos="9310" length="1"></x-tag-end><xml-open-tag pos="9325"></xml-open-tag><xml-name-end pos="9332"></xml-name-end><x-equals pos="9338"></x-equals><xml-att-quote pos="9339"></xml-att-quote><nested-query pos="9340"></nested-query><start-xquery pos="9341"></start-xquery><literal type="34" start="9371" end="9376"></literal><unnested-xquery pos="9378"></unnested-xquery><xml-att-quote pos="9379"></xml-att-quote><x-tag-end pos="9380" length="1"></x-tag-end><nested-query pos="9399"></nested-query><start-xquery pos="9400"></start-xquery><literal type="34" start="9480" end="9485"></literal><literal type="34" start="9531" end="9540"></literal><unnested-xquery pos="9567"></unnested-xquery><resume-x-literal-txt pos="9568"></resume-x-literal-txt><nested-query pos="9590"></nested-query><start-xquery pos="9591"></start-xquery><unnested-xquery pos="9597"></unnested-xquery><resume-x-literal-txt pos="9598"></resume-x-literal-txt><xml-close-tag pos="9612"></xml-close-tag><x-tag-end pos="9620" length="1"></x-tag-end><nested-query pos="9635"></nested-query><start-xquery pos="9636"></start-xquery><literal type="34" start="9789" end="9791"></literal><xml-open-tag pos="9856"></xml-open-tag><xml-name-end pos="9863"></xml-name-end><x-equals pos="9869"></x-equals><xml-att-quote pos="9870"></xml-att-quote><nested-query pos="9871"></nested-query><start-xquery pos="9872"></start-xquery><unnested-xquery pos="9878"></unnested-xquery><xml-att-quote pos="9879"></xml-att-quote><x-tag-end pos="9880" length="1"></x-tag-end><nested-query pos="9900"></nested-query><start-xquery pos="9901"></start-xquery><literal type="34" start="9978" end="9987"></literal><unnested-xquery pos="10015"></unnested-xquery><resume-x-literal-txt pos="10016"></resume-x-literal-txt><nested-query pos="10035"></nested-query><start-xquery pos="10036"></start-xquery><literal type="34" start="10059" end="10062"></literal><literal type="34" start="10088" end="10090"></literal><unnested-xquery pos="10092"></unnested-xquery><resume-x-literal-txt pos="10093"></resume-x-literal-txt><xml-close-tag pos="10111"></xml-close-tag><x-tag-end pos="10119" length="1"></x-tag-end><start-xquery pos="10120"></start-xquery><unnested-xquery pos="10120"></unnested-xquery><resume-x-literal-txt pos="10121"></resume-x-literal-txt><xml-close-tag pos="10129"></xml-close-tag><x-tag-end pos="10137" length="1"></x-tag-end><xml-close-tag pos="10145"></xml-close-tag><x-tag-end pos="10150" length="1"></x-tag-end><start-xquery pos="10151"></start-xquery><xml-open-tag pos="10258"></xml-open-tag><xml-name-end pos="10262"></xml-name-end><x-equals pos="10268"></x-equals><xml-att-quote pos="10269"></xml-att-quote><xml-literal-start pos="10270"></xml-literal-start><xml-att-quote pos="10288"></xml-att-quote><x-tag-end pos="10289" length="1"></x-tag-end><xml-open-tag pos="10305"></xml-open-tag><x-tag-end pos="10308" length="2" level="2"></x-tag-end><xml-open-tag pos="10320"></xml-open-tag><xml-name-end pos="10324"></xml-name-end><x-equals pos="10330"></x-equals><xml-att-quote pos="10331"></xml-att-quote><xml-literal-start pos="10332"></xml-literal-start><xml-att-quote pos="10347"></xml-att-quote><x-tag-end pos="10348" length="1"></x-tag-end><xml-open-tag pos="10363"></xml-open-tag><xml-name-end pos="10369"></xml-name-end><x-equals pos="10375"></x-equals><xml-att-quote pos="10376"></xml-att-quote><xml-literal-start pos="10377"></xml-literal-start><xml-att-quote pos="10431"></xml-att-quote><x-tag-end pos="10432" length="1"></x-tag-end><xml-close-tag pos="10440"></xml-close-tag><x-tag-end pos="10447" length="1"></x-tag-end><xml-open-tag pos="10462"></xml-open-tag><xml-name-end pos="10469"></xml-name-end><x-equals pos="10474"></x-equals><xml-att-quote pos="10475"></xml-att-quote><xml-literal-start pos="10476"></xml-literal-start><xml-att-quote pos="10487"></xml-att-quote><x-tag-end pos="10488" length="1"></x-tag-end><xml-open-tag pos="10504"></xml-open-tag><xml-name-end pos="10511"></xml-name-end><x-equals pos="10517"></x-equals><xml-att-quote pos="10518"></xml-att-quote><xml-literal-start pos="10519"></xml-literal-start><xml-att-quote pos="10521"></xml-att-quote><x-tag-end pos="10522" length="1"></x-tag-end><nested-query pos="10523"></nested-query><start-xquery pos="10524"></start-xquery><literal type="34" start="10558" end="10561"></literal><unnested-xquery pos="10563"></unnested-xquery><resume-x-literal-txt pos="10564"></resume-x-literal-txt><xml-close-tag pos="10571"></xml-close-tag><x-tag-end pos="10579" length="1"></x-tag-end><xml-open-tag pos="10595"></xml-open-tag><xml-name-end pos="10602"></xml-name-end><x-equals pos="10608"></x-equals><xml-att-quote pos="10609"></xml-att-quote><xml-literal-start pos="10610"></xml-literal-start><xml-att-quote pos="10612"></xml-att-quote><x-tag-end pos="10613" length="1"></x-tag-end><nested-query pos="10614"></nested-query><start-xquery pos="10615"></start-xquery><literal type="34" start="10649" end="10652"></literal><unnested-xquery pos="10654"></unnested-xquery><resume-x-literal-txt pos="10655"></resume-x-literal-txt><xml-close-tag pos="10663"></xml-close-tag><x-tag-end pos="10671" length="1"></x-tag-end><xml-open-tag pos="10687"></xml-open-tag><xml-name-end pos="10694"></xml-name-end><x-equals pos="10700"></x-equals><xml-att-quote pos="10701"></xml-att-quote><xml-literal-start pos="10702"></xml-literal-start><xml-att-quote pos="10704"></xml-att-quote><x-tag-end pos="10705" length="1"></x-tag-end><nested-query pos="10706"></nested-query><start-xquery pos="10707"></start-xquery><literal type="34" start="10741" end="10744"></literal><unnested-xquery pos="10746"></unnested-xquery><resume-x-literal-txt pos="10747"></resume-x-literal-txt><xml-close-tag pos="10752"></xml-close-tag><x-tag-end pos="10760" length="1"></x-tag-end><xml-open-tag pos="10776"></xml-open-tag><xml-name-end pos="10783"></xml-name-end><x-equals pos="10789"></x-equals><xml-att-quote pos="10790"></xml-att-quote><xml-literal-start pos="10791"></xml-literal-start><xml-att-quote pos="10793"></xml-att-quote><x-tag-end pos="10794" length="1"></x-tag-end><nested-query pos="10795"></nested-query><start-xquery pos="10796"></start-xquery><literal type="34" start="10830" end="10833"></literal><unnested-xquery pos="10835"></unnested-xquery><resume-x-literal-txt pos="10836"></resume-x-literal-txt><xml-close-tag pos="10841"></xml-close-tag><x-tag-end pos="10849" length="1"></x-tag-end><xml-open-tag pos="10865"></xml-open-tag><xml-name-end pos="10872"></xml-name-end><x-equals pos="10878"></x-equals><xml-att-quote pos="10879"></xml-att-quote><xml-literal-start pos="10880"></xml-literal-start><xml-att-quote pos="10882"></xml-att-quote><x-tag-end pos="10883" length="1"></x-tag-end><nested-query pos="10884"></nested-query><start-xquery pos="10885"></start-xquery><literal type="34" start="10919" end="10922"></literal><unnested-xquery pos="10924"></unnested-xquery><resume-x-literal-txt pos="10925"></resume-x-literal-txt><xml-close-tag pos="10928"></xml-close-tag><x-tag-end pos="10936" length="1"></x-tag-end><xml-open-tag pos="10952"></xml-open-tag><xml-name-end pos="10959"></xml-name-end><x-equals pos="10965"></x-equals><xml-att-quote pos="10966"></xml-att-quote><xml-literal-start pos="10967"></xml-literal-start><xml-att-quote pos="10969"></xml-att-quote><x-tag-end pos="10970" length="1"></x-tag-end><nested-query pos="10971"></nested-query><start-xquery pos="10972"></start-xquery><literal type="34" start="11006" end="11009"></literal><unnested-xquery pos="11011"></unnested-xquery><resume-x-literal-txt pos="11012"></resume-x-literal-txt><xml-close-tag pos="11016"></xml-close-tag><x-tag-end pos="11024" length="1"></x-tag-end><xml-open-tag pos="11040"></xml-open-tag><xml-name-end pos="11047"></xml-name-end><x-equals pos="11053"></x-equals><xml-att-quote pos="11054"></xml-att-quote><xml-literal-start pos="11055"></xml-literal-start><xml-att-quote pos="11057"></xml-att-quote><x-tag-end pos="11058" length="1"></x-tag-end><nested-query pos="11059"></nested-query><start-xquery pos="11060"></start-xquery><literal type="34" start="11094" end="11097"></literal><unnested-xquery pos="11099"></unnested-xquery><resume-x-literal-txt pos="11100"></resume-x-literal-txt><xml-close-tag pos="11104"></xml-close-tag><x-tag-end pos="11112" length="1"></x-tag-end><xml-open-tag pos="11128"></xml-open-tag><xml-name-end pos="11135"></xml-name-end><x-equals pos="11141"></x-equals><xml-att-quote pos="11142"></xml-att-quote><xml-literal-start pos="11143"></xml-literal-start><xml-att-quote pos="11145"></xml-att-quote><x-tag-end pos="11146" length="1"></x-tag-end><nested-query pos="11147"></nested-query><start-xquery pos="11148"></start-xquery><literal type="34" start="11182" end="11185"></literal><unnested-xquery pos="11187"></unnested-xquery><resume-x-literal-txt pos="11188"></resume-x-literal-txt><xml-close-tag pos="11194"></xml-close-tag><x-tag-end pos="11202" length="1"></x-tag-end><xml-open-tag pos="11218"></xml-open-tag><xml-name-end pos="11225"></xml-name-end><x-equals pos="11231"></x-equals><xml-att-quote pos="11232"></xml-att-quote><xml-literal-start pos="11233"></xml-literal-start><xml-att-quote pos="11235"></xml-att-quote><x-tag-end pos="11236" length="1"></x-tag-end><nested-query pos="11237"></nested-query><start-xquery pos="11238"></start-xquery><literal type="34" start="11272" end="11275"></literal><unnested-xquery pos="11277"></unnested-xquery><resume-x-literal-txt pos="11278"></resume-x-literal-txt><xml-close-tag pos="11287"></xml-close-tag><x-tag-end pos="11295" length="1"></x-tag-end><xml-open-tag pos="11311"></xml-open-tag><xml-name-end pos="11318"></xml-name-end><x-equals pos="11324"></x-equals><xml-att-quote pos="11325"></xml-att-quote><xml-literal-start pos="11326"></xml-literal-start><xml-att-quote pos="11328"></xml-att-quote><x-tag-end pos="11329" length="1"></x-tag-end><nested-query pos="11330"></nested-query><start-xquery pos="11331"></start-xquery><literal type="34" start="11365" end="11368"></literal><unnested-xquery pos="11370"></unnested-xquery><resume-x-literal-txt pos="11371"></resume-x-literal-txt><xml-close-tag pos="11378"></xml-close-tag><x-tag-end pos="11386" length="1"></x-tag-end><xml-open-tag pos="11402"></xml-open-tag><xml-name-end pos="11409"></xml-name-end><x-equals pos="11415"></x-equals><xml-att-quote pos="11416"></xml-att-quote><xml-literal-start pos="11417"></xml-literal-start><xml-att-quote pos="11419"></xml-att-quote><x-tag-end pos="11420" length="1"></x-tag-end><nested-query pos="11421"></nested-query><start-xquery pos="11422"></start-xquery><literal type="34" start="11456" end="11459"></literal><unnested-xquery pos="11461"></unnested-xquery><resume-x-literal-txt pos="11462"></resume-x-literal-txt><xml-close-tag pos="11470"></xml-close-tag><x-tag-end pos="11478" length="1"></x-tag-end><xml-open-tag pos="11494"></xml-open-tag><xml-name-end pos="11501"></xml-name-end><x-equals pos="11507"></x-equals><xml-att-quote pos="11508"></xml-att-quote><xml-literal-start pos="11509"></xml-literal-start><xml-att-quote pos="11511"></xml-att-quote><x-tag-end pos="11512" length="1"></x-tag-end><nested-query pos="11513"></nested-query><start-xquery pos="11514"></start-xquery><literal type="34" start="11548" end="11551"></literal><unnested-xquery pos="11553"></unnested-xquery><resume-x-literal-txt pos="11554"></resume-x-literal-txt><xml-close-tag pos="11562"></xml-close-tag><x-tag-end pos="11570" length="1"></x-tag-end><xml-close-tag pos="11585"></xml-close-tag><x-tag-end pos="11593" length="1"></x-tag-end><nested-query pos="11608"></nested-query><start-xquery pos="11609"></start-xquery><literal type="34" start="11609" end="11613"></literal><unnested-xquery pos="11614"></unnested-xquery><resume-x-literal-txt pos="11615"></resume-x-literal-txt><xml-open-tag pos="11629"></xml-open-tag><xml-name-end pos="11635"></xml-name-end><x-equals pos="11640"></x-equals><xml-att-quote pos="11641"></xml-att-quote><xml-literal-start pos="11642"></xml-literal-start><xml-att-quote pos="11646"></xml-att-quote><xml-literal-end pos="11647"></xml-literal-end><x-equals pos="11652"></x-equals><xml-att-quote pos="11653"></xml-att-quote><xml-literal-start pos="11654"></xml-literal-start><xml-att-quote pos="11663"></xml-att-quote><xml-literal-end pos="11664"></xml-literal-end><x-equals pos="11670"></x-equals><xml-att-quote pos="11671"></xml-att-quote><nested-query pos="11672"></nested-query><start-xquery pos="11673"></start-xquery><unnested-xquery pos="11701"></unnested-xquery><xml-att-quote pos="11702"></xml-att-quote><xml-literal-end pos="11703"></xml-literal-end><x-equals pos="11709"></x-equals><xml-att-quote pos="11710"></xml-att-quote><xml-literal-start pos="11711"></xml-literal-start><xml-att-quote pos="11721"></xml-att-quote><xml-literal-end pos="11722"></xml-literal-end><x-tag-end pos="11723" length="2" level="3"></x-tag-end><nested-query pos="11739"></nested-query><start-xquery pos="11740"></start-xquery><literal type="34" start="11740" end="11744"></literal><unnested-xquery pos="11745"></unnested-xquery><resume-x-literal-txt pos="11746"></resume-x-literal-txt><xml-open-tag pos="11760"></xml-open-tag><xml-name-end pos="11766"></xml-name-end><x-equals pos="11771"></x-equals><xml-att-quote pos="11772"></xml-att-quote><xml-literal-start pos="11773"></xml-literal-start><xml-att-quote pos="11777"></xml-att-quote><xml-literal-end pos="11778"></xml-literal-end><x-equals pos="11783"></x-equals><xml-att-quote pos="11784"></xml-att-quote><xml-literal-start pos="11785"></xml-literal-start><xml-att-quote pos="11795"></xml-att-quote><xml-literal-end pos="11796"></xml-literal-end><x-equals pos="11802"></x-equals><xml-att-quote pos="11803"></xml-att-quote><nested-query pos="11804"></nested-query><start-xquery pos="11805"></start-xquery><unnested-xquery pos="11834"></unnested-xquery><xml-att-quote pos="11835"></xml-att-quote><xml-literal-end pos="11836"></xml-literal-end><x-equals pos="11842"></x-equals><xml-att-quote pos="11843"></xml-att-quote><xml-literal-start pos="11844"></xml-literal-start><xml-att-quote pos="11854"></xml-att-quote><xml-literal-end pos="11855"></xml-literal-end><x-tag-end pos="11856" length="2" level="3"></x-tag-end><xml-close-tag pos="11868"></xml-close-tag><x-tag-end pos="11873" length="1"></x-tag-end><xml-open-tag pos="11884"></xml-open-tag><x-tag-end pos="11888" length="1"></x-tag-end><xml-open-tag pos="11903"></xml-open-tag><xml-name-end pos="11909"></xml-name-end><x-equals pos="11915"></x-equals><xml-att-quote pos="11916"></xml-att-quote><xml-literal-start pos="11917"></xml-literal-start><xml-att-quote pos="11971"></xml-att-quote><x-tag-end pos="11972" length="1"></x-tag-end><xml-close-tag pos="11978"></xml-close-tag><x-tag-end pos="11985" length="1"></x-tag-end><xml-open-tag pos="12000"></xml-open-tag><xml-name-end pos="12007"></xml-name-end><x-equals pos="12012"></x-equals><xml-att-quote pos="12013"></xml-att-quote><xml-literal-start pos="12014"></xml-literal-start><xml-att-quote pos="12023"></xml-att-quote><x-tag-end pos="12024" length="1"></x-tag-end><xml-open-tag pos="12040"></xml-open-tag><xml-name-end pos="12047"></xml-name-end><x-equals pos="12053"></x-equals><xml-att-quote pos="12054"></xml-att-quote><xml-literal-start pos="12055"></xml-literal-start><xml-att-quote pos="12057"></xml-att-quote><x-tag-end pos="12058" length="1"></x-tag-end><nested-query pos="12059"></nested-query><start-xquery pos="12060"></start-xquery><literal type="34" start="12092" end="12095"></literal><unnested-xquery pos="12097"></unnested-xquery><resume-x-literal-txt pos="12098"></resume-x-literal-txt><xml-close-tag pos="12105"></xml-close-tag><x-tag-end pos="12113" length="1"></x-tag-end><xml-open-tag pos="12129"></xml-open-tag><xml-name-end pos="12136"></xml-name-end><x-equals pos="12142"></x-equals><xml-att-quote pos="12143"></xml-att-quote><xml-literal-start pos="12144"></xml-literal-start><xml-att-quote pos="12146"></xml-att-quote><x-tag-end pos="12147" length="1"></x-tag-end><nested-query pos="12148"></nested-query><start-xquery pos="12149"></start-xquery><literal type="34" start="12181" end="12184"></literal><unnested-xquery pos="12186"></unnested-xquery><resume-x-literal-txt pos="12187"></resume-x-literal-txt><xml-close-tag pos="12195"></xml-close-tag><x-tag-end pos="12203" length="1"></x-tag-end><xml-open-tag pos="12219"></xml-open-tag><xml-name-end pos="12226"></xml-name-end><x-equals pos="12232"></x-equals><xml-att-quote pos="12233"></xml-att-quote><xml-literal-start pos="12234"></xml-literal-start><xml-att-quote pos="12236"></xml-att-quote><x-tag-end pos="12237" length="1"></x-tag-end><nested-query pos="12238"></nested-query><start-xquery pos="12239"></start-xquery><literal type="34" start="12271" end="12274"></literal><unnested-xquery pos="12276"></unnested-xquery><resume-x-literal-txt pos="12277"></resume-x-literal-txt><xml-close-tag pos="12282"></xml-close-tag><x-tag-end pos="12290" length="1"></x-tag-end><xml-open-tag pos="12306"></xml-open-tag><xml-name-end pos="12313"></xml-name-end><x-equals pos="12319"></x-equals><xml-att-quote pos="12320"></xml-att-quote><xml-literal-start pos="12321"></xml-literal-start><xml-att-quote pos="12323"></xml-att-quote><x-tag-end pos="12324" length="1"></x-tag-end><nested-query pos="12325"></nested-query><start-xquery pos="12326"></start-xquery><literal type="34" start="12358" end="12361"></literal><unnested-xquery pos="12363"></unnested-xquery><resume-x-literal-txt pos="12364"></resume-x-literal-txt><xml-close-tag pos="12369"></xml-close-tag><x-tag-end pos="12377" length="1"></x-tag-end><xml-open-tag pos="12393"></xml-open-tag><xml-name-end pos="12400"></xml-name-end><x-equals pos="12406"></x-equals><xml-att-quote pos="12407"></xml-att-quote><xml-literal-start pos="12408"></xml-literal-start><xml-att-quote pos="12410"></xml-att-quote><x-tag-end pos="12411" length="1"></x-tag-end><nested-query pos="12412"></nested-query><start-xquery pos="12413"></start-xquery><literal type="34" start="12445" end="12448"></literal><unnested-xquery pos="12450"></unnested-xquery><resume-x-literal-txt pos="12451"></resume-x-literal-txt><xml-close-tag pos="12454"></xml-close-tag><x-tag-end pos="12462" length="1"></x-tag-end><xml-open-tag pos="12478"></xml-open-tag><xml-name-end pos="12485"></xml-name-end><x-equals pos="12491"></x-equals><xml-att-quote pos="12492"></xml-att-quote><xml-literal-start pos="12493"></xml-literal-start><xml-att-quote pos="12495"></xml-att-quote><x-tag-end pos="12496" length="1"></x-tag-end><nested-query pos="12497"></nested-query><start-xquery pos="12498"></start-xquery><literal type="34" start="12530" end="12533"></literal><unnested-xquery pos="12535"></unnested-xquery><resume-x-literal-txt pos="12536"></resume-x-literal-txt><xml-close-tag pos="12540"></xml-close-tag><x-tag-end pos="12548" length="1"></x-tag-end><xml-open-tag pos="12564"></xml-open-tag><xml-name-end pos="12571"></xml-name-end><x-equals pos="12577"></x-equals><xml-att-quote pos="12578"></xml-att-quote><xml-literal-start pos="12579"></xml-literal-start><xml-att-quote pos="12581"></xml-att-quote><x-tag-end pos="12582" length="1"></x-tag-end><nested-query pos="12583"></nested-query><start-xquery pos="12584"></start-xquery><literal type="34" start="12616" end="12619"></literal><unnested-xquery pos="12621"></unnested-xquery><resume-x-literal-txt pos="12622"></resume-x-literal-txt><xml-close-tag pos="12626"></xml-close-tag><x-tag-end pos="12634" length="1"></x-tag-end><xml-open-tag pos="12650"></xml-open-tag><xml-name-end pos="12657"></xml-name-end><x-equals pos="12663"></x-equals><xml-att-quote pos="12664"></xml-att-quote><xml-literal-start pos="12665"></xml-literal-start><xml-att-quote pos="12667"></xml-att-quote><x-tag-end pos="12668" length="1"></x-tag-end><nested-query pos="12669"></nested-query><start-xquery pos="12670"></start-xquery><literal type="34" start="12702" end="12705"></literal><unnested-xquery pos="12707"></unnested-xquery><resume-x-literal-txt pos="12708"></resume-x-literal-txt><xml-close-tag pos="12714"></xml-close-tag><x-tag-end pos="12722" length="1"></x-tag-end><xml-open-tag pos="12738"></xml-open-tag><xml-name-end pos="12745"></xml-name-end><x-equals pos="12751"></x-equals><xml-att-quote pos="12752"></xml-att-quote><xml-literal-start pos="12753"></xml-literal-start><xml-att-quote pos="12755"></xml-att-quote><x-tag-end pos="12756" length="1"></x-tag-end><nested-query pos="12757"></nested-query><start-xquery pos="12758"></start-xquery><literal type="34" start="12790" end="12793"></literal><unnested-xquery pos="12795"></unnested-xquery><resume-x-literal-txt pos="12796"></resume-x-literal-txt><xml-close-tag pos="12805"></xml-close-tag><x-tag-end pos="12813" length="1"></x-tag-end><xml-open-tag pos="12829"></xml-open-tag><xml-name-end pos="12836"></xml-name-end><x-equals pos="12842"></x-equals><xml-att-quote pos="12843"></xml-att-quote><xml-literal-start pos="12844"></xml-literal-start><xml-att-quote pos="12846"></xml-att-quote><x-tag-end pos="12847" length="1"></x-tag-end><nested-query pos="12848"></nested-query><start-xquery pos="12849"></start-xquery><literal type="34" start="12881" end="12884"></literal><unnested-xquery pos="12886"></unnested-xquery><resume-x-literal-txt pos="12887"></resume-x-literal-txt><xml-close-tag pos="12894"></xml-close-tag><x-tag-end pos="12902" length="1"></x-tag-end><xml-open-tag pos="12918"></xml-open-tag><xml-name-end pos="12925"></xml-name-end><x-equals pos="12931"></x-equals><xml-att-quote pos="12932"></xml-att-quote><xml-literal-start pos="12933"></xml-literal-start><xml-att-quote pos="12935"></xml-att-quote><x-tag-end pos="12936" length="1"></x-tag-end><nested-query pos="12937"></nested-query><start-xquery pos="12938"></start-xquery><literal type="34" start="12970" end="12973"></literal><unnested-xquery pos="12975"></unnested-xquery><resume-x-literal-txt pos="12976"></resume-x-literal-txt><xml-close-tag pos="12984"></xml-close-tag><x-tag-end pos="12992" length="1"></x-tag-end><xml-open-tag pos="13008"></xml-open-tag><xml-name-end pos="13015"></xml-name-end><x-equals pos="13021"></x-equals><xml-att-quote pos="13022"></xml-att-quote><xml-literal-start pos="13023"></xml-literal-start><xml-att-quote pos="13025"></xml-att-quote><x-tag-end pos="13026" length="1"></x-tag-end><nested-query pos="13027"></nested-query><start-xquery pos="13028"></start-xquery><literal type="34" start="13060" end="13063"></literal><unnested-xquery pos="13065"></unnested-xquery><resume-x-literal-txt pos="13066"></resume-x-literal-txt><xml-close-tag pos="13074"></xml-close-tag><x-tag-end pos="13082" length="1"></x-tag-end><xml-close-tag pos="13097"></xml-close-tag><x-tag-end pos="13105" length="1"></x-tag-end><nested-query pos="13120"></nested-query><start-xquery pos="13121"></start-xquery><literal type="34" start="13121" end="13125"></literal><unnested-xquery pos="13126"></unnested-xquery><resume-x-literal-txt pos="13127"></resume-x-literal-txt><xml-open-tag pos="13141"></xml-open-tag><xml-name-end pos="13147"></xml-name-end><x-equals pos="13152"></x-equals><xml-att-quote pos="13153"></xml-att-quote><xml-literal-start pos="13154"></xml-literal-start><xml-att-quote pos="13158"></xml-att-quote><xml-literal-end pos="13159"></xml-literal-end><x-equals pos="13164"></x-equals><xml-att-quote pos="13165"></xml-att-quote><xml-literal-start pos="13166"></xml-literal-start><xml-att-quote pos="13173"></xml-att-quote><xml-literal-end pos="13174"></xml-literal-end><x-equals pos="13180"></x-equals><xml-att-quote pos="13181"></xml-att-quote><nested-query pos="13182"></nested-query><start-xquery pos="13183"></start-xquery><unnested-xquery pos="13209"></unnested-xquery><xml-att-quote pos="13210"></xml-att-quote><xml-literal-end pos="13211"></xml-literal-end><x-equals pos="13217"></x-equals><xml-att-quote pos="13218"></xml-att-quote><xml-literal-start pos="13219"></xml-literal-start><xml-att-quote pos="13229"></xml-att-quote><xml-literal-end pos="13230"></xml-literal-end><x-tag-end pos="13231" length="2" level="3"></x-tag-end><nested-query pos="13247"></nested-query><start-xquery pos="13248"></start-xquery><literal type="34" start="13248" end="13252"></literal><unnested-xquery pos="13253"></unnested-xquery><resume-x-literal-txt pos="13254"></resume-x-literal-txt><xml-open-tag pos="13268"></xml-open-tag><xml-name-end pos="13274"></xml-name-end><x-equals pos="13279"></x-equals><xml-att-quote pos="13280"></xml-att-quote><xml-literal-start pos="13281"></xml-literal-start><xml-att-quote pos="13285"></xml-att-quote><xml-literal-end pos="13286"></xml-literal-end><x-equals pos="13291"></x-equals><xml-att-quote pos="13292"></xml-att-quote><xml-literal-start pos="13293"></xml-literal-start><xml-att-quote pos="13301"></xml-att-quote><xml-literal-end pos="13302"></xml-literal-end><x-equals pos="13308"></x-equals><xml-att-quote pos="13309"></xml-att-quote><nested-query pos="13310"></nested-query><start-xquery pos="13311"></start-xquery><unnested-xquery pos="13338"></unnested-xquery><xml-att-quote pos="13339"></xml-att-quote><xml-literal-end pos="13340"></xml-literal-end><x-equals pos="13346"></x-equals><xml-att-quote pos="13347"></xml-att-quote><xml-literal-start pos="13348"></xml-literal-start><xml-att-quote pos="13358"></xml-att-quote><xml-literal-end pos="13359"></xml-literal-end><x-tag-end pos="13360" length="2" level="3"></x-tag-end><xml-close-tag pos="13372"></xml-close-tag><x-tag-end pos="13377" length="1"></x-tag-end><xml-close-tag pos="13382"></xml-close-tag><x-tag-end pos="13387" length="1"></x-tag-end><start-xquery pos="13388"></start-xquery><literal type="34" start="13535" end="13544"></literal><comment start="13561" end="13589"></comment><comment start="13594" end="14798"></comment><comment start="14803" end="15073"></comment><comment start="15790" end="15944"></comment><xml-open-tag pos="16028"></xml-open-tag><x-tag-end pos="16032" length="1"></x-tag-end><nested-query pos="16033"></nested-query><start-xquery pos="16034"></start-xquery><unnested-xquery pos="16050"></unnested-xquery><xml-close-tag pos="16051"></xml-close-tag><x-tag-end pos="16056" length="1"></x-tag-end><start-xquery pos="16057"></start-xquery><comment start="16081" end="16539"></comment><xml-open-tag pos="16836"></xml-open-tag><xml-name-end pos="16840"></xml-name-end><x-equals pos="16846"></x-equals><xml-att-quote pos="16847"></xml-att-quote><xml-literal-start pos="16848"></xml-literal-start><xml-att-quote pos="16862"></xml-att-quote><x-tag-end pos="16863" length="1"></x-tag-end><xml-open-tag pos="16874"></xml-open-tag><xml-name-end pos="16878"></xml-name-end><x-equals pos="16884"></x-equals><xml-att-quote pos="16885"></xml-att-quote><xml-literal-start pos="16886"></xml-literal-start><xml-att-quote pos="16892"></xml-att-quote><x-tag-end pos="16893" length="1"></x-tag-end><xml-open-tag pos="16944"></xml-open-tag><xml-name-end pos="16946"></xml-name-end><x-equals pos="16951"></x-equals><xml-att-quote pos="16952"></xml-att-quote><xml-literal-start pos="16953"></xml-literal-start><nested-query pos="16964"></nested-query><start-xquery pos="16965"></start-xquery><literal type="34" start="16997" end="16999"></literal><literal type="34" start="17002" end="17007"></literal><unnested-xquery pos="17010"></unnested-xquery><xml-att-quote pos="17011"></xml-att-quote><x-tag-end pos="17012" length="1"></x-tag-end><xml-close-tag pos="17028"></xml-close-tag><x-tag-end pos="17031" length="1"></x-tag-end><xml-close-tag pos="17032"></xml-close-tag><x-tag-end pos="17037" length="1"></x-tag-end><nested-query pos="17048"></nested-query><start-xquery pos="17049"></start-xquery><unnested-xquery pos="17150"></unnested-xquery><resume-x-literal-txt pos="17151"></resume-x-literal-txt><xml-close-tag pos="17157"></xml-close-tag><x-tag-end pos="17162" length="1"></x-tag-end><start-xquery pos="17163"></start-xquery><comment start="17183" end="17258"></comment><literal type="34" start="17471" end="17476"></literal><literal type="34" start="17528" end="17530"></literal><literal type="34" start="17701" end="17706"></literal><comment start="17720" end="17746"></comment><comment start="17753" end="17854"></comment><literal type="34" start="18026" end="18028"></literal><xml-open-tag pos="18503"></xml-open-tag><x-tag-end pos="18507" length="1"></x-tag-end><nested-query pos="18512"></nested-query><start-xquery pos="18513"></start-xquery><xml-open-tag pos="18531"></xml-open-tag><x-tag-end pos="18534" length="1"></x-tag-end><nested-query pos="18535"></nested-query><start-xquery pos="18536"></start-xquery><unnested-xquery pos="18542"></unnested-xquery><xml-close-tag pos="18543"></xml-close-tag><x-tag-end pos="18547" length="1"></x-tag-end><start-xquery pos="18548"></start-xquery><unnested-xquery pos="18557"></unnested-xquery><resume-x-literal-txt pos="18558"></resume-x-literal-txt><xml-open-tag pos="18562"></xml-open-tag><xml-name-end pos="18566"></xml-name-end><x-equals pos="18572"></x-equals><xml-att-quote pos="18573"></xml-att-quote><xml-literal-start pos="18574"></xml-literal-start><xml-att-quote pos="18586"></xml-att-quote><x-tag-end pos="18587" length="1"></x-tag-end><nested-query pos="18592"></nested-query><start-xquery pos="18593"></start-xquery><comment start="18594" end="18602"></comment><literal type="34" start="18822" end="18828"></literal><literal type="34" start="18837" end="18839"></literal><xml-open-tag pos="18865"></xml-open-tag><x-tag-end pos="18869" length="1"></x-tag-end><xml-open-tag pos="18870"></xml-open-tag><xml-name-end pos="18872"></xml-name-end><x-equals pos="18877"></x-equals><xml-att-quote pos="18878"></xml-att-quote><xml-literal-start pos="18879"></xml-literal-start><nested-query pos="18890"></nested-query><start-xquery pos="18891"></start-xquery><unnested-xquery pos="18894"></unnested-xquery><xml-att-quote pos="18895"></xml-att-quote><x-tag-end pos="18896" length="1"></x-tag-end><nested-query pos="18909"></nested-query><start-xquery pos="18910"></start-xquery><xml-open-tag pos="19064"></xml-open-tag><xml-name-end pos="19068"></xml-name-end><x-equals pos="19072"></x-equals><xml-att-quote pos="19073"></xml-att-quote><xml-literal-start pos="19074"></xml-literal-start><xml-att-quote pos="19102"></xml-att-quote><xml-literal-end pos="19103"></xml-literal-end><x-equals pos="19109"></x-equals><xml-att-quote pos="19110"></xml-att-quote><xml-literal-start pos="19111"></xml-literal-start><xml-att-quote pos="19124"></xml-att-quote><x-tag-end pos="19125" length="2" level="5"></x-tag-end><start-xquery pos="19127"></start-xquery><xml-open-tag pos="19128"></xml-open-tag><x-tag-end pos="19135" length="1"></x-tag-end><nested-query pos="19136"></nested-query><start-xquery pos="19137"></start-xquery><unnested-xquery pos="19142"></unnested-xquery><xml-close-tag pos="19143"></xml-close-tag><x-tag-end pos="19151" length="1"></x-tag-end><start-xquery pos="19152"></start-xquery><unnested-xquery pos="19187"></unnested-xquery><resume-x-literal-txt pos="19188"></resume-x-literal-txt><xml-close-tag pos="19199"></xml-close-tag><x-tag-end pos="19202" length="1"></x-tag-end><xml-close-tag pos="19203"></xml-close-tag><x-tag-end pos="19208" length="1"></x-tag-end><start-xquery pos="19209"></start-xquery><unnested-xquery pos="19219"></unnested-xquery><resume-x-literal-txt pos="19220"></resume-x-literal-txt><nested-query pos="19227"></nested-query><start-xquery pos="19228"></start-xquery><comment start="19229" end="19245"></comment><literal type="34" start="19400" end="19402"></literal><literal type="34" start="19497" end="19500"></literal><literal type="34" start="19509" end="19511"></literal><comment start="19533" end="19640"></comment><literal type="34" start="19971" end="19973"></literal><literal type="34" start="19984" end="19986"></literal><xml-open-tag pos="20038"></xml-open-tag><x-tag-end pos="20042" length="1"></x-tag-end><xml-open-tag pos="20043"></xml-open-tag><xml-name-end pos="20045"></xml-name-end><x-equals pos="20050"></x-equals><xml-att-quote pos="20051"></xml-att-quote><xml-literal-start pos="20052"></xml-literal-start><nested-query pos="20063"></nested-query><start-xquery pos="20064"></start-xquery><unnested-xquery pos="20067"></unnested-xquery><xml-att-quote pos="20068"></xml-att-quote><x-tag-end pos="20069" length="1"></x-tag-end><nested-query pos="20080"></nested-query><start-xquery pos="20081"></start-xquery><xml-open-tag pos="20194"></xml-open-tag><xml-name-end pos="20198"></xml-name-end><x-equals pos="20202"></x-equals><xml-att-quote pos="20203"></xml-att-quote><xml-literal-start pos="20204"></xml-literal-start><xml-att-quote pos="20233"></xml-att-quote><xml-literal-end pos="20234"></xml-literal-end><x-equals pos="20240"></x-equals><xml-att-quote pos="20241"></xml-att-quote><xml-literal-start pos="20242"></xml-literal-start><xml-att-quote pos="20255"></xml-att-quote><x-tag-end pos="20256" length="2" level="5"></x-tag-end><start-xquery pos="20258"></start-xquery><xml-open-tag pos="20259"></xml-open-tag><x-tag-end pos="20266" length="1"></x-tag-end><nested-query pos="20267"></nested-query><start-xquery pos="20268"></start-xquery><unnested-xquery pos="20273"></unnested-xquery><xml-close-tag pos="20274"></xml-close-tag><x-tag-end pos="20282" length="1"></x-tag-end><start-xquery pos="20283"></start-xquery><unnested-xquery pos="20314"></unnested-xquery><resume-x-literal-txt pos="20315"></resume-x-literal-txt><xml-close-tag pos="20324"></xml-close-tag><x-tag-end pos="20327" length="1"></x-tag-end><xml-close-tag pos="20328"></xml-close-tag><x-tag-end pos="20333" length="1"></x-tag-end><start-xquery pos="20334"></start-xquery><unnested-xquery pos="20354"></unnested-xquery><resume-x-literal-txt pos="20355"></resume-x-literal-txt><xml-close-tag pos="20360"></xml-close-tag><x-tag-end pos="20365" length="1"></x-tag-end><xml-close-tag pos="20370"></xml-close-tag><x-tag-end pos="20375" length="1"></x-tag-end><start-xquery pos="20376"></start-xquery><comment start="20647" end="20677"></comment><literal type="34" start="21038" end="21042"></literal><literal type="34" start="21094" end="21096"></literal><literal type="34" start="21228" end="21233"></literal><comment start="21247" end="21268"></comment><comment start="21275" end="21376"></comment><literal type="34" start="21533" end="21535"></literal><xml-open-tag pos="21985"></xml-open-tag><x-tag-end pos="21989" length="1"></x-tag-end><nested-query pos="21994"></nested-query><start-xquery pos="21995"></start-xquery><xml-open-tag pos="22013"></xml-open-tag><x-tag-end pos="22016" length="1"></x-tag-end><nested-query pos="22017"></nested-query><start-xquery pos="22018"></start-xquery><unnested-xquery pos="22024"></unnested-xquery><xml-close-tag pos="22025"></xml-close-tag><x-tag-end pos="22029" length="1"></x-tag-end><start-xquery pos="22030"></start-xquery><unnested-xquery pos="22039"></unnested-xquery><resume-x-literal-txt pos="22040"></resume-x-literal-txt><xml-open-tag pos="22044"></xml-open-tag><xml-name-end pos="22048"></xml-name-end><x-equals pos="22054"></x-equals><xml-att-quote pos="22055"></xml-att-quote><xml-literal-start pos="22056"></xml-literal-start><xml-att-quote pos="22068"></xml-att-quote><x-tag-end pos="22069" length="1"></x-tag-end><nested-query pos="22074"></nested-query><start-xquery pos="22075"></start-xquery><comment start="22076" end="22084"></comment><literal type="34" start="22303" end="22309"></literal><literal type="34" start="22318" end="22320"></literal><xml-open-tag pos="22346"></xml-open-tag><x-tag-end pos="22350" length="1"></x-tag-end><xml-open-tag pos="22351"></xml-open-tag><xml-name-end pos="22353"></xml-name-end><x-equals pos="22358"></x-equals><xml-att-quote pos="22359"></xml-att-quote><xml-literal-start pos="22360"></xml-literal-start><nested-query pos="22371"></nested-query><start-xquery pos="22372"></start-xquery><unnested-xquery pos="22375"></unnested-xquery><xml-att-quote pos="22376"></xml-att-quote><x-tag-end pos="22377" length="1"></x-tag-end><nested-query pos="22390"></nested-query><start-xquery pos="22391"></start-xquery><xml-open-tag pos="22541"></xml-open-tag><xml-name-end pos="22545"></xml-name-end><x-equals pos="22549"></x-equals><xml-att-quote pos="22550"></xml-att-quote><xml-literal-start pos="22551"></xml-literal-start><xml-att-quote pos="22579"></xml-att-quote><xml-literal-end pos="22580"></xml-literal-end><x-equals pos="22586"></x-equals><xml-att-quote pos="22587"></xml-att-quote><xml-literal-start pos="22588"></xml-literal-start><xml-att-quote pos="22601"></xml-att-quote><xml-literal-end pos="22602"></xml-literal-end><x-tag-end pos="22603" length="2" level="5"></x-tag-end><start-xquery pos="22605"></start-xquery><xml-open-tag pos="22606"></xml-open-tag><x-tag-end pos="22613" length="1"></x-tag-end><nested-query pos="22614"></nested-query><start-xquery pos="22615"></start-xquery><unnested-xquery pos="22620"></unnested-xquery><xml-close-tag pos="22621"></xml-close-tag><x-tag-end pos="22629" length="1"></x-tag-end><start-xquery pos="22630"></start-xquery><unnested-xquery pos="22665"></unnested-xquery><resume-x-literal-txt pos="22666"></resume-x-literal-txt><xml-close-tag pos="22677"></xml-close-tag><x-tag-end pos="22680" length="1"></x-tag-end><xml-close-tag pos="22681"></xml-close-tag><x-tag-end pos="22686" length="1"></x-tag-end><start-xquery pos="22687"></start-xquery><unnested-xquery pos="22697"></unnested-xquery><resume-x-literal-txt pos="22698"></resume-x-literal-txt><nested-query pos="22705"></nested-query><start-xquery pos="22706"></start-xquery><comment start="22707" end="22718"></comment><literal type="34" start="22861" end="22863"></literal><literal type="34" start="22982" end="22985"></literal><literal type="34" start="22994" end="22996"></literal><comment start="23025" end="23135"></comment><literal type="34" start="23485" end="23487"></literal><literal type="34" start="23515" end="23517"></literal><comment start="23552" end="23662"></comment><literal type="34" start="23969" end="23971"></literal><literal type="34" start="23999" end="24001"></literal><literal type="34" start="24068" end="24072"></literal><xml-open-tag pos="24092"></xml-open-tag><x-tag-end pos="24096" length="1"></x-tag-end><xml-open-tag pos="24097"></xml-open-tag><xml-name-end pos="24099"></xml-name-end><x-equals pos="24104"></x-equals><xml-att-quote pos="24105"></xml-att-quote><xml-literal-start pos="24106"></xml-literal-start><nested-query pos="24117"></nested-query><start-xquery pos="24118"></start-xquery><unnested-xquery pos="24125"></unnested-xquery><xml-att-quote pos="24126"></xml-att-quote><x-tag-end pos="24127" length="1"></x-tag-end><nested-query pos="24142"></nested-query><start-xquery pos="24143"></start-xquery><xml-open-tag pos="24266"></xml-open-tag><xml-name-end pos="24270"></xml-name-end><x-equals pos="24274"></x-equals><xml-att-quote pos="24275"></xml-att-quote><xml-literal-start pos="24276"></xml-literal-start><xml-att-quote pos="24305"></xml-att-quote><xml-literal-end pos="24306"></xml-literal-end><x-equals pos="24312"></x-equals><xml-att-quote pos="24313"></xml-att-quote><xml-literal-start pos="24314"></xml-literal-start><xml-att-quote pos="24327"></xml-att-quote><x-tag-end pos="24328" length="2" level="5"></x-tag-end><start-xquery pos="24330"></start-xquery><xml-open-tag pos="24331"></xml-open-tag><x-tag-end pos="24338" length="1"></x-tag-end><nested-query pos="24339"></nested-query><start-xquery pos="24340"></start-xquery><unnested-xquery pos="24345"></unnested-xquery><xml-close-tag pos="24346"></xml-close-tag><x-tag-end pos="24354" length="1"></x-tag-end><start-xquery pos="24355"></start-xquery><unnested-xquery pos="24394"></unnested-xquery><resume-x-literal-txt pos="24395"></resume-x-literal-txt><xml-close-tag pos="24408"></xml-close-tag><x-tag-end pos="24411" length="1"></x-tag-end><xml-close-tag pos="24412"></xml-close-tag><x-tag-end pos="24417" length="1"></x-tag-end><start-xquery pos="24418"></start-xquery><literal type="34" start="24453" end="24459"></literal><xml-open-tag pos="24479"></xml-open-tag><x-tag-end pos="24483" length="1"></x-tag-end><xml-open-tag pos="24484"></xml-open-tag><xml-name-end pos="24486"></xml-name-end><x-equals pos="24491"></x-equals><xml-att-quote pos="24492"></xml-att-quote><xml-literal-start pos="24493"></xml-literal-start><nested-query pos="24504"></nested-query><start-xquery pos="24505"></start-xquery><unnested-xquery pos="24512"></unnested-xquery><xml-att-quote pos="24513"></xml-att-quote><x-tag-end pos="24514" length="1"></x-tag-end><nested-query pos="24529"></nested-query><start-xquery pos="24530"></start-xquery><xml-open-tag pos="24653"></xml-open-tag><xml-name-end pos="24657"></xml-name-end><x-equals pos="24661"></x-equals><xml-att-quote pos="24662"></xml-att-quote><xml-literal-start pos="24663"></xml-literal-start><xml-att-quote pos="24692"></xml-att-quote><xml-literal-end pos="24693"></xml-literal-end><x-equals pos="24699"></x-equals><xml-att-quote pos="24700"></xml-att-quote><xml-literal-start pos="24701"></xml-literal-start><xml-att-quote pos="24714"></xml-att-quote><x-tag-end pos="24715" length="2" level="5"></x-tag-end><start-xquery pos="24717"></start-xquery><xml-open-tag pos="24718"></xml-open-tag><x-tag-end pos="24725" length="1"></x-tag-end><nested-query pos="24726"></nested-query><start-xquery pos="24727"></start-xquery><unnested-xquery pos="24732"></unnested-xquery><xml-close-tag pos="24733"></xml-close-tag><x-tag-end pos="24741" length="1"></x-tag-end><start-xquery pos="24742"></start-xquery><unnested-xquery pos="24781"></unnested-xquery><resume-x-literal-txt pos="24782"></resume-x-literal-txt><xml-close-tag pos="24795"></xml-close-tag><x-tag-end pos="24798" length="1"></x-tag-end><nested-query pos="24799"></nested-query><start-xquery pos="24800"></start-xquery><literal type="34" start="24800" end="24802"></literal><unnested-xquery pos="24803"></unnested-xquery><xml-open-tag pos="24804"></xml-open-tag><xml-name-end pos="24806"></xml-name-end><x-equals pos="24811"></x-equals><xml-att-quote pos="24812"></xml-att-quote><xml-literal-start pos="24813"></xml-literal-start><nested-query pos="24824"></nested-query><start-xquery pos="24825"></start-xquery><unnested-xquery pos="24832"></unnested-xquery><xml-att-quote pos="24833"></xml-att-quote><x-tag-end pos="24834" length="1"></x-tag-end><xml-close-tag pos="24841"></xml-close-tag><x-tag-end pos="24844" length="1"></x-tag-end><xml-close-tag pos="24845"></xml-close-tag><x-tag-end pos="24850" length="1"></x-tag-end><start-xquery pos="24851"></start-xquery><xml-open-tag pos="24886"></xml-open-tag><x-tag-end pos="24890" length="1"></x-tag-end><xml-open-tag pos="24891"></xml-open-tag><xml-name-end pos="24893"></xml-name-end><x-equals pos="24898"></x-equals><xml-att-quote pos="24899"></xml-att-quote><xml-literal-start pos="24900"></xml-literal-start><nested-query pos="24911"></nested-query><start-xquery pos="24912"></start-xquery><unnested-xquery pos="24919"></unnested-xquery><xml-att-quote pos="24920"></xml-att-quote><x-tag-end pos="24921" length="1"></x-tag-end><nested-query pos="24936"></nested-query><start-xquery pos="24937"></start-xquery><xml-open-tag pos="25060"></xml-open-tag><xml-name-end pos="25064"></xml-name-end><x-equals pos="25068"></x-equals><xml-att-quote pos="25069"></xml-att-quote><xml-literal-start pos="25070"></xml-literal-start><xml-att-quote pos="25098"></xml-att-quote><xml-literal-end pos="25099"></xml-literal-end><x-equals pos="25105"></x-equals><xml-att-quote pos="25106"></xml-att-quote><xml-literal-start pos="25107"></xml-literal-start><xml-att-quote pos="25120"></xml-att-quote><x-tag-end pos="25121" length="2" level="5"></x-tag-end><start-xquery pos="25123"></start-xquery><xml-open-tag pos="25124"></xml-open-tag><x-tag-end pos="25131" length="1"></x-tag-end><nested-query pos="25132"></nested-query><start-xquery pos="25133"></start-xquery><unnested-xquery pos="25138"></unnested-xquery><xml-close-tag pos="25139"></xml-close-tag><x-tag-end pos="25147" length="1"></x-tag-end><start-xquery pos="25148"></start-xquery><unnested-xquery pos="25187"></unnested-xquery><resume-x-literal-txt pos="25188"></resume-x-literal-txt><xml-close-tag pos="25201"></xml-close-tag><x-tag-end pos="25204" length="1"></x-tag-end><xml-close-tag pos="25205"></xml-close-tag><x-tag-end pos="25210" length="1"></x-tag-end><start-xquery pos="25211"></start-xquery><unnested-xquery pos="25249"></unnested-xquery><resume-x-literal-txt pos="25250"></resume-x-literal-txt><xml-close-tag pos="25255"></xml-close-tag><x-tag-end pos="25260" length="1"></x-tag-end><xml-close-tag pos="25265"></xml-close-tag><x-tag-end pos="25270" length="1"></x-tag-end><start-xquery pos="25271"></start-xquery><literal type="34" start="25788" end="25793"></literal><literal type="34" start="25849" end="25851"></literal><literal type="34" start="25991" end="25996"></literal><comment start="26018" end="26039"></comment><comment start="26050" end="26151"></comment><literal type="34" start="26316" end="26318"></literal><xml-open-tag pos="26829"></xml-open-tag><x-tag-end pos="26833" length="1"></x-tag-end><nested-query pos="26848"></nested-query><start-xquery pos="26849"></start-xquery><xml-open-tag pos="26866"></xml-open-tag><xml-name-end pos="26870"></xml-name-end><x-equals pos="26876"></x-equals><xml-att-quote pos="26877"></xml-att-quote><xml-literal-start pos="26878"></xml-literal-start><xml-att-quote pos="26882"></xml-att-quote><xml-literal-end pos="26883"></xml-literal-end><x-equals pos="26887"></x-equals><xml-att-quote pos="26888"></xml-att-quote><nested-query pos="26889"></nested-query><start-xquery pos="26890"></start-xquery><unnested-xquery pos="26895"></unnested-xquery><xml-att-quote pos="26896"></xml-att-quote><xml-literal-end pos="26897"></xml-literal-end><x-tag-end pos="26898" length="2" level="2"></x-tag-end><start-xquery pos="26900"></start-xquery><literal type="34" start="26901" end="26903"></literal><unnested-xquery pos="26913"></unnested-xquery><xml-open-tag pos="26914"></xml-open-tag><x-tag-end pos="26921" length="1"></x-tag-end><nested-query pos="26922"></nested-query><start-xquery pos="26923"></start-xquery><unnested-xquery pos="26929"></unnested-xquery><xml-close-tag pos="26930"></xml-close-tag><x-tag-end pos="26938" length="1"></x-tag-end><xml-open-tag pos="26955"></xml-open-tag><xml-name-end pos="26960"></xml-name-end><x-equals pos="26966"></x-equals><xml-att-quote pos="26967"></xml-att-quote><xml-literal-start pos="26968"></xml-literal-start><xml-att-quote pos="26975"></xml-att-quote><xml-literal-end pos="26976"></xml-literal-end><x-equals pos="26986"></x-equals><xml-att-quote pos="26987"></xml-att-quote><xml-literal-start pos="26988"></xml-literal-start><xml-att-quote pos="26996"></xml-att-quote><x-tag-end pos="26997" length="1"></x-tag-end><nested-query pos="27006"></nested-query><start-xquery pos="27007"></start-xquery><comment start="27008" end="27016"></comment><literal type="34" start="27251" end="27267"></literal><xml-open-tag pos="27462"></xml-open-tag><xml-name-end pos="27464"></xml-name-end><x-equals pos="27469"></x-equals><xml-att-quote pos="27470"></xml-att-quote><xml-literal-start pos="27471"></xml-literal-start><nested-query pos="27482"></nested-query><start-xquery pos="27483"></start-xquery><unnested-xquery pos="27486"></unnested-xquery><xml-att-quote pos="27487"></xml-att-quote><x-tag-end pos="27488" length="1"></x-tag-end><xml-open-tag pos="27489"></xml-open-tag><x-tag-end pos="27496" length="1"></x-tag-end><nested-query pos="27497"></nested-query><start-xquery pos="27498"></start-xquery><unnested-xquery pos="27503"></unnested-xquery><xml-close-tag pos="27504"></xml-close-tag><x-tag-end pos="27512" length="1"></x-tag-end><xml-close-tag pos="27513"></xml-close-tag><x-tag-end pos="27516" length="1"></x-tag-end><start-xquery pos="27517"></start-xquery><unnested-xquery pos="27531"></unnested-xquery><resume-x-literal-txt pos="27532"></resume-x-literal-txt><nested-query pos="27543"></nested-query><start-xquery pos="27544"></start-xquery><comment start="27545" end="27556"></comment><literal type="34" start="27707" end="27709"></literal><comment start="27867" end="27978"></comment><literal type="34" start="28337" end="28339"></literal><literal type="34" start="28367" end="28369"></literal><literal type="34" start="28434" end="28436"></literal><xml-open-tag pos="28438"></xml-open-tag><xml-name-end pos="28440"></xml-name-end><x-equals pos="28445"></x-equals><xml-att-quote pos="28446"></xml-att-quote><xml-literal-start pos="28447"></xml-literal-start><nested-query pos="28458"></nested-query><start-xquery pos="28459"></start-xquery><unnested-xquery pos="28462"></unnested-xquery><xml-att-quote pos="28463"></xml-att-quote><x-tag-end pos="28464" length="1"></x-tag-end><xml-open-tag pos="28465"></xml-open-tag><xml-name-end pos="28470"></xml-name-end><x-equals pos="28476"></x-equals><xml-att-quote pos="28477"></xml-att-quote><nested-query pos="28478"></nested-query><start-xquery pos="28479"></start-xquery><unnested-xquery pos="28485"></unnested-xquery><resume-x-literal pos="28486"></resume-x-literal><xml-att-quote pos="28496"></xml-att-quote><xml-literal-end pos="28497"></xml-literal-end><x-equals pos="28503"></x-equals><xml-att-quote pos="28504"></xml-att-quote><xml-literal-start pos="28505"></xml-literal-start><nested-query pos="28509"></nested-query><start-xquery pos="28510"></start-xquery><unnested-xquery pos="28556"></unnested-xquery><xml-att-quote pos="28557"></xml-att-quote><x-tag-end pos="28558" length="1"></x-tag-end><nested-query pos="28573"></nested-query><start-xquery pos="28574"></start-xquery><xml-open-tag pos="28699"></xml-open-tag><xml-name-end pos="28706"></xml-name-end><x-equals pos="28712"></x-equals><xml-att-quote pos="28713"></xml-att-quote><xml-literal-start pos="28714"></xml-literal-start><xml-att-quote pos="28722"></xml-att-quote><x-tag-end pos="28723" length="1"></x-tag-end><nested-query pos="28724"></nested-query><start-xquery pos="28725"></start-xquery><unnested-xquery pos="28730"></unnested-xquery><xml-close-tag pos="28731"></xml-close-tag><x-tag-end pos="28739" length="1"></x-tag-end><start-xquery pos="28740"></start-xquery><unnested-xquery pos="28779"></unnested-xquery><resume-x-literal-txt pos="28780"></resume-x-literal-txt><xml-close-tag pos="28793"></xml-close-tag><x-tag-end pos="28799" length="1"></x-tag-end><xml-close-tag pos="28800"></xml-close-tag><x-tag-end pos="28803" length="1"></x-tag-end><start-xquery pos="28804"></start-xquery><unnested-xquery pos="28833"></unnested-xquery><resume-x-literal-txt pos="28834"></resume-x-literal-txt><xml-close-tag pos="28863"></xml-close-tag><x-tag-end pos="28869" length="1"></x-tag-end><xml-close-tag pos="28878"></xml-close-tag><x-tag-end pos="28883" length="1"></x-tag-end><start-xquery pos="28884"></start-xquery><literal type="34" start="29141" end="29143"></literal><xml-open-tag pos="29171"></xml-open-tag><x-tag-end pos="29175" length="1"></x-tag-end><nested-query pos="29187"></nested-query><start-xquery pos="29188"></start-xquery><comment start="29188" end="29269"></comment><unnested-xquery pos="29270"></unnested-xquery><resume-x-literal-txt pos="29271"></resume-x-literal-txt><nested-query pos="29282"></nested-query><start-xquery pos="29283"></start-xquery><xml-open-tag pos="29300"></xml-open-tag><x-tag-end pos="29303" length="1"></x-tag-end><nested-query pos="29304"></nested-query><start-xquery pos="29305"></start-xquery><unnested-xquery pos="29311"></unnested-xquery><xml-close-tag pos="29312"></xml-close-tag><x-tag-end pos="29316" length="1"></x-tag-end><start-xquery pos="29317"></start-xquery><unnested-xquery pos="29325"></unnested-xquery><resume-x-literal-txt pos="29326"></resume-x-literal-txt><xml-open-tag pos="29340"></xml-open-tag><xml-name-end pos="29344"></xml-name-end><x-equals pos="29350"></x-equals><xml-att-quote pos="29351"></xml-att-quote><xml-literal-start pos="29352"></xml-literal-start><xml-att-quote pos="29364"></xml-att-quote><x-tag-end pos="29365" length="1"></x-tag-end><nested-query pos="29374"></nested-query><start-xquery pos="29375"></start-xquery><comment start="29384" end="29392"></comment><literal type="34" start="29459" end="29463"></literal><literal type="34" start="29631" end="29637"></literal><literal type="34" start="29646" end="29648"></literal><xml-open-tag pos="29680"></xml-open-tag><x-tag-end pos="29684" length="1"></x-tag-end><xml-open-tag pos="29685"></xml-open-tag><xml-name-end pos="29687"></xml-name-end><x-equals pos="29692"></x-equals><xml-att-quote pos="29693"></xml-att-quote><xml-literal-start pos="29694"></xml-literal-start><nested-query pos="29705"></nested-query><start-xquery pos="29706"></start-xquery><unnested-xquery pos="29709"></unnested-xquery><xml-att-quote pos="29710"></xml-att-quote><x-tag-end pos="29711" length="1"></x-tag-end><nested-query pos="29722"></nested-query><start-xquery pos="29723"></start-xquery><xml-open-tag pos="29783"></xml-open-tag><xml-name-end pos="29787"></xml-name-end><x-equals pos="29791"></x-equals><xml-att-quote pos="29792"></xml-att-quote><xml-literal-start pos="29793"></xml-literal-start><xml-att-quote pos="29818"></xml-att-quote><xml-literal-end pos="29819"></xml-literal-end><x-equals pos="29825"></x-equals><xml-att-quote pos="29826"></xml-att-quote><xml-literal-start pos="29827"></xml-literal-start><xml-att-quote pos="29840"></xml-att-quote><x-tag-end pos="29841" length="2" level="5"></x-tag-end><start-xquery pos="29843"></start-xquery><xml-open-tag pos="29844"></xml-open-tag><x-tag-end pos="29851" length="1"></x-tag-end><nested-query pos="29852"></nested-query><start-xquery pos="29853"></start-xquery><unnested-xquery pos="29858"></unnested-xquery><xml-close-tag pos="29859"></xml-close-tag><x-tag-end pos="29867" length="1"></x-tag-end><start-xquery pos="29868"></start-xquery><unnested-xquery pos="29909"></unnested-xquery><resume-x-literal-txt pos="29910"></resume-x-literal-txt><xml-close-tag pos="29920"></xml-close-tag><x-tag-end pos="29923" length="1"></x-tag-end><xml-close-tag pos="29934"></xml-close-tag><x-tag-end pos="29939" length="1"></x-tag-end><start-xquery pos="29940"></start-xquery><comment start="29959" end="29973"></comment><literal type="34" start="30183" end="30187"></literal><xml-open-tag pos="30190"></xml-open-tag><x-tag-end pos="30194" length="1"></x-tag-end><nested-query pos="30195"></nested-query><start-xquery pos="30196"></start-xquery><unnested-xquery pos="30202"></unnested-xquery><xml-close-tag pos="30203"></xml-close-tag><x-tag-end pos="30208" length="1"></x-tag-end><start-xquery pos="30209"></start-xquery><literal type="34" start="30376" end="30379"></literal><literal type="34" start="30388" end="30390"></literal><xml-open-tag pos="30441"></xml-open-tag><x-tag-end pos="30445" length="1"></x-tag-end><xml-open-tag pos="30446"></xml-open-tag><xml-name-end pos="30448"></xml-name-end><x-equals pos="30453"></x-equals><xml-att-quote pos="30454"></xml-att-quote><xml-literal-start pos="30455"></xml-literal-start><nested-query pos="30466"></nested-query><start-xquery pos="30467"></start-xquery><unnested-xquery pos="30470"></unnested-xquery><xml-att-quote pos="30471"></xml-att-quote><x-tag-end pos="30472" length="1"></x-tag-end><nested-query pos="30499"></nested-query><start-xquery pos="30500"></start-xquery><xml-open-tag pos="30585"></xml-open-tag><xml-name-end pos="30589"></xml-name-end><x-equals pos="30593"></x-equals><xml-att-quote pos="30594"></xml-att-quote><xml-literal-start pos="30595"></xml-literal-start><xml-att-quote pos="30620"></xml-att-quote><xml-literal-end pos="30621"></xml-literal-end><x-equals pos="30627"></x-equals><xml-att-quote pos="30628"></xml-att-quote><xml-literal-start pos="30629"></xml-literal-start><xml-att-quote pos="30642"></xml-att-quote><x-tag-end pos="30643" length="2" level="5"></x-tag-end><start-xquery pos="30645"></start-xquery><xml-open-tag pos="30646"></xml-open-tag><x-tag-end pos="30653" length="1"></x-tag-end><nested-query pos="30654"></nested-query><start-xquery pos="30655"></start-xquery><unnested-xquery pos="30660"></unnested-xquery><xml-close-tag pos="30661"></xml-close-tag><x-tag-end pos="30669" length="1"></x-tag-end><start-xquery pos="30670"></start-xquery><unnested-xquery pos="30733"></unnested-xquery><resume-x-literal-txt pos="30734"></resume-x-literal-txt><xml-close-tag pos="30756"></xml-close-tag><x-tag-end pos="30759" length="1"></x-tag-end><xml-close-tag pos="30760"></xml-close-tag><x-tag-end pos="30765" length="1"></x-tag-end><start-xquery pos="30766"></start-xquery><unnested-xquery pos="30780"></unnested-xquery><resume-x-literal-txt pos="30781"></resume-x-literal-txt><xml-close-tag pos="30789"></xml-close-tag><x-tag-end pos="30794" length="1"></x-tag-end><xml-close-tag pos="30805"></xml-close-tag><x-tag-end pos="30810" length="1"></x-tag-end><start-xquery pos="30811"></start-xquery><comment start="30966" end="31018"></comment><comment start="31025" end="31071"></comment><comment start="31289" end="31317"></comment><comment start="31324" end="31383"></comment><literal type="34" start="31938" end="31947"></literal><literal type="34" start="32088" end="32098"></literal><literal type="34" start="32240" end="32246"></literal><comment start="32400" end="32427"></comment><comment start="32432" end="32817"></comment><xml-open-tag pos="33075"></xml-open-tag><xml-name-end pos="33080"></xml-name-end><x-equals pos="33086"></x-equals><xml-att-quote pos="33087"></xml-att-quote><xml-literal-start pos="33088"></xml-literal-start><xml-att-quote pos="33100"></xml-att-quote><x-tag-end pos="33101" length="1"></x-tag-end><nested-query pos="33102"></nested-query><start-xquery pos="33103"></start-xquery><unnested-xquery pos="33112"></unnested-xquery><xml-close-tag pos="33113"></xml-close-tag><x-tag-end pos="33119" length="1"></x-tag-end><start-xquery pos="33120"></start-xquery><comment start="33145" end="33425"></comment><comment start="33598" end="33627"></comment><comment start="33632" end="34767"></comment><xml-open-tag pos="35098"></xml-open-tag><xml-name-end pos="35100"></xml-name-end><x-equals pos="35106"></x-equals><xml-att-quote pos="35107"></xml-att-quote><xml-literal-start pos="35108"></xml-literal-start><xml-att-quote pos="35115"></xml-att-quote><x-tag-end pos="35116" length="1"></x-tag-end><nested-query pos="35117"></nested-query><start-xquery pos="35118"></start-xquery><xml-open-tag pos="35210"></xml-open-tag><x-tag-end pos="35215" length="1"></x-tag-end><nested-query pos="35229"></nested-query><start-xquery pos="35230"></start-xquery><unnested-xquery pos="35242"></unnested-xquery><resume-x-literal-txt pos="35243"></resume-x-literal-txt><xml-open-tag pos="35256"></xml-open-tag><x-tag-end pos="35261" length="1"></x-tag-end><nested-query pos="35275"></nested-query><start-xquery pos="35276"></start-xquery><unnested-xquery pos="35288"></unnested-xquery><resume-x-literal-txt pos="35289"></resume-x-literal-txt><xml-open-tag pos="35302"></xml-open-tag><x-tag-end pos="35304" length="1"></x-tag-end><xml-close-tag pos="35308"></xml-close-tag><x-tag-end pos="35311" length="1"></x-tag-end><xml-close-tag pos="35328"></xml-close-tag><x-tag-end pos="35334" length="1"></x-tag-end><xml-close-tag pos="35345"></xml-close-tag><x-tag-end pos="35351" length="1"></x-tag-end><start-xquery pos="35352"></start-xquery><xml-open-tag pos="35378"></xml-open-tag><xml-name-end pos="35380"></xml-name-end><x-equals pos="35385"></x-equals><xml-att-quote pos="35386"></xml-att-quote><xml-literal-start pos="35387"></xml-literal-start><xml-att-quote pos="35406"></xml-att-quote><xml-literal-end pos="35407"></xml-literal-end><x-equals pos="35418"></x-equals><xml-att-quote pos="35419"></xml-att-quote><xml-literal-start pos="35420"></xml-literal-start><nested-query pos="35427"></nested-query><start-xquery pos="35428"></start-xquery><unnested-xquery pos="35432"></unnested-xquery><resume-x-literal pos="35433"></resume-x-literal><xml-att-quote pos="35460"></xml-att-quote><xml-literal-end pos="35461"></xml-literal-end><x-equals pos="35469"></x-equals><xml-att-quote pos="35470"></xml-att-quote><xml-literal-start pos="35471"></xml-literal-start><nested-query pos="35496"></nested-query><start-xquery pos="35497"></start-xquery><unnested-xquery pos="35510"></unnested-xquery><resume-x-literal pos="35511"></resume-x-literal><nested-query pos="35577"></nested-query><start-xquery pos="35578"></start-xquery><unnested-xquery pos="35599"></unnested-xquery><resume-x-literal pos="35600"></resume-x-literal><nested-query pos="35606"></nested-query><start-xquery pos="35607"></start-xquery><unnested-xquery pos="35630"></unnested-xquery><resume-x-literal pos="35631"></resume-x-literal><xml-att-quote pos="35658"></xml-att-quote><x-tag-end pos="35659" length="1"></x-tag-end><nested-query pos="35673"></nested-query><start-xquery pos="35674"></start-xquery><unnested-xquery pos="35686"></unnested-xquery><resume-x-literal-txt pos="35687"></resume-x-literal-txt><xml-open-tag pos="35700"></xml-open-tag><x-tag-end pos="35705" length="1"></x-tag-end><nested-query pos="35719"></nested-query><start-xquery pos="35720"></start-xquery><unnested-xquery pos="35732"></unnested-xquery><resume-x-literal-txt pos="35733"></resume-x-literal-txt><xml-open-tag pos="35746"></xml-open-tag><x-tag-end pos="35748" length="1"></x-tag-end><xml-close-tag pos="35752"></xml-close-tag><x-tag-end pos="35755" length="1"></x-tag-end><xml-close-tag pos="35772"></xml-close-tag><x-tag-end pos="35778" length="1"></x-tag-end><xml-close-tag pos="35789"></xml-close-tag><x-tag-end pos="35792" length="1"></x-tag-end><start-xquery pos="35793"></start-xquery><unnested-xquery pos="35798"></unnested-xquery><xml-close-tag pos="35799"></xml-close-tag><x-tag-end pos="35802" length="1"></x-tag-end><start-xquery pos="35803"></start-xquery><xml-open-tag pos="35852"></xml-open-tag><xml-name-end pos="35856"></xml-name-end><x-equals pos="35862"></x-equals><xml-att-quote pos="35863"></xml-att-quote><xml-literal-start pos="35864"></xml-literal-start><xml-att-quote pos="35871"></xml-att-quote><x-tag-end pos="35872" length="1"></x-tag-end><nested-query pos="35877"></nested-query><start-xquery pos="35878"></start-xquery><literal type="34" start="35888" end="35890"></literal><unnested-xquery pos="35891"></unnested-xquery><resume-x-literal-txt pos="35892"></resume-x-literal-txt><xml-close-tag pos="35896"></xml-close-tag><x-tag-end pos="35901" length="1"></x-tag-end><start-xquery pos="35902"></start-xquery><xml-open-tag pos="35913"></xml-open-tag><xml-name-end pos="35917"></xml-name-end><x-equals pos="35920"></x-equals><xml-att-quote pos="35921"></xml-att-quote><xml-literal-start pos="35922"></xml-literal-start><nested-query pos="35926"></nested-query><start-xquery pos="35927"></start-xquery><unnested-xquery pos="35931"></unnested-xquery><xml-att-quote pos="35932"></xml-att-quote><xml-literal-end pos="35933"></xml-literal-end><x-equals pos="35939"></x-equals><xml-att-quote pos="35940"></xml-att-quote><xml-literal-start pos="35941"></xml-literal-start><xml-att-quote pos="35956"></xml-att-quote><x-tag-end pos="35957" length="1"></x-tag-end><xml-close-tag pos="35959"></xml-close-tag><x-tag-end pos="35964" length="1"></x-tag-end><start-xquery pos="35965"></start-xquery><comment start="35973" end="36329"></comment><comment start="36443" end="36954"></comment><literal type="34" start="37158" end="37171"></literal><literal type="34" start="37299" end="37305"></literal><xml-open-tag pos="37316"></xml-open-tag><xml-name-end pos="37321"></xml-name-end><x-equals pos="37327"></x-equals><xml-att-quote pos="37328"></xml-att-quote><nested-query pos="37329"></nested-query><start-xquery pos="37330"></start-xquery><unnested-xquery pos="37351"></unnested-xquery><xml-att-quote pos="37352"></xml-att-quote><xml-literal-end pos="37353"></xml-literal-end><x-equals pos="37359"></x-equals><xml-att-quote pos="37360"></xml-att-quote><xml-literal-start pos="37361"></xml-literal-start><xml-att-quote pos="37371"></xml-att-quote><x-tag-end pos="37372" length="1"></x-tag-end><nested-query pos="37373"></nested-query><start-xquery pos="37374"></start-xquery><xml-open-tag pos="37406"></xml-open-tag><xml-name-end pos="37411"></xml-name-end><x-equals pos="37417"></x-equals><xml-att-quote pos="37418"></xml-att-quote><xml-literal-start pos="37419"></xml-literal-start><xml-att-quote pos="37429"></xml-att-quote><x-tag-end pos="37430" length="1"></x-tag-end><nested-query pos="37431"></nested-query><start-xquery pos="37432"></start-xquery><unnested-xquery pos="37508"></unnested-xquery><xml-close-tag pos="37509"></xml-close-tag><x-tag-end pos="37515" length="1"></x-tag-end><start-xquery pos="37516"></start-xquery><unnested-xquery pos="37548"></unnested-xquery><xml-close-tag pos="37549"></xml-close-tag><x-tag-end pos="37555" length="1"></x-tag-end><start-xquery pos="37556"></start-xquery><xml-open-tag pos="37600"></xml-open-tag><xml-name-end pos="37604"></xml-name-end><x-equals pos="37610"></x-equals><xml-att-quote pos="37611"></xml-att-quote><xml-literal-start pos="37612"></xml-literal-start><xml-att-quote pos="37620"></xml-att-quote><x-tag-end pos="37621" length="1"></x-tag-end><nested-query pos="37622"></nested-query><start-xquery pos="37623"></start-xquery><unnested-xquery pos="37628"></unnested-xquery><xml-close-tag pos="37629"></xml-close-tag><x-tag-end pos="37634" length="1"></x-tag-end><start-xquery pos="37635"></start-xquery><comment start="37664" end="37795"></comment><comment start="37868" end="38027"></comment><comment start="38218" end="38256"></comment><literal type="34" start="38330" end="38343"></literal><comment start="38376" end="38416"></comment><comment start="38612" end="38618"></comment><comment start="38851" end="38857"></comment><comment start="38891" end="38928"></comment><literal type="34" start="39018" end="39031"></literal><comment start="39074" end="39189"></comment><comment start="39295" end="39355"></comment><literal type="34" start="39476" end="39477"></literal><literal type="34" start="39520" end="39522"></literal><literal type="34" start="39550" end="39551"></literal><comment start="39655" end="39715"></comment><literal type="34" start="39844" end="39845"></literal><literal type="34" start="39888" end="39890"></literal><literal type="34" start="39928" end="39929"></literal><literal type="34" start="39972" end="39974"></literal><literal type="34" start="40064" end="40065"></literal><comment start="40082" end="40119"></comment><literal type="34" start="40191" end="40204"></literal><comment start="40229" end="40268"></comment><comment start="40456" end="40462"></comment><comment start="40691" end="40697"></comment><literal type="34" start="40762" end="40763"></literal><comment start="40786" end="40849"></comment><literal type="34" start="40982" end="40984"></literal><literal type="34" start="41025" end="41026"></literal><literal type="34" start="41134" end="41135"></literal><comment start="41158" end="41221"></comment><literal type="34" start="41354" end="41356"></literal><literal type="34" start="41397" end="41398"></literal><literal type="34" start="41476" end="41477"></literal><literal type="34" start="41550" end="41563"></literal><comment start="41732" end="41922"></comment><literal type="34" start="42090" end="42092"></literal><literal type="34" start="42103" end="42113"></literal><literal type="34" start="42120" end="42123"></literal><literal type="34" start="42238" end="42260"></literal><comment start="42300" end="42319"></comment><comment start="42324" end="42599"></comment><literal type="34" start="42714" end="42715"></literal><xml-open-tag pos="42728"></xml-open-tag><xml-name-end pos="42732"></xml-name-end><x-equals pos="42738"></x-equals><xml-att-quote pos="42739"></xml-att-quote><xml-literal-start pos="42740"></xml-literal-start><xml-att-quote pos="42757"></xml-att-quote><x-tag-end pos="42758" length="1"></x-tag-end><nested-query pos="42769"></nested-query><start-xquery pos="42770"></start-xquery><literal type="34" start="42771" end="42780"></literal><xml-open-tag pos="42782"></xml-open-tag><x-tag-end pos="42787" length="1"></x-tag-end><xml-open-tag pos="42792"></xml-open-tag><x-tag-end pos="42794" length="1"></x-tag-end><nested-query pos="42795"></nested-query><start-xquery pos="42796"></start-xquery><unnested-xquery pos="42805"></unnested-xquery><xml-close-tag pos="42806"></xml-close-tag><x-tag-end pos="42809" length="1"></x-tag-end><xml-close-tag pos="42810"></xml-close-tag><x-tag-end pos="42816" length="1"></x-tag-end><start-xquery pos="42817"></start-xquery><literal type="34" start="42818" end="42820"></literal><xml-open-tag pos="42867"></xml-open-tag><x-tag-end pos="42872" length="1"></x-tag-end><xml-open-tag pos="42876"></xml-open-tag><x-tag-end pos="42878" length="1"></x-tag-end><nested-query pos="42879"></nested-query><start-xquery pos="42880"></start-xquery><unnested-xquery pos="42893"></unnested-xquery><xml-close-tag pos="42894"></xml-close-tag><x-tag-end pos="42897" length="1"></x-tag-end><xml-close-tag pos="42898"></xml-close-tag><x-tag-end pos="42904" length="1"></x-tag-end><start-xquery pos="42905"></start-xquery><xml-open-tag pos="42925"></xml-open-tag><xml-name-end pos="42927"></xml-name-end><x-equals pos="42932"></x-equals><xml-att-quote pos="42933"></xml-att-quote><xml-literal-start pos="42934"></xml-literal-start><nested-query pos="42945"></nested-query><start-xquery pos="42946"></start-xquery><literal type="34" start="42978" end="42980"></literal><unnested-xquery pos="42983"></unnested-xquery><xml-att-quote pos="42984"></xml-att-quote><x-tag-end pos="42985" length="1"></x-tag-end><xml-close-tag pos="42989"></xml-close-tag><x-tag-end pos="42992" length="1"></x-tag-end><start-xquery pos="42993"></start-xquery><unnested-xquery pos="42994"></unnested-xquery><resume-x-literal-txt pos="42995"></resume-x-literal-txt><xml-close-tag pos="43001"></xml-close-tag><x-tag-end pos="43006" length="1"></x-tag-end><start-xquery pos="43007"></start-xquery><comment start="43063" end="43476"></comment><xml-open-tag pos="43760"></xml-open-tag><xml-name-end pos="43764"></xml-name-end><x-equals pos="43770"></x-equals><xml-att-quote pos="43771"></xml-att-quote><xml-literal-start pos="43772"></xml-literal-start><xml-att-quote pos="43784"></xml-att-quote><x-tag-end pos="43785" length="1"></x-tag-end><xml-open-tag pos="43793"></xml-open-tag><x-tag-end pos="43798" length="1"></x-tag-end><xml-open-tag pos="43810"></xml-open-tag><x-tag-end pos="43817" length="1"></x-tag-end><nested-query pos="43818"></nested-query><start-xquery pos="43819"></start-xquery><unnested-xquery pos="43846"></unnested-xquery><resume-x-literal-txt pos="43847"></resume-x-literal-txt><nested-query pos="43851"></nested-query><start-xquery pos="43852"></start-xquery><unnested-xquery pos="43877"></unnested-xquery><xml-close-tag pos="43878"></xml-close-tag><x-tag-end pos="43886" length="1"></x-tag-end><xml-open-tag pos="43897"></xml-open-tag><x-tag-end pos="43904" length="1"></x-tag-end><nested-query pos="43905"></nested-query><start-xquery pos="43906"></start-xquery><unnested-xquery pos="43933"></unnested-xquery><xml-close-tag pos="43934"></xml-close-tag><x-tag-end pos="43942" length="1"></x-tag-end><xml-open-tag pos="43965"></xml-open-tag><x-tag-end pos="43972" length="1"></x-tag-end><nested-query pos="43973"></nested-query><start-xquery pos="43974"></start-xquery><unnested-xquery pos="43979"></unnested-xquery><resume-x-literal-txt pos="43980"></resume-x-literal-txt><xml-close-tag pos="43981"></xml-close-tag><x-tag-end pos="43989" length="1"></x-tag-end><xml-close-tag pos="43991"></xml-close-tag><x-tag-end pos="43997" length="1"></x-tag-end><nested-query pos="43999"></nested-query><start-xquery pos="44000"></start-xquery><literal type="34" start="44021" end="44023"></literal><xml-open-tag pos="44025"></xml-open-tag><xml-name-end pos="44027"></xml-name-end><x-equals pos="44032"></x-equals><xml-att-quote pos="44033"></xml-att-quote><xml-literal-start pos="44034"></xml-literal-start><xml-att-quote pos="44044"></xml-att-quote><x-tag-end pos="44045" length="1"></x-tag-end><xml-close-tag pos="44060"></xml-close-tag><x-tag-end pos="44063" length="1"></x-tag-end><start-xquery pos="44064"></start-xquery><unnested-xquery pos="44073"></unnested-xquery><xml-close-tag pos="44074"></xml-close-tag><x-tag-end pos="44079" length="1"></x-tag-end><start-xquery pos="44080"></start-xquery><comment start="44087" end="44465"></comment><xml-open-tag pos="44575"></xml-open-tag><xml-name-end pos="44579"></xml-name-end><x-equals pos="44585"></x-equals><xml-att-quote pos="44586"></xml-att-quote><xml-literal-start pos="44587"></xml-literal-start><xml-att-quote pos="44607"></xml-att-quote><x-tag-end pos="44608" length="1"></x-tag-end><xml-open-tag pos="44616"></xml-open-tag><xml-name-end pos="44621"></xml-name-end><x-equals pos="44628"></x-equals><xml-att-quote pos="44629"></xml-att-quote><xml-literal-start pos="44630"></xml-literal-start><xml-att-quote pos="44633"></xml-att-quote><xml-literal-end pos="44634"></xml-literal-end><x-equals pos="44641"></x-equals><xml-att-quote pos="44642"></xml-att-quote><xml-literal-start pos="44643"></xml-literal-start><xml-att-quote pos="44653"></xml-att-quote><x-tag-end pos="44654" length="1"></x-tag-end><xml-open-tag pos="44669"></xml-open-tag><xml-name-end pos="44676"></xml-name-end><x-equals pos="44681"></x-equals><xml-att-quote pos="44682"></xml-att-quote><xml-literal-start pos="44683"></xml-literal-start><xml-att-quote pos="44687"></xml-att-quote><xml-literal-end pos="44688"></xml-literal-end><x-equals pos="44697"></x-equals><xml-att-quote pos="44698"></xml-att-quote><xml-literal-start pos="44699"></xml-literal-start><xml-att-quote pos="44718"></xml-att-quote><x-tag-end pos="44719" length="1"></x-tag-end><xml-open-tag pos="44734"></xml-open-tag><xml-name-end pos="44741"></xml-name-end><x-equals pos="44747"></x-equals><xml-att-quote pos="44748"></xml-att-quote><xml-literal-start pos="44749"></xml-literal-start><xml-att-quote pos="44752"></xml-att-quote><x-tag-end pos="44753" length="1"></x-tag-end><nested-query pos="44772"></nested-query><start-xquery pos="44773"></start-xquery><literal type="34" start="44819" end="44823"></literal><literal type="34" start="44826" end="44827"></literal><literal type="34" start="44856" end="44865"></literal><unnested-xquery pos="44875"></unnested-xquery><resume-x-literal-txt pos="44876"></resume-x-literal-txt><xml-close-tag pos="44925"></xml-close-tag><x-tag-end pos="44933" length="1"></x-tag-end><xml-open-tag pos="44948"></xml-open-tag><xml-name-end pos="44955"></xml-name-end><x-equals pos="44961"></x-equals><xml-att-quote pos="44962"></xml-att-quote><xml-literal-start pos="44963"></xml-literal-start><xml-att-quote pos="44967"></xml-att-quote><x-tag-end pos="44968" length="1"></x-tag-end><nested-query pos="44987"></nested-query><start-xquery pos="44988"></start-xquery><literal type="34" start="45008" end="45013"></literal><literal type="34" start="45042" end="45051"></literal><unnested-xquery pos="45061"></unnested-xquery><resume-x-literal-txt pos="45062"></resume-x-literal-txt><xml-close-tag pos="45106"></xml-close-tag><x-tag-end pos="45114" length="1"></x-tag-end><xml-close-tag pos="45129"></xml-close-tag><x-tag-end pos="45137" length="1"></x-tag-end><nested-query pos="45146"></nested-query><start-xquery pos="45147"></start-xquery><literal type="34" start="45192" end="45197"></literal><xml-open-tag pos="45227"></xml-open-tag><xml-name-end pos="45233"></xml-name-end><x-equals pos="45238"></x-equals><xml-att-quote pos="45239"></xml-att-quote><xml-literal-start pos="45240"></xml-literal-start><xml-att-quote pos="45246"></xml-att-quote><xml-literal-end pos="45247"></xml-literal-end><x-equals pos="45252"></x-equals><xml-att-quote pos="45253"></xml-att-quote><nested-query pos="45254"></nested-query><start-xquery pos="45255"></start-xquery><unnested-xquery pos="45276"></unnested-xquery><xml-att-quote pos="45277"></xml-att-quote><xml-literal-end pos="45278"></xml-literal-end><x-equals pos="45284"></x-equals><xml-att-quote pos="45285"></xml-att-quote><xml-literal-start pos="45286"></xml-literal-start><xml-att-quote pos="45290"></xml-att-quote><xml-literal-end pos="45291"></xml-literal-end><x-equals pos="45297"></x-equals><xml-att-quote pos="45298"></xml-att-quote><nested-query pos="45299"></nested-query><start-xquery pos="45300"></start-xquery><unnested-xquery pos="45306"></unnested-xquery><xml-att-quote pos="45307"></xml-att-quote><xml-literal-end pos="45308"></xml-literal-end><x-tag-end pos="45309" length="2" level="3"></x-tag-end><start-xquery pos="45311"></start-xquery><unnested-xquery pos="45311"></unnested-xquery><resume-x-literal-txt pos="45312"></resume-x-literal-txt><xml-close-tag pos="45319"></xml-close-tag><x-tag-end pos="45325" length="1"></x-tag-end><xml-close-tag pos="45332"></xml-close-tag><x-tag-end pos="45337" length="1"></x-tag-end><start-xquery pos="45338"></start-xquery><comment start="45358" end="45622"></comment><literal type="34" start="45745" end="45747"></literal><xml-open-tag pos="45772"></xml-open-tag><xml-name-end pos="45777"></xml-name-end><x-equals pos="45784"></x-equals><xml-att-quote pos="45785"></xml-att-quote><xml-literal-start pos="45786"></xml-literal-start><xml-att-quote pos="45789"></xml-att-quote><xml-literal-end pos="45790"></xml-literal-end><x-equals pos="45797"></x-equals><xml-att-quote pos="45798"></xml-att-quote><xml-literal-start pos="45799"></xml-literal-start><xml-att-quote pos="45809"></xml-att-quote><x-tag-end pos="45810" length="1"></x-tag-end><xml-open-tag pos="45819"></xml-open-tag><xml-name-end pos="45825"></xml-name-end><x-equals pos="45830"></x-equals><xml-att-quote pos="45831"></xml-att-quote><xml-literal-start pos="45832"></xml-literal-start><xml-att-quote pos="45836"></xml-att-quote><xml-literal-end pos="45837"></xml-literal-end><x-equals pos="45842"></x-equals><xml-att-quote pos="45843"></xml-att-quote><xml-literal-start pos="45844"></xml-literal-start><xml-att-quote pos="45845"></xml-att-quote><xml-literal-end pos="45846"></xml-literal-end><x-equals pos="45852"></x-equals><xml-att-quote pos="45853"></xml-att-quote><xml-literal-start pos="45854"></xml-literal-start><xml-att-quote pos="45864"></xml-att-quote><xml-literal-end pos="45865"></xml-literal-end><x-equals pos="45868"></x-equals><xml-att-quote pos="45869"></xml-att-quote><xml-literal-start pos="45870"></xml-literal-start><xml-att-quote pos="45883"></xml-att-quote><xml-literal-end pos="45884"></xml-literal-end><x-equals pos="45890"></x-equals><xml-att-quote pos="45891"></xml-att-quote><xml-literal-start pos="45892"></xml-literal-start><xml-att-quote pos="45899"></xml-att-quote><xml-literal-end pos="45900"></xml-literal-end><x-equals pos="45906"></x-equals><xml-att-quote pos="45907"></xml-att-quote><nested-query pos="45908"></nested-query><start-xquery pos="45909"></start-xquery><unnested-xquery pos="45968"></unnested-xquery><xml-att-quote pos="45969"></xml-att-quote><xml-literal-end pos="45970"></xml-literal-end><x-tag-end pos="45971" length="2" level="2"></x-tag-end><nested-query pos="45973"></nested-query><start-xquery pos="45974"></start-xquery><literal type="34" start="45974" end="45976"></literal><unnested-xquery pos="45977"></unnested-xquery><resume-x-literal-txt pos="45978"></resume-x-literal-txt><nested-query pos="45986"></nested-query><start-xquery pos="45987"></start-xquery><xml-open-tag pos="46027"></xml-open-tag><xml-name-end pos="46034"></xml-name-end><x-equals pos="46039"></x-equals><xml-att-quote pos="46040"></xml-att-quote><xml-literal-start pos="46041"></xml-literal-start><xml-att-quote pos="46046"></xml-att-quote><xml-literal-end pos="46047"></xml-literal-end><x-equals pos="46053"></x-equals><xml-att-quote pos="46054"></xml-att-quote><xml-literal-start pos="46055"></xml-literal-start><xml-att-quote pos="46089"></xml-att-quote><x-tag-end pos="46090" length="1"></x-tag-end><nested-query pos="46107"></nested-query><start-xquery pos="46108"></start-xquery><literal type="34" start="46211" end="46214"></literal><literal type="34" start="46346" end="46347"></literal><literal type="34" start="46417" end="46426"></literal><unnested-xquery pos="46485"></unnested-xquery><resume-x-literal-txt pos="46486"></resume-x-literal-txt><xml-close-tag pos="46495"></xml-close-tag><x-tag-end pos="46503" length="1"></x-tag-end><start-xquery pos="46504"></start-xquery><unnested-xquery pos="46521"></unnested-xquery><resume-x-literal-txt pos="46522"></resume-x-literal-txt><xml-open-tag pos="46530"></xml-open-tag><xml-name-end pos="46536"></xml-name-end><x-equals pos="46541"></x-equals><xml-att-quote pos="46542"></xml-att-quote><xml-literal-start pos="46543"></xml-literal-start><xml-att-quote pos="46549"></xml-att-quote><xml-literal-end pos="46550"></xml-literal-end><x-equals pos="46556"></x-equals><xml-att-quote pos="46557"></xml-att-quote><xml-literal-start pos="46558"></xml-literal-start><xml-att-quote pos="46564"></xml-att-quote><xml-literal-end pos="46565"></xml-literal-end><x-equals pos="46571"></x-equals><xml-att-quote pos="46572"></xml-att-quote><xml-literal-start pos="46573"></xml-literal-start><xml-att-quote pos="46579"></xml-att-quote><xml-literal-end pos="46580"></xml-literal-end><x-tag-end pos="46581" length="2" level="2"></x-tag-end><nested-query pos="46591"></nested-query><start-xquery pos="46592"></start-xquery><literal type="34" start="46643" end="46645"></literal><literal type="34" start="46648" end="46654"></literal><xml-open-tag pos="46679"></xml-open-tag><xml-name-end pos="46685"></xml-name-end><x-equals pos="46690"></x-equals><xml-att-quote pos="46691"></xml-att-quote><xml-literal-start pos="46692"></xml-literal-start><xml-att-quote pos="46698"></xml-att-quote><xml-literal-end pos="46699"></xml-literal-end><x-equals pos="46704"></x-equals><xml-att-quote pos="46705"></xml-att-quote><nested-query pos="46706"></nested-query><start-xquery pos="46707"></start-xquery><unnested-xquery pos="46728"></unnested-xquery><xml-att-quote pos="46729"></xml-att-quote><xml-literal-end pos="46730"></xml-literal-end><x-equals pos="46736"></x-equals><xml-att-quote pos="46737"></xml-att-quote><xml-literal-start pos="46738"></xml-literal-start><xml-att-quote pos="46742"></xml-att-quote><xml-literal-end pos="46743"></xml-literal-end><x-equals pos="46749"></x-equals><xml-att-quote pos="46750"></xml-att-quote><nested-query pos="46751"></nested-query><start-xquery pos="46752"></start-xquery><unnested-xquery pos="46758"></unnested-xquery><xml-att-quote pos="46759"></xml-att-quote><xml-literal-end pos="46760"></xml-literal-end><x-tag-end pos="46761" length="2" level="2"></x-tag-end><start-xquery pos="46763"></start-xquery><unnested-xquery pos="46763"></unnested-xquery><resume-x-literal-txt pos="46764"></resume-x-literal-txt><xml-close-tag pos="46771"></xml-close-tag><x-tag-end pos="46777" length="1"></x-tag-end><start-xquery pos="46778"></start-xquery><comment start="46785" end="47135"></comment><xml-open-tag pos="47372"></xml-open-tag><xml-name-end pos="47376"></xml-name-end><x-equals pos="47382"></x-equals><xml-att-quote pos="47383"></xml-att-quote><xml-literal-start pos="47384"></xml-literal-start><xml-att-quote pos="47389"></xml-att-quote><x-tag-end pos="47390" length="1"></x-tag-end><nested-query pos="47405"></nested-query><start-xquery pos="47406"></start-xquery><xml-open-tag pos="47439"></xml-open-tag><xml-name-end pos="47441"></xml-name-end><x-equals pos="47447"></x-equals><xml-att-quote pos="47448"></xml-att-quote><xml-literal-start pos="47449"></xml-literal-start><xml-att-quote pos="47457"></xml-att-quote><xml-literal-end pos="47458"></xml-literal-end><x-equals pos="47464"></x-equals><xml-att-quote pos="47465"></xml-att-quote><xml-literal-start pos="47466"></xml-literal-start><xml-att-quote pos="47485"></xml-att-quote><xml-literal-end pos="47486"></xml-literal-end><x-equals pos="47491"></x-equals><xml-att-quote pos="47492"></xml-att-quote><xml-literal-start pos="47493"></xml-literal-start><nested-query pos="47504"></nested-query><start-xquery pos="47505"></start-xquery><literal type="34" start="47537" end="47539"></literal><unnested-xquery pos="47542"></unnested-xquery><resume-x-literal pos="47543"></resume-x-literal><nested-query pos="47546"></nested-query><start-xquery pos="47547"></start-xquery><unnested-xquery pos="47556"></unnested-xquery><xml-att-quote pos="47557"></xml-att-quote><x-tag-end pos="47558" length="1"></x-tag-end><xml-close-tag pos="47580"></xml-close-tag><x-tag-end pos="47583" length="1"></x-tag-end><start-xquery pos="47584"></start-xquery><unnested-xquery pos="47619"></unnested-xquery><resume-x-literal-txt pos="47620"></resume-x-literal-txt><nested-query pos="47634"></nested-query><start-xquery pos="47635"></start-xquery><xml-open-tag pos="47695"></xml-open-tag><xml-name-end pos="47697"></xml-name-end><x-equals pos="47703"></x-equals><xml-att-quote pos="47704"></xml-att-quote><xml-literal-start pos="47705"></xml-literal-start><xml-att-quote pos="47713"></xml-att-quote><xml-literal-end pos="47714"></xml-literal-end><x-equals pos="47720"></x-equals><xml-att-quote pos="47721"></xml-att-quote><nested-query pos="47722"></nested-query><start-xquery pos="47723"></start-xquery><unnested-xquery pos="47743"></unnested-xquery><xml-att-quote pos="47744"></xml-att-quote><xml-literal-end pos="47745"></xml-literal-end><x-equals pos="47750"></x-equals><xml-att-quote pos="47751"></xml-att-quote><xml-literal-start pos="47752"></xml-literal-start><nested-query pos="47763"></nested-query><start-xquery pos="47764"></start-xquery><literal type="34" start="47796" end="47798"></literal><unnested-xquery pos="47801"></unnested-xquery><resume-x-literal pos="47802"></resume-x-literal><nested-query pos="47805"></nested-query><start-xquery pos="47806"></start-xquery><unnested-xquery pos="47815"></unnested-xquery><xml-att-quote pos="47816"></xml-att-quote><x-tag-end pos="47817" length="1"></x-tag-end><nested-query pos="47818"></nested-query><start-xquery pos="47819"></start-xquery><unnested-xquery pos="47839"></unnested-xquery><xml-close-tag pos="47840"></xml-close-tag><x-tag-end pos="47843" length="1"></x-tag-end><start-xquery pos="47844"></start-xquery><unnested-xquery pos="47879"></unnested-xquery><resume-x-literal-txt pos="47880"></resume-x-literal-txt><nested-query pos="47894"></nested-query><start-xquery pos="47895"></start-xquery><xml-open-tag pos="47981"></xml-open-tag><xml-name-end pos="47983"></xml-name-end><x-equals pos="47989"></x-equals><xml-att-quote pos="47990"></xml-att-quote><xml-literal-start pos="47991"></xml-literal-start><xml-att-quote pos="47999"></xml-att-quote><xml-literal-end pos="48000"></xml-literal-end><x-equals pos="48006"></x-equals><xml-att-quote pos="48007"></xml-att-quote><nested-query pos="48008"></nested-query><start-xquery pos="48009"></start-xquery><unnested-xquery pos="48029"></unnested-xquery><xml-att-quote pos="48030"></xml-att-quote><xml-literal-end pos="48031"></xml-literal-end><x-equals pos="48036"></x-equals><xml-att-quote pos="48037"></xml-att-quote><xml-literal-start pos="48038"></xml-literal-start><nested-query pos="48049"></nested-query><start-xquery pos="48050"></start-xquery><literal type="34" start="48082" end="48084"></literal><unnested-xquery pos="48087"></unnested-xquery><resume-x-literal pos="48088"></resume-x-literal><nested-query pos="48091"></nested-query><start-xquery pos="48092"></start-xquery><unnested-xquery pos="48101"></unnested-xquery><xml-att-quote pos="48102"></xml-att-quote><x-tag-end pos="48103" length="1"></x-tag-end><nested-query pos="48104"></nested-query><start-xquery pos="48105"></start-xquery><unnested-xquery pos="48125"></unnested-xquery><xml-close-tag pos="48126"></xml-close-tag><x-tag-end pos="48129" length="1"></x-tag-end><start-xquery pos="48130"></start-xquery><unnested-xquery pos="48165"></unnested-xquery><resume-x-literal-txt pos="48166"></resume-x-literal-txt><nested-query pos="48180"></nested-query><start-xquery pos="48181"></start-xquery><xml-open-tag pos="48267"></xml-open-tag><xml-name-end pos="48269"></xml-name-end><x-equals pos="48275"></x-equals><xml-att-quote pos="48276"></xml-att-quote><xml-literal-start pos="48277"></xml-literal-start><xml-att-quote pos="48285"></xml-att-quote><xml-literal-end pos="48286"></xml-literal-end><x-equals pos="48292"></x-equals><xml-att-quote pos="48293"></xml-att-quote><nested-query pos="48294"></nested-query><start-xquery pos="48295"></start-xquery><unnested-xquery pos="48315"></unnested-xquery><xml-att-quote pos="48316"></xml-att-quote><xml-literal-end pos="48317"></xml-literal-end><x-equals pos="48322"></x-equals><xml-att-quote pos="48323"></xml-att-quote><xml-literal-start pos="48324"></xml-literal-start><nested-query pos="48335"></nested-query><start-xquery pos="48336"></start-xquery><literal type="34" start="48368" end="48370"></literal><unnested-xquery pos="48373"></unnested-xquery><resume-x-literal pos="48374"></resume-x-literal><nested-query pos="48377"></nested-query><start-xquery pos="48378"></start-xquery><unnested-xquery pos="48387"></unnested-xquery><xml-att-quote pos="48388"></xml-att-quote><x-tag-end pos="48389" length="1"></x-tag-end><nested-query pos="48390"></nested-query><start-xquery pos="48391"></start-xquery><unnested-xquery pos="48411"></unnested-xquery><xml-close-tag pos="48412"></xml-close-tag><x-tag-end pos="48415" length="1"></x-tag-end><start-xquery pos="48416"></start-xquery><unnested-xquery pos="48451"></unnested-xquery><resume-x-literal-txt pos="48452"></resume-x-literal-txt><nested-query pos="48466"></nested-query><start-xquery pos="48467"></start-xquery><xml-open-tag pos="48522"></xml-open-tag><xml-name-end pos="48524"></xml-name-end><x-equals pos="48530"></x-equals><xml-att-quote pos="48531"></xml-att-quote><xml-literal-start pos="48532"></xml-literal-start><xml-att-quote pos="48540"></xml-att-quote><xml-literal-end pos="48541"></xml-literal-end><x-equals pos="48547"></x-equals><xml-att-quote pos="48548"></xml-att-quote><nested-query pos="48549"></nested-query><start-xquery pos="48550"></start-xquery><unnested-xquery pos="48570"></unnested-xquery><xml-att-quote pos="48571"></xml-att-quote><xml-literal-end pos="48572"></xml-literal-end><x-equals pos="48577"></x-equals><xml-att-quote pos="48578"></xml-att-quote><xml-literal-start pos="48579"></xml-literal-start><nested-query pos="48590"></nested-query><start-xquery pos="48591"></start-xquery><literal type="34" start="48623" end="48625"></literal><unnested-xquery pos="48628"></unnested-xquery><resume-x-literal pos="48629"></resume-x-literal><nested-query pos="48632"></nested-query><start-xquery pos="48633"></start-xquery><unnested-xquery pos="48642"></unnested-xquery><xml-att-quote pos="48643"></xml-att-quote><x-tag-end pos="48644" length="1"></x-tag-end><nested-query pos="48645"></nested-query><start-xquery pos="48646"></start-xquery><unnested-xquery pos="48666"></unnested-xquery><xml-close-tag pos="48667"></xml-close-tag><x-tag-end pos="48670" length="1"></x-tag-end><start-xquery pos="48671"></start-xquery><unnested-xquery pos="48706"></unnested-xquery><resume-x-literal-txt pos="48707"></resume-x-literal-txt><nested-query pos="48721"></nested-query><start-xquery pos="48722"></start-xquery><xml-open-tag pos="48761"></xml-open-tag><xml-name-end pos="48763"></xml-name-end><x-equals pos="48769"></x-equals><xml-att-quote pos="48770"></xml-att-quote><xml-literal-start pos="48771"></xml-literal-start><xml-att-quote pos="48779"></xml-att-quote><xml-literal-end pos="48780"></xml-literal-end><x-equals pos="48786"></x-equals><xml-att-quote pos="48787"></xml-att-quote><nested-query pos="48788"></nested-query><start-xquery pos="48789"></start-xquery><unnested-xquery pos="48805"></unnested-xquery><xml-att-quote pos="48806"></xml-att-quote><xml-literal-end pos="48807"></xml-literal-end><x-equals pos="48812"></x-equals><xml-att-quote pos="48813"></xml-att-quote><xml-literal-start pos="48814"></xml-literal-start><nested-query pos="48825"></nested-query><start-xquery pos="48826"></start-xquery><literal type="34" start="48858" end="48860"></literal><unnested-xquery pos="48863"></unnested-xquery><resume-x-literal pos="48864"></resume-x-literal><nested-query pos="48867"></nested-query><start-xquery pos="48868"></start-xquery><unnested-xquery pos="48873"></unnested-xquery><xml-att-quote pos="48874"></xml-att-quote><x-tag-end pos="48875" length="1"></x-tag-end><xml-open-tag pos="48876"></xml-open-tag><x-tag-end pos="48883" length="1"></x-tag-end><nested-query pos="48884"></nested-query><start-xquery pos="48885"></start-xquery><unnested-xquery pos="48901"></unnested-xquery><xml-close-tag pos="48902"></xml-close-tag><x-tag-end pos="48910" length="1"></x-tag-end><xml-close-tag pos="48911"></xml-close-tag><x-tag-end pos="48914" length="1"></x-tag-end><start-xquery pos="48915"></start-xquery><unnested-xquery pos="48950"></unnested-xquery><resume-x-literal-txt pos="48951"></resume-x-literal-txt><nested-query pos="48965"></nested-query><start-xquery pos="48966"></start-xquery><xml-open-tag pos="49009"></xml-open-tag><xml-name-end pos="49011"></xml-name-end><x-equals pos="49017"></x-equals><xml-att-quote pos="49018"></xml-att-quote><xml-literal-start pos="49019"></xml-literal-start><xml-att-quote pos="49027"></xml-att-quote><xml-literal-end pos="49028"></xml-literal-end><x-equals pos="49034"></x-equals><xml-att-quote pos="49035"></xml-att-quote><nested-query pos="49036"></nested-query><start-xquery pos="49037"></start-xquery><unnested-xquery pos="49057"></unnested-xquery><xml-att-quote pos="49058"></xml-att-quote><xml-literal-end pos="49059"></xml-literal-end><x-equals pos="49064"></x-equals><xml-att-quote pos="49065"></xml-att-quote><xml-literal-start pos="49066"></xml-literal-start><nested-query pos="49077"></nested-query><start-xquery pos="49078"></start-xquery><literal type="34" start="49110" end="49112"></literal><unnested-xquery pos="49115"></unnested-xquery><resume-x-literal pos="49116"></resume-x-literal><nested-query pos="49119"></nested-query><start-xquery pos="49120"></start-xquery><unnested-xquery pos="49129"></unnested-xquery><xml-att-quote pos="49130"></xml-att-quote><x-tag-end pos="49131" length="1"></x-tag-end><nested-query pos="49132"></nested-query><start-xquery pos="49133"></start-xquery><unnested-xquery pos="49153"></unnested-xquery><xml-close-tag pos="49154"></xml-close-tag><x-tag-end pos="49157" length="1"></x-tag-end><start-xquery pos="49158"></start-xquery><unnested-xquery pos="49193"></unnested-xquery><resume-x-literal-txt pos="49194"></resume-x-literal-txt><nested-query pos="49208"></nested-query><start-xquery pos="49209"></start-xquery><xml-open-tag pos="49252"></xml-open-tag><xml-name-end pos="49254"></xml-name-end><x-equals pos="49260"></x-equals><xml-att-quote pos="49261"></xml-att-quote><xml-literal-start pos="49262"></xml-literal-start><xml-att-quote pos="49271"></xml-att-quote><xml-literal-end pos="49272"></xml-literal-end><x-equals pos="49278"></x-equals><xml-att-quote pos="49279"></xml-att-quote><nested-query pos="49280"></nested-query><start-xquery pos="49281"></start-xquery><unnested-xquery pos="49301"></unnested-xquery><xml-att-quote pos="49302"></xml-att-quote><xml-literal-end pos="49303"></xml-literal-end><x-equals pos="49308"></x-equals><xml-att-quote pos="49309"></xml-att-quote><xml-literal-start pos="49310"></xml-literal-start><nested-query pos="49321"></nested-query><start-xquery pos="49322"></start-xquery><literal type="34" start="49354" end="49356"></literal><unnested-xquery pos="49359"></unnested-xquery><resume-x-literal pos="49360"></resume-x-literal><nested-query pos="49363"></nested-query><start-xquery pos="49364"></start-xquery><unnested-xquery pos="49373"></unnested-xquery><xml-att-quote pos="49374"></xml-att-quote><x-tag-end pos="49375" length="1"></x-tag-end><nested-query pos="49376"></nested-query><start-xquery pos="49377"></start-xquery><unnested-xquery pos="49397"></unnested-xquery><xml-close-tag pos="49398"></xml-close-tag><x-tag-end pos="49401" length="1"></x-tag-end><start-xquery pos="49402"></start-xquery><unnested-xquery pos="49437"></unnested-xquery><resume-x-literal-txt pos="49438"></resume-x-literal-txt><nested-query pos="49452"></nested-query><start-xquery pos="49453"></start-xquery><xml-open-tag pos="49496"></xml-open-tag><xml-name-end pos="49498"></xml-name-end><x-equals pos="49504"></x-equals><xml-att-quote pos="49505"></xml-att-quote><xml-literal-start pos="49506"></xml-literal-start><xml-att-quote pos="49515"></xml-att-quote><xml-literal-end pos="49516"></xml-literal-end><x-equals pos="49522"></x-equals><xml-att-quote pos="49523"></xml-att-quote><nested-query pos="49524"></nested-query><start-xquery pos="49525"></start-xquery><unnested-xquery pos="49545"></unnested-xquery><xml-att-quote pos="49546"></xml-att-quote><xml-literal-end pos="49547"></xml-literal-end><x-equals pos="49552"></x-equals><xml-att-quote pos="49553"></xml-att-quote><xml-literal-start pos="49554"></xml-literal-start><nested-query pos="49565"></nested-query><start-xquery pos="49566"></start-xquery><literal type="34" start="49598" end="49600"></literal><unnested-xquery pos="49603"></unnested-xquery><resume-x-literal pos="49604"></resume-x-literal><nested-query pos="49607"></nested-query><start-xquery pos="49608"></start-xquery><unnested-xquery pos="49617"></unnested-xquery><xml-att-quote pos="49618"></xml-att-quote><x-tag-end pos="49619" length="1"></x-tag-end><nested-query pos="49620"></nested-query><start-xquery pos="49621"></start-xquery><unnested-xquery pos="49641"></unnested-xquery><xml-close-tag pos="49642"></xml-close-tag><x-tag-end pos="49645" length="1"></x-tag-end><start-xquery pos="49646"></start-xquery><unnested-xquery pos="49681"></unnested-xquery><resume-x-literal-txt pos="49682"></resume-x-literal-txt><nested-query pos="49696"></nested-query><start-xquery pos="49697"></start-xquery><xml-open-tag pos="49740"></xml-open-tag><xml-name-end pos="49742"></xml-name-end><x-equals pos="49748"></x-equals><xml-att-quote pos="49749"></xml-att-quote><xml-literal-start pos="49750"></xml-literal-start><xml-att-quote pos="49759"></xml-att-quote><xml-literal-end pos="49760"></xml-literal-end><x-equals pos="49766"></x-equals><xml-att-quote pos="49767"></xml-att-quote><nested-query pos="49768"></nested-query><start-xquery pos="49769"></start-xquery><unnested-xquery pos="49789"></unnested-xquery><xml-att-quote pos="49790"></xml-att-quote><xml-literal-end pos="49791"></xml-literal-end><x-equals pos="49796"></x-equals><xml-att-quote pos="49797"></xml-att-quote><xml-literal-start pos="49798"></xml-literal-start><nested-query pos="49809"></nested-query><start-xquery pos="49810"></start-xquery><literal type="34" start="49842" end="49844"></literal><unnested-xquery pos="49847"></unnested-xquery><resume-x-literal pos="49848"></resume-x-literal><nested-query pos="49851"></nested-query><start-xquery pos="49852"></start-xquery><unnested-xquery pos="49861"></unnested-xquery><xml-att-quote pos="49862"></xml-att-quote><x-tag-end pos="49863" length="1"></x-tag-end><nested-query pos="49864"></nested-query><start-xquery pos="49865"></start-xquery><unnested-xquery pos="49885"></unnested-xquery><xml-close-tag pos="49886"></xml-close-tag><x-tag-end pos="49889" length="1"></x-tag-end><start-xquery pos="49890"></start-xquery><unnested-xquery pos="49925"></unnested-xquery><resume-x-literal-txt pos="49926"></resume-x-literal-txt><nested-query pos="49940"></nested-query><start-xquery pos="49941"></start-xquery><xml-open-tag pos="49984"></xml-open-tag><xml-name-end pos="49986"></xml-name-end><x-equals pos="49992"></x-equals><xml-att-quote pos="49993"></xml-att-quote><xml-literal-start pos="49994"></xml-literal-start><xml-att-quote pos="50003"></xml-att-quote><xml-literal-end pos="50004"></xml-literal-end><x-equals pos="50010"></x-equals><xml-att-quote pos="50011"></xml-att-quote><nested-query pos="50012"></nested-query><start-xquery pos="50013"></start-xquery><unnested-xquery pos="50033"></unnested-xquery><xml-att-quote pos="50034"></xml-att-quote><xml-literal-end pos="50035"></xml-literal-end><x-equals pos="50040"></x-equals><xml-att-quote pos="50041"></xml-att-quote><xml-literal-start pos="50042"></xml-literal-start><nested-query pos="50053"></nested-query><start-xquery pos="50054"></start-xquery><literal type="34" start="50086" end="50088"></literal><unnested-xquery pos="50091"></unnested-xquery><resume-x-literal pos="50092"></resume-x-literal><nested-query pos="50095"></nested-query><start-xquery pos="50096"></start-xquery><unnested-xquery pos="50105"></unnested-xquery><xml-att-quote pos="50106"></xml-att-quote><x-tag-end pos="50107" length="1"></x-tag-end><nested-query pos="50108"></nested-query><start-xquery pos="50109"></start-xquery><unnested-xquery pos="50129"></unnested-xquery><xml-close-tag pos="50130"></xml-close-tag><x-tag-end pos="50133" length="1"></x-tag-end><start-xquery pos="50134"></start-xquery><unnested-xquery pos="50169"></unnested-xquery><resume-x-literal-txt pos="50170"></resume-x-literal-txt><nested-query pos="50184"></nested-query><start-xquery pos="50185"></start-xquery><xml-open-tag pos="50228"></xml-open-tag><xml-name-end pos="50230"></xml-name-end><x-equals pos="50236"></x-equals><xml-att-quote pos="50237"></xml-att-quote><xml-literal-start pos="50238"></xml-literal-start><xml-att-quote pos="50247"></xml-att-quote><xml-literal-end pos="50248"></xml-literal-end><x-equals pos="50254"></x-equals><xml-att-quote pos="50255"></xml-att-quote><nested-query pos="50256"></nested-query><start-xquery pos="50257"></start-xquery><unnested-xquery pos="50277"></unnested-xquery><xml-att-quote pos="50278"></xml-att-quote><xml-literal-end pos="50279"></xml-literal-end><x-equals pos="50284"></x-equals><xml-att-quote pos="50285"></xml-att-quote><xml-literal-start pos="50286"></xml-literal-start><nested-query pos="50297"></nested-query><start-xquery pos="50298"></start-xquery><literal type="34" start="50330" end="50332"></literal><unnested-xquery pos="50335"></unnested-xquery><resume-x-literal pos="50336"></resume-x-literal><nested-query pos="50339"></nested-query><start-xquery pos="50340"></start-xquery><unnested-xquery pos="50349"></unnested-xquery><xml-att-quote pos="50350"></xml-att-quote><x-tag-end pos="50351" length="1"></x-tag-end><nested-query pos="50352"></nested-query><start-xquery pos="50353"></start-xquery><unnested-xquery pos="50373"></unnested-xquery><xml-close-tag pos="50374"></xml-close-tag><x-tag-end pos="50377" length="1"></x-tag-end><start-xquery pos="50378"></start-xquery><unnested-xquery pos="50413"></unnested-xquery><resume-x-literal-txt pos="50414"></resume-x-literal-txt><nested-query pos="50428"></nested-query><start-xquery pos="50429"></start-xquery><xml-open-tag pos="50472"></xml-open-tag><xml-name-end pos="50474"></xml-name-end><x-equals pos="50480"></x-equals><xml-att-quote pos="50481"></xml-att-quote><xml-literal-start pos="50482"></xml-literal-start><xml-att-quote pos="50491"></xml-att-quote><xml-literal-end pos="50492"></xml-literal-end><x-equals pos="50498"></x-equals><xml-att-quote pos="50499"></xml-att-quote><nested-query pos="50500"></nested-query><start-xquery pos="50501"></start-xquery><unnested-xquery pos="50521"></unnested-xquery><xml-att-quote pos="50522"></xml-att-quote><xml-literal-end pos="50523"></xml-literal-end><x-equals pos="50528"></x-equals><xml-att-quote pos="50529"></xml-att-quote><xml-literal-start pos="50530"></xml-literal-start><nested-query pos="50541"></nested-query><start-xquery pos="50542"></start-xquery><literal type="34" start="50574" end="50576"></literal><unnested-xquery pos="50579"></unnested-xquery><resume-x-literal pos="50580"></resume-x-literal><nested-query pos="50583"></nested-query><start-xquery pos="50584"></start-xquery><unnested-xquery pos="50593"></unnested-xquery><xml-att-quote pos="50594"></xml-att-quote><x-tag-end pos="50595" length="1"></x-tag-end><nested-query pos="50596"></nested-query><start-xquery pos="50597"></start-xquery><unnested-xquery pos="50617"></unnested-xquery><xml-close-tag pos="50618"></xml-close-tag><x-tag-end pos="50621" length="1"></x-tag-end><start-xquery pos="50622"></start-xquery><unnested-xquery pos="50657"></unnested-xquery><resume-x-literal-txt pos="50658"></resume-x-literal-txt><nested-query pos="50672"></nested-query><start-xquery pos="50673"></start-xquery><xml-open-tag pos="50716"></xml-open-tag><xml-name-end pos="50718"></xml-name-end><x-equals pos="50724"></x-equals><xml-att-quote pos="50725"></xml-att-quote><xml-literal-start pos="50726"></xml-literal-start><xml-att-quote pos="50735"></xml-att-quote><xml-literal-end pos="50736"></xml-literal-end><x-equals pos="50742"></x-equals><xml-att-quote pos="50743"></xml-att-quote><nested-query pos="50744"></nested-query><start-xquery pos="50745"></start-xquery><unnested-xquery pos="50765"></unnested-xquery><xml-att-quote pos="50766"></xml-att-quote><xml-literal-end pos="50767"></xml-literal-end><x-equals pos="50772"></x-equals><xml-att-quote pos="50773"></xml-att-quote><xml-literal-start pos="50774"></xml-literal-start><nested-query pos="50785"></nested-query><start-xquery pos="50786"></start-xquery><literal type="34" start="50818" end="50820"></literal><unnested-xquery pos="50823"></unnested-xquery><resume-x-literal pos="50824"></resume-x-literal><nested-query pos="50827"></nested-query><start-xquery pos="50828"></start-xquery><unnested-xquery pos="50837"></unnested-xquery><xml-att-quote pos="50838"></xml-att-quote><x-tag-end pos="50839" length="1"></x-tag-end><nested-query pos="50840"></nested-query><start-xquery pos="50841"></start-xquery><unnested-xquery pos="50861"></unnested-xquery><xml-close-tag pos="50862"></xml-close-tag><x-tag-end pos="50865" length="1"></x-tag-end><start-xquery pos="50866"></start-xquery><unnested-xquery pos="50901"></unnested-xquery><resume-x-literal-txt pos="50902"></resume-x-literal-txt><nested-query pos="50916"></nested-query><start-xquery pos="50917"></start-xquery><xml-open-tag pos="50978"></xml-open-tag><xml-name-end pos="50980"></xml-name-end><x-equals pos="50986"></x-equals><xml-att-quote pos="50987"></xml-att-quote><xml-literal-start pos="50988"></xml-literal-start><xml-att-quote pos="50997"></xml-att-quote><xml-literal-end pos="50998"></xml-literal-end><x-equals pos="51004"></x-equals><xml-att-quote pos="51005"></xml-att-quote><nested-query pos="51006"></nested-query><start-xquery pos="51007"></start-xquery><unnested-xquery pos="51027"></unnested-xquery><xml-att-quote pos="51028"></xml-att-quote><xml-literal-end pos="51029"></xml-literal-end><x-equals pos="51034"></x-equals><xml-att-quote pos="51035"></xml-att-quote><xml-literal-start pos="51036"></xml-literal-start><nested-query pos="51047"></nested-query><start-xquery pos="51048"></start-xquery><literal type="34" start="51080" end="51082"></literal><unnested-xquery pos="51085"></unnested-xquery><resume-x-literal pos="51086"></resume-x-literal><nested-query pos="51089"></nested-query><start-xquery pos="51090"></start-xquery><unnested-xquery pos="51099"></unnested-xquery><xml-att-quote pos="51100"></xml-att-quote><x-tag-end pos="51101" length="1"></x-tag-end><nested-query pos="51102"></nested-query><start-xquery pos="51103"></start-xquery><unnested-xquery pos="51123"></unnested-xquery><xml-close-tag pos="51124"></xml-close-tag><x-tag-end pos="51127" length="1"></x-tag-end><start-xquery pos="51128"></start-xquery><unnested-xquery pos="51163"></unnested-xquery><resume-x-literal-txt pos="51164"></resume-x-literal-txt><nested-query pos="51178"></nested-query><start-xquery pos="51179"></start-xquery><xml-open-tag pos="51222"></xml-open-tag><xml-name-end pos="51224"></xml-name-end><x-equals pos="51230"></x-equals><xml-att-quote pos="51231"></xml-att-quote><xml-literal-start pos="51232"></xml-literal-start><xml-att-quote pos="51240"></xml-att-quote><xml-literal-end pos="51241"></xml-literal-end><x-equals pos="51247"></x-equals><xml-att-quote pos="51248"></xml-att-quote><xml-literal-start pos="51249"></xml-literal-start><xml-att-quote pos="51264"></xml-att-quote><xml-literal-end pos="51265"></xml-literal-end><x-equals pos="51270"></x-equals><xml-att-quote pos="51271"></xml-att-quote><xml-literal-start pos="51272"></xml-literal-start><nested-query pos="51283"></nested-query><start-xquery pos="51284"></start-xquery><literal type="34" start="51316" end="51318"></literal><unnested-xquery pos="51321"></unnested-xquery><resume-x-literal pos="51322"></resume-x-literal><nested-query pos="51325"></nested-query><start-xquery pos="51326"></start-xquery><unnested-xquery pos="51335"></unnested-xquery><xml-att-quote pos="51336"></xml-att-quote><x-tag-end pos="51337" length="1"></x-tag-end><xml-close-tag pos="51355"></xml-close-tag><x-tag-end pos="51358" length="1"></x-tag-end><start-xquery pos="51359"></start-xquery><unnested-xquery pos="51394"></unnested-xquery><resume-x-literal-txt pos="51395"></resume-x-literal-txt><xml-close-tag pos="51405"></xml-close-tag><x-tag-end pos="51410" length="1"></x-tag-end><start-xquery pos="51411"></start-xquery><xml-open-tag pos="51620"></xml-open-tag><xml-name-end pos="51624"></xml-name-end><x-equals pos="51630"></x-equals><xml-att-quote pos="51631"></xml-att-quote><xml-literal-start pos="51632"></xml-literal-start><xml-att-quote pos="51649"></xml-att-quote><x-tag-end pos="51650" length="1"></x-tag-end><xml-open-tag pos="51673"></xml-open-tag><x-tag-end pos="51678" length="1"></x-tag-end><xml-close-tag pos="51682"></xml-close-tag><x-tag-end pos="51688" length="1"></x-tag-end><nested-query pos="51689"></nested-query><start-xquery pos="51690"></start-xquery><literal type="34" start="51690" end="51692"></literal><unnested-xquery pos="51693"></unnested-xquery><resume-x-literal-txt pos="51694"></resume-x-literal-txt><nested-query pos="51708"></nested-query><start-xquery pos="51709"></start-xquery><literal type="34" start="52043" end="52046"></literal><xml-open-tag pos="52074"></xml-open-tag><x-tag-end pos="52079" length="1"></x-tag-end><nested-query pos="52080"></nested-query><start-xquery pos="52081"></start-xquery><unnested-xquery pos="52091"></unnested-xquery><resume-x-literal-txt pos="52092"></resume-x-literal-txt><nested-query pos="52113"></nested-query><start-xquery pos="52114"></start-xquery><literal type="34" start="52239" end="52244"></literal><xml-open-tag pos="52255"></xml-open-tag><x-tag-end pos="52257" length="1"></x-tag-end><nested-query pos="52258"></nested-query><start-xquery pos="52259"></start-xquery><unnested-xquery pos="52288"></unnested-xquery><xml-close-tag pos="52289"></xml-close-tag><x-tag-end pos="52292" length="1"></x-tag-end><start-xquery pos="52293"></start-xquery><literal type="34" start="52295" end="52297"></literal><xml-open-tag pos="52325"></xml-open-tag><xml-name-end pos="52327"></xml-name-end><x-equals pos="52332"></x-equals><xml-att-quote pos="52333"></xml-att-quote><xml-literal-start pos="52334"></xml-literal-start><nested-query pos="52345"></nested-query><start-xquery pos="52346"></start-xquery><literal type="34" start="52432" end="52434"></literal><unnested-xquery pos="52448"></unnested-xquery><xml-att-quote pos="52449"></xml-att-quote><x-tag-end pos="52450" length="1"></x-tag-end><xml-close-tag pos="52454"></xml-close-tag><x-tag-end pos="52457" length="1"></x-tag-end><start-xquery pos="52458"></start-xquery><unnested-xquery pos="52477"></unnested-xquery><resume-x-literal-txt pos="52478"></resume-x-literal-txt><xml-close-tag pos="52496"></xml-close-tag><x-tag-end pos="52502" length="1"></x-tag-end><start-xquery pos="52503"></start-xquery><unnested-xquery pos="52536"></unnested-xquery><resume-x-literal-txt pos="52537"></resume-x-literal-txt><nested-query pos="52551"></nested-query><start-xquery pos="52552"></start-xquery><literal type="34" start="52591" end="52609"></literal><xml-open-tag pos="52612"></xml-open-tag><x-tag-end pos="52614" length="1"></x-tag-end><nested-query pos="52615"></nested-query><start-xquery pos="52616"></start-xquery><literal type="34" start="52656" end="52659"></literal><literal type="34" start="52662" end="52663"></literal><unnested-xquery pos="52665"></unnested-xquery><resume-x-literal-txt pos="52666"></resume-x-literal-txt><nested-query pos="52666"></nested-query><start-xquery pos="52667"></start-xquery><literal type="34" start="52667" end="52673"></literal><unnested-xquery pos="52674"></unnested-xquery><xml-close-tag pos="52675"></xml-close-tag><x-tag-end pos="52678" length="1"></x-tag-end><start-xquery pos="52679"></start-xquery><literal type="34" start="52681" end="52683"></literal><xml-open-tag pos="52699"></xml-open-tag><xml-name-end pos="52701"></xml-name-end><x-equals pos="52706"></x-equals><xml-att-quote pos="52707"></xml-att-quote><xml-literal-start pos="52708"></xml-literal-start><nested-query pos="52719"></nested-query><start-xquery pos="52720"></start-xquery><literal type="34" start="52772" end="52776"></literal><unnested-xquery pos="52799"></unnested-xquery><xml-att-quote pos="52800"></xml-att-quote><x-tag-end pos="52801" length="1"></x-tag-end><xml-close-tag pos="52805"></xml-close-tag><x-tag-end pos="52808" length="1"></x-tag-end><start-xquery pos="52809"></start-xquery><unnested-xquery pos="52831"></unnested-xquery><resume-x-literal-txt pos="52832"></resume-x-literal-txt><xml-close-tag pos="52842"></xml-close-tag><x-tag-end pos="52847" length="1"></x-tag-end><start-xquery pos="52848"></start-xquery><xml-open-tag pos="53264"></xml-open-tag><x-tag-end pos="53282" length="1"></x-tag-end><nested-query pos="53283"></nested-query><start-xquery pos="53284"></start-xquery><literal type="34" start="53301" end="53306"></literal><literal type="34" start="53309" end="53313"></literal><literal type="34" start="53316" end="53320"></literal><literal type="34" start="53526" end="53530"></literal><xml-open-tag pos="53606"></xml-open-tag><xml-name-end pos="53612"></xml-name-end><x-equals pos="53618"></x-equals><xml-att-quote pos="53619"></xml-att-quote><nested-query pos="53620"></nested-query><start-xquery pos="53621"></start-xquery><unnested-xquery pos="53623"></unnested-xquery><xml-att-quote pos="53624"></xml-att-quote><x-tag-end pos="53625" length="1"></x-tag-end><nested-query pos="53626"></nested-query><start-xquery pos="53627"></start-xquery><xml-open-tag pos="53674"></xml-open-tag><xml-name-end pos="53679"></xml-name-end><x-equals pos="53685"></x-equals><xml-att-quote pos="53686"></xml-att-quote><nested-query pos="53687"></nested-query><start-xquery pos="53688"></start-xquery><unnested-xquery pos="53693"></unnested-xquery><xml-att-quote pos="53694"></xml-att-quote><x-tag-end pos="53695" length="2" level="3"></x-tag-end><start-xquery pos="53697"></start-xquery><unnested-xquery pos="53703"></unnested-xquery><xml-close-tag pos="53704"></xml-close-tag><x-tag-end pos="53711" length="1"></x-tag-end><start-xquery pos="53712"></start-xquery><unnested-xquery pos="53718"></unnested-xquery><xml-close-tag pos="53719"></xml-close-tag><x-tag-end pos="53738" length="1"></x-tag-end><start-xquery pos="53739"></start-xquery><literal type="34" start="53868" end="53870"></literal><literal type="34" start="54035" end="54037"></literal><terminate-xquery></terminate-xquery><tokens><span class="comment">(:&#xD;
 : search-ui.xqy&#xD;
 :&#xD;
 : Copyright (c) 2008 Mark Logic Corporation. All rights reserved.&#xD;
 :&#xD;
 : Licensed under the Apache License, Version 2.0 (the "License");&#xD;
 : you may not use this file except in compliance with the License.&#xD;
 : You may obtain a copy of the License at&#xD;
 :&#xD;
 :     http://www.apache.org/licenses/LICENSE-2.0&#xD;
 :&#xD;
 : Unless required by applicable law or agreed to in writing, software&#xD;
 : distributed under the License is distributed on an "AS IS" BASIS,&#xD;
 : WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.&#xD;
 : See the License for the specific language governing permissions and&#xD;
 : limitations under the License.&#xD;
 :&#xD;
 :&#xD;
 : Search UI Library&#xD;
 : This library has over 1,000 lines of code used specifically for&#xD;
 : creating search experiences in an end-to-end XQuery application.&#xD;
 : Primarily used in demos and prototypes to speed development of common&#xD;
 : search-related tasks.&#xD;
 : &#xD;
 : This library is meant to be changed to suit your application's needs.&#xD;
 : Please test your application when using this library.&#xD;
 :&#xD;
 : Coordinator:&#xD;
 : @author &lt;a href="mailto:chris.welch@marklogic.com"&gt;Chris Welch&lt;/a&gt;&#xD;
 :&#xD;
 : @requires MarkLogic Server 3.2&#xD;
 : @requires Versi&#xD;
 : @requires lib-search&#xD;
 : @requires lib-uitools&#xD;
 : All are available for download on developer.marklogic.com&#xD;
 : Format: 3.2-YYYY-MM-DD.[Incremental]&#xD;
 : @version 3.2-2008-06-10&#xD;
 :&#xD;
 :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">module</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/versi/search-ui</span><span class="op">"</span><span class="open"></span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">import</span><span class="whitespace"> </span><span class="qname">module</span><span class="whitespace"> </span><span class="qname">namespace</span><span class="whitespace"> </span><span class="qname">search</span><span class="op">=</span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/lib/lib-search</span><span class="op">"</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">lib-search.xqy</span><span class="op">"</span><span class="whitespace">&#xD;
</span><span class="qname">import</span><span class="whitespace"> </span><span class="qname">module</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/lib/lib-search</span><span class="op">"</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">lib-search-custom.xqy</span><span class="op">"</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">import</span><span class="whitespace"> </span><span class="qname">module</span><span class="whitespace"> </span><span class="qname">namespace</span><span class="whitespace"> </span><span class="qname">uit</span><span class="op">=</span><span class="op">"</span><span class="literal">http://www.marklogic.com/ps/lib/lib-uitools</span><span class="op">"</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">lib-uitools.xqy</span><span class="op">"</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Defines the fields in which a user can search in. Each item should be in the format "[scope-id]|[display-name]" :)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">variable</span><span class="whitespace"> </span><span class="variable">$SEARCH-FIELDS</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">{</span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">|Anywhere</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">title|Headline</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Enable the date range search boxes in the advance search forms :)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">variable</span><span class="whitespace"> </span><span class="variable">$ENABLE-DATE-CRITERIA</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:boolean</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace"> </span><span class="function">fn:false</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: The default rendering mode for value facets :)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">variable</span><span class="whitespace"> </span><span class="variable">$DEFAULT-FACET-MODE</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">add</span><span class="op">"</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace"> </span><span class="comment">(: "mixed | one | add" :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:-- Search UI Functions --:)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Converts &lt;params&gt; into &lt;search:search-criteria&gt;.  &#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return The equivalent search-criteria XML.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">params-to-query</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$start-date</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-year</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-day</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$end-date</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-year</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-day</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
    	</span><span class="function">build-query-element</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="function">xdmp:url-decode</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> &#xD;
    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$start-date</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$end-date</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="op">,</span><span class="whitespace">&#xD;
    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">build-query-element</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$text</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$field</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$collections</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$values</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$start-date</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:date</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$end-date</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:date</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$duration</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:duration</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$sort</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="whitespace">&#xD;
    </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">search-criteria</span><span class="atn"> fast-pagination</span><span class="atneq">=</span><span class="z">"</span><span class="av">true</span><span class="z">"</span><span class="atn"> xmlns</span><span class="atneq">=</span><span class="z">"</span><span class="av">http://www.marklogic.com/ps/lib/lib-search</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$text</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">term</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">text</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$text</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">text</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="es">&lt;</span><span class="en">scope-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$field</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">scope-id</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">term</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="function">construct-collection-criteria</span><span class="parenthesis">(</span><span class="variable">$collections</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="function">construct-value-criteria</span><span class="parenthesis">(</span><span class="variable">$values</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$start-date</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$end-date</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">date-range</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$start-date</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">from</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$start-date</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">from</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$end-date</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">to</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$end-date</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">to</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">date-range</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$duration</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">date-range</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="es">&lt;</span><span class="en">trailing-duration</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$duration</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">trailing-duration</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">date-range</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$text</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$sort</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">rel</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$sort</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="es">&lt;</span><span class="en">sort</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">sort-field-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$sort</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">sort-field-id</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">sort</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">sort</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">sort-field-id</span><span class="z">&gt;</span><span class="txt">date</span><span class="sc">&lt;/</span><span class="cl">sort-field-id</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">sort</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">}</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">search-criteria</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">construct-collection-criteria</span><span class="parenthesis">(</span><span class="variable">$collections</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-ids</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">fn:distinct-values</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$collections</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
               </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$criteria</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$set-ids</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$names</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$collections</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">search:value</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">search:value</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$names</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">all</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">collections</span><span class="atn"> xmlns</span><span class="atneq">=</span><span class="z">"</span><span class="av">http://www.marklogic.com/ps/lib/lib-search</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="es">&lt;</span><span class="en">set-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$set-id</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">set-id</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="variable">$names</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">collections</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="variable">$criteria</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">construct-value-criteria</span><span class="parenthesis">(</span><span class="variable">$search-values</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$scope-ids</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">fn:distinct-values</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$search-values</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
               </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$criteria</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$scope-ids</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$values</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$search-values</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-id</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">search:value</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">search:value</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$values</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">all</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">values</span><span class="atn"> xmlns</span><span class="atneq">=</span><span class="z">"</span><span class="av">http://www.marklogic.com/ps/lib/lib-search</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="es">&lt;</span><span class="en">scope-id</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$set-id</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">scope-id</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="variable">$values</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">values</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="variable">$criteria</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$raw</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="op">,</span><span class="whitespace"> </span><span class="op">'</span><span class="literal">:</span><span class="op">'</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$raw</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">(</span><span class="variable">$raw</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="variable">$raw</span><span class="filter">[</span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$raw</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:-- Search Form Controls --:)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders an advanced search form, including building&#xD;
: parametric select boxes based on facet information. &#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $facet-defs The facets to use to build the advanced search form.&#xD;
: @return A &lt;form&gt; containing the rendered search form.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-form</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
	</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace">&#xD;
	</span><span class="variable">$facet-defs</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-defs</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">form</span><span class="atn"> action</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="atn"> method</span><span class="atneq">=</span><span class="z">"</span><span class="av">get</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">	    &#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">background:#F8F8F8;border:1px solid #D0D0D0;width:38em;padding:.6em .7em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="axis">element</span><span class="whitespace"> </span><span class="qname">input</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace">&#xD;
                    </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">id</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">adv-search-terms</span><span class="op">"</span><span class="open"></span><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">name</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="open"></span><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">type</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">text</span><span class="op">"</span><span class="open"></span><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">style</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">display:inline;width:250px;padding:.2em .3em;</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
                    </span><span class="op">,</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">value</span><span class="whitespace"> </span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="op">}</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$SEARCH-FIELDS</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">field</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">display:inline;margin-left:.3em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="op">{</span><span class="open"></span><span class="whitespace">     &#xD;
    			</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$option</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$SEARCH-FIELDS</span><span class="whitespace">&#xD;
    			</span><span class="op">return</span><span class="whitespace">&#xD;
					</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$option</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">\|</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
					</span><span class="op">return</span><span class="whitespace"> &#xD;
						</span><span class="axis">element</span><span class="whitespace"> </span><span class="qname">option</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace">&#xD;
							</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">value</span><span class="whitespace"> </span><span class="op">{</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">}</span><span class="op">,</span><span class="whitespace">&#xD;
							</span><span class="if">if(</span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> &#xD;
								</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
							</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
							</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace">&#xD;
						</span><span class="op">}</span><span class="whitespace">&#xD;
    			</span><span class="op">}</span><span class="txt">&#xD;
		    </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="whitespace">&#xD;
		    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="filter">[</span><span class="qname">search:collection-set-facet</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="function">search-form-control-collection-set</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                </span><span class="variable">$params</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="variable">$facet</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="variable">$pos</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$ENABLE-DATE-CRITERIA</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">search-form-control-discrete-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">Search</span><span class="z">"</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">submit</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">button</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">display:block;margin:.5em .5em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
	</span><span class="sc">&lt;/</span><span class="cl">form</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-form-control-collection-set</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$facet-def</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-def</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$position</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="whitespace">&#xD;
    </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$collection-set-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet-def</span><span class="step">/</span><span class="qname">search:collection-set-facet</span><span class="step">/</span><span class="qname">search:set-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$resolved-facet</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">search:resolve-facet</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">search:search-criteria</span><span class="atn"> </span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-def</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin: .7em .7em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="txt"> [Article Count]:</span><span class="es">&lt;</span><span class="en">br</span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> id</span><span class="atneq">=</span><span class="z">"</span><span class="av">select-</span><span class="op">{</span><span class="variable">$position</span><span class="op">}</span><span class="z">"</span><span class="atn"> multiple</span><span class="atneq">=</span><span class="z">"</span><span class="av">multiple</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">coll</span><span class="z">"</span><span class="atn"> size</span><span class="atneq">=</span><span class="z">"</span><span class="av">4</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:300px;</span><span class="z">"</span><span class="atn"> </span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="open"></span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                All </span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$resolved-facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> &#xD;
                </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$value</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                	</span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                	</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
                	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                	</span><span class="op">{</span><span class="open"></span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="op">}</span><span class="txt">&#xD;
     	</span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
     </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-form-control-discrete-date</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin: .7em .7em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        Date:</span><span class="es">&lt;</span><span class="en">br</span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin-top:.3em</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">label</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">font-weight:bold;float:left;margin-top:.4em;width:4em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">Start: </span><span class="sc">&lt;/</span><span class="cl">label</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">start-month</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">01</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">01</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">January</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">02</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">02</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">February</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">03</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">03</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">March</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">04</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">04</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">April</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">05</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">05</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">May</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">06</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">06</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">June</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">07</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">07</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">July</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">08</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">08</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">August</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">09</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">09</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">September</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">10</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">10</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">October</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">11</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">11</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">November</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">12</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-month</span><span class="op">,</span><span class="op">"</span><span class="literal">12</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">December</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">start-day</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-day</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:2em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">start-year</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">start-year</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:4em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">label</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">font-weight:bold;float:left;margin-top:.4em;width:4em;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">End: </span><span class="sc">&lt;/</span><span class="cl">label</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">end-month</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">01</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">01</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">January</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">02</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">02</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">February</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">03</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">03</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">March</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">04</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">04</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">April</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">05</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">05</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">May</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">06</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">06</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">June</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">07</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">07</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">July</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">08</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">08</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">August</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">09</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">09</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">September</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">10</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">10</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">October</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">11</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">11</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">November</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            	</span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">12</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-month</span><span class="op">,</span><span class="op">"</span><span class="literal">12</span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">December</span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">end-day</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-day</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:2em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="op">"</span><span class="literal"> / </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">end-year</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">end-year</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:4em;</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
 	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">select-option</span><span class="parenthesis">(</span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">attribute</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Search Facets Functions :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: &#xD;
   The format of the facet definitions is proscribed by lib-search. You can also&#xD;
   include custom elements which search-ui.xqy will use when rendering your facet.&#xD;
   Make sure to pass the custom section for each facet, which contains:&#xD;
   facet-def/custom/title : The heading used to display all related UI controls.&#xD;
   facet-def/custom/sort : default (default), count, name-asc, name-desc&#xD;
   facet-def/custom/icon : an image filename, used in the analysis panel only&#xD;
   facet-def/custom/qs-id : for collection and value facets, scope-ids should be used,&#xD;
       and this should match the name of the scope-id&#xD;
   facet-def/custom/mode : currently used only in value facets, changes how the user&#xD;
       interacts with the facet.&#xD;
   &#xD;
   For more information on defining facets, see the Search Library Guide.&#xD;
&#xD;
    &lt;facet-defs xmlns="http://www.marklogic.com/ps/lib/lib-search"&gt;&#xD;
        &lt;facet-def&gt;&#xD;
        ...&#xD;
        &lt;custom&gt;&#xD;
            &lt;sort&gt;name-asc&lt;/sort&gt;&#xD;
            &lt;qs-id&gt;comp&lt;/qs-id&gt;&#xD;
            &lt;title&gt;Companies&lt;/title&gt;&#xD;
            &lt;icon&gt;/images/silk/building.png&lt;/icon&gt;&#xD;
            &lt;mode&gt;mixed|one|add&lt;/mode&gt;&#xD;
        &lt;/custom&gt;&#xD;
        &lt;/facet-def&gt;&#xD;
    &lt;/facet-defs&gt;&#xD;
:)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders an facets meant to be displayed on the sidebar of&#xD;
: the search page.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $facet-defs The facets to use to build the advanced search form.&#xD;
: @return The rendered HTML facets.&#xD;
:)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-facets</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-defs</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$rendered-facets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">params-to-query</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">search:resolve-facets</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="step">/</span><span class="qname">search:facet</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:collection-set-facet</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="function">collection-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:value-facet</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:trailing-date-facet</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="function">trailing-date-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="comment">(: Unhandled facet type&#xD;
            else if ($facet[search:facet-def/search:date-group-facet]) then&#xD;
                (date-group-facet($params, $facet)):)</span><span class="open"></span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$rendered-facets</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$rendered-facets</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders tag clouds meant to be displayed on the top of&#xD;
: the search page. The items in the tag cloud are given a 1-6 "heat" rating,&#xD;
: which can be individually styled. The heat rating is determined, and can&#xD;
: be customized using the "determine-heat" function.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $facet-defs The facets to use to build the advanced search form.&#xD;
: @return The rendered HTML tag clouds&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-results-analysis</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet-defs</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">params-to-query</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">search:resolve-facets</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet-defs</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facets</span><span class="step">/</span><span class="qname">search:facet</span><span class="step">/</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">analysis-panel</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">header</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">These documents contain references to:&amp;nbsp;&amp;nbsp;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">hval</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[CLEAR FILTERS]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facets</span><span class="step">/</span><span class="qname">search:facet</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="function">value-heatmap</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: NB: This facet doesn't yet support facet modes. It must be added later :)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">collection-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">coll</span><span class="op">"</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$collection-set-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:collection-set-facet</span><span class="step">/</span><span class="qname">search:set-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="comment">(: Collection Management :)</span><span class="whitespace">&#xD;
    </span><span class="comment">(: Selects the param values that are within scope (ie have been returned from) of the current facet :)</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$passed-colls</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:starts-with</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$collection-set-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$out-of-scope-colls</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$passed-colls</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$coll</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$out-of-scope-colls</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$out-of-scope-colls</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace">&#xD;
    &#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="open"></span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$title</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">h3</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">h3</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">search_facet</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: ALL :)</span><span class="open"></span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$facet-colls</span><span class="op">,</span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">All [</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="op">return</span><span class="whitespace">			&#xD;
        	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        		</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
        		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        		    </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-colls</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        			</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	     			</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_black.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        		</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
        		</span><span class="op">}</span><span class="txt">&#xD;
        	</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: COLLECTIONS :)</span><span class="open"></span><span class="whitespace">&#xD;
    	</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$collection-set-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
 			</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
			   from params, else add to the params :)</span><span class="open"></span><span class="whitespace">&#xD;
			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
	    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
				</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$value</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
			</span><span class="op">else</span><span class="whitespace">&#xD;
				</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
					</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
					</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	</span><span class="op">return</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
	    			</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">coll</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_delete.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
	    			</span><span class="op">}</span><span class="txt">&#xD;
	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
	    	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
 		</span><span class="op">}</span><span class="txt">&#xD;
 		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
 	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace"> </span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">value-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="comment">(: mode == (one, add, mixed) :)</span><span class="open"></span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
	    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$mode</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="filter">[</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:mode</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:mode</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace">&#xD;
	            </span><span class="variable">$DEFAULT-FACET-MODE</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">val</span><span class="op">"</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="comment">(: Value Management :)</span><span class="whitespace">&#xD;
    </span><span class="comment">(: Selects the param values that are within scope (ie have been returned from) of the current facet :)</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:starts-with</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$out-of-scope-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace">&#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$out-of-scope-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$out-of-scope-vals</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace">&#xD;
    &#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="open"></span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$title</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">h3</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">h3</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">search_facet</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: ALL :)</span><span class="open"></span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$facet-vals</span><span class="op">,</span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">All [</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="op">return</span><span class="whitespace">			&#xD;
        	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        		</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
        		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        		    </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
        			</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	     			</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_black.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        		</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
        		</span><span class="op">}</span><span class="txt">&#xD;
        	</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
        </span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: VALUES :)</span><span class="open"></span><span class="whitespace">&#xD;
    	</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$add-qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
     		</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
    		   from params, else add to the params :)</span><span class="open"></span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
        		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    			</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$value</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="op">else</span><span class="whitespace">&#xD;
    			</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    				</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$one-qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
     		</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
    		   from params, else add to the params :)</span><span class="open"></span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$stripped-params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> &#xD;
    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$passed-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    			    </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$passed-vals</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="op">else</span><span class="whitespace">&#xD;
    			    </span><span class="variable">$params</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
        		</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        			</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$stripped-params</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
        			</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace">&#xD;
    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	    		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">add</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$add-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_delete.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$mode</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">mixed</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$add-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_delete.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="op">{</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$one-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">(only)</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace">&#xD;
    	    		</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$one-qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_black.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
                &#xD;
	    	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
 		</span><span class="op">}</span><span class="txt">&#xD;
 		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
 	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">value-heatmap</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$icon</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:icon</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="quantifier">?</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="whitespace">&#xD;
    	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="quantifier">?</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:max</span><span class="parenthesis">(</span><span class="variable">$max-count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">hval</span><span class="op">"</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:all</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        &#xD;
        </span><span class="comment">(: Value Management :)</span><span class="whitespace">&#xD;
        </span><span class="comment">(: Selects the param values that are within scope of (ie have been returned from) the current facet :)</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:starts-with</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$qs-id</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$out-of-scope-vals</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$passed-vals</span><span class="whitespace">&#xD;
            </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$val</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$val</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$out-of-scope-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$out-of-scope-vals</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace">&#xD;
        &#xD;
    	</span><span class="op">return</span><span class="whitespace">&#xD;
    	</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$icon</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">icon</span><span class="z">"</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$icon</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt">: &#xD;
            </span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">heatmap</span><span class="z">"</span><span class="atn"> xml:space</span><span class="atneq">=</span><span class="z">"</span><span class="av">preserve</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: ALL :)</span><span class="open"></span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$facet-vals</span><span class="op">,</span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">[CLEAR &amp;raquo;]</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="op">return</span><span class="whitespace">			&#xD;
            	</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
            	    </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$facet-vals</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace">&#xD;
            		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">else</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
        	</span><span class="op">{</span><span class="whitespace"> </span><span class="comment">(: VALUES :)</span><span class="open"></span><span class="whitespace">&#xD;
        	</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:sort</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$qs-id</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    		</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
     			</span><span class="comment">(: If the current collection exists in the params, then remove&#xD;
    			   from params, else add to the params :)</span><span class="open"></span><span class="whitespace">&#xD;
    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    		</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$value</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="op">else</span><span class="whitespace">&#xD;
    				</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    					</span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="variable">$param-name</span><span class="op">,</span><span class="variable">$set-selector</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    					</span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="op">"</span><span class="literal">=</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$value</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="op">"</span><span class="literal">&amp;</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        	</span><span class="op">return</span><span class="whitespace">&#xD;
        		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	    		</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$count</span><span class="op">}</span><span class="av"> documents</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">heat</span><span class="op">{</span><span class="function">determine-heat</span><span class="parenthesis">(</span><span class="variable">$all-count</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$count</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	    			</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
    	    			</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$set-selector</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> &#xD;
    	    				</span><span class="variable">$params</span><span class="step">/</span><span class="qname">hval</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    	     				</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">strong</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    			</span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
    	    			</span><span class="op">}</span><span class="txt">&#xD;
    	    		</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    	    	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
     		</span><span class="op">}</span><span class="txt">&#xD;
             &#xD;
            </span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt">&#xD;
     	</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
 	</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">trailing-date-facet</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:facet</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$title</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:facet-def</span><span class="step">/</span><span class="qname">search:custom</span><span class="step">/</span><span class="qname">search:title</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        	</span><span class="op">{</span><span class="comment">(: Only display the date facets when there is no start and non-valid end fields :)</span><span class="op">}</span><span class="txt">&#xD;
    	    </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$title</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">h3</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$title</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">h3</span><span class="z">&gt;</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">search_facet</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="whitespace">&#xD;
    			</span><span class="comment">(: ALL :)</span><span class="open"></span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">dur</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:all</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">All [</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="op">return</span><span class="whitespace">					&#xD;
    				</span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
    				</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="step">/</span><span class="node">text(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    					</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_go.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    				</span><span class="op">else</span><span class="whitespace">&#xD;
    					</span><span class="variable">$link</span><span class="whitespace">&#xD;
    				</span><span class="op">}</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
    			</span><span class="op">,</span><span class="whitespace">&#xD;
    			</span><span class="comment">(: DURATIONS :)</span><span class="open"></span><span class="whitespace">&#xD;
                </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$facet</span><span class="step">/</span><span class="qname">search:item</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$value</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xs:duration</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$desc</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    			</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$newParams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
    				</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">dur</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">dur</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$value</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">dur</span><span class="z">&gt;</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$qs</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$newParams</span><span class="op">,</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$desc</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> [</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$count</span><span class="op">,</span><span class="op">"</span><span class="literal">]</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">return</span><span class="whitespace">			&#xD;
                    </span><span class="es">&lt;</span><span class="en">div</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="variable">$qs</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                        </span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
                        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$value</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
                         	</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">img</span><span class="atn"> src</span><span class="atneq">=</span><span class="z">"</span><span class="av">images/silk/bullet_go.png</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">selected_icon</span><span class="z">"</span><span class="z">/&gt;</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$link</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="variable">$link</span><span class="whitespace">&#xD;
                        </span><span class="op">}</span><span class="txt">&#xD;
                    </span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
    		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">determine-heat</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$item-count</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="comment">(: With this formula, an item can range from 0-67% :)</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="comment">(: Lower ranges are wider than higher ranges :)</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$comp-num</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">*</span><span class="whitespace"> </span><span class="numeric">.5</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$item-pct</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$item-count</span><span class="whitespace"> </span><span class="op">div</span><span class="whitespace"> </span><span class="variable">$comp-num</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$max-pct</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">div</span><span class="whitespace"> </span><span class="variable">$comp-num</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$item-pct</span><span class="whitespace"> </span><span class="op">div</span><span class="whitespace"> </span><span class="variable">$max-pct</span><span class="whitespace"> &#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="comment">(: apply specific controls :)</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="comment">(: These are a hack for now. Will need to tune this later :)</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$item-count</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> &#xD;
        </span><span class="numeric">2</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$all-count</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">3</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$max-count</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$item-count</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">4</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace">&#xD;
    &#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.25</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">1</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.46</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">2</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.63</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">3</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.77</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">4</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$xfrm-pct</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="numeric">.89</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="numeric">5</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="numeric">6</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">facet-item-sort</span><span class="parenthesis">(</span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$type</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="quantifier">?</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:item</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">name-asc</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
        </span><span class="type-op">order by</span><span class="whitespace"> </span><span class="node-type">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">ascending</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">name-desc</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
        </span><span class="type-op">order by</span><span class="whitespace"> </span><span class="node-type">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">descending</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$type</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">count</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
        </span><span class="type-op">order by</span><span class="whitespace"> </span><span class="node-type">xs:integer</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">count</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">descending</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace">&#xD;
        </span><span class="variable">$items</span><span class="whitespace">        &#xD;
</span><span class="op">}</span><span class="whitespace"> &#xD;
&#xD;
</span><span class="comment">(: Highlighting functions :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Will highlight a node based on the full-text search inside&#xD;
: a search-criteria. Compatible with the create-snippet and create-summary functions.&#xD;
:&#xD;
: @param $node The node to be highlighted&#xD;
: @param $query The search-criteria to be used to perform the highlighting.&#xD;
: @return The highlighted node. If not highlighting query can be built, then returns nothing.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">highlight</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$highlight-query</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">create-highlight-query</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$highlight-query</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="function">cts:highlight</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="op">,</span><span class="variable">$highlight-query</span><span class="op">,</span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">ml-highlight</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$cts:text</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Builds a cts:query from a search-criteria element suitable for highlighting a node. &#xD;
:&#xD;
: @param $query The search-criteria to be used to perform the highlighting.&#xD;
: @return The highlight query. If not highlighting query can be built, then returns nothing.&#xD;
:)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-highlight-query</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">search:search-criteria</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">cts:query</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="function">search:build-term-query</span><span class="parenthesis">(</span><span class="function">search:resolve</span><span class="parenthesis">(</span><span class="variable">$query</span><span class="step">/</span><span class="qname">search:term</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Search snippet functions :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders a search result summary, which can be either the abstract of the document or&#xD;
: snippets of the document if it has been highlighted as a result of a full-text search.&#xD;
: If snippets are available, then a click-and-zoom link can also be enabled. To enable click-and-zoom&#xD;
: there must be a page that can handle a request in the format:&#xD;
: &#xD;
: request.xqy?action=show-section&amp;uri=[*]&amp;path=[*]&#xD;
: &#xD;
: The function sdis:show-section (below), can then be called to fullfil the request.&#xD;
:&#xD;
: @param $orig-node The original document. Should be an active reference to a node in the&#xD;
    repository and not dynamically constructed.&#xD;
: @param $snippet-node A highligted node, that contains the portions of the original&#xD;
    document that should be snippeted. A common design pattern is to pass only the body&#xD;
    of an article as the $snippet-node.&#xD;
: @param $default-summary If a snippet-node is not included, or nothing was highlighted,&#xD;
    then this variable will be used. This commonly is the first 1 or 2 paragraphs or the&#xD;
    abstract of a document.&#xD;
: @return A rendered HTML summary or snippet interface.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-summary</span><span class="parenthesis">(</span><span class="variable">$orig-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$snippet-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$default-summary</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type">item</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$do-zoom</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:boolean</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$uri</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xdmp:node-uri</span><span class="parenthesis">(</span><span class="variable">$orig-node</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$snippets</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$snippet-node</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$snippet-node</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$summary</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
		</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:exists</span><span class="parenthesis">(</span><span class="variable">$snippets</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
			</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">p</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">summary</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
			</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$snippets</span><span class="step">/</span><span class="qname">span</span><span class="whitespace">&#xD;
			</span><span class="op">return</span><span class="whitespace"> &#xD;
			    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$do-zoom</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">title</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="txt">...</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="txt">&amp;nbsp;&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
			    </span><span class="op">else</span><span class="whitespace">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">javascript:void(0);</span><span class="z">"</span><span class="atn"> onmouseout</span><span class="atneq">=</span><span class="z">"</span><span class="av">$('abs_</span><span class="op">{</span><span class="variable">$uri</span><span class="op">}</span><span class="av">').addClassName(hideClass);</span><span class="z">"</span><span class="atn"> onclick</span><span class="atneq">=</span><span class="z">"</span><span class="av">toggleLoadedContent('abs_</span><span class="op">{</span><span class="function">fn:data</span><span class="parenthesis">(</span><span class="variable">$uri</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">','request.xqy',{{method:'post',postBody:'action=show-section&amp;uri=</span><span class="op">{</span><span class="function">xdmp:url-encode</span><span class="parenthesis">(</span><span class="variable">$uri</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;path=</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">title</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">',asynchronous:true},true);</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="axis">@</span><span class="qname">title</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    			    </span><span class="op">{</span><span class="variable">$item</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
    			    </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="txt">...</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="txt">&amp;nbsp;&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt">&#xD;
    				</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
			</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">p</span><span class="z">&gt;</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
		</span><span class="op">else</span><span class="whitespace">&#xD;
		   </span><span class="variable">$default-summary</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
		</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">summary</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
		</span><span class="op">{</span><span class="open"></span><span class="variable">$summary</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
		</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="op">,</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> id</span><span class="atneq">=</span><span class="z">"</span><span class="av">abs_</span><span class="op">{</span><span class="variable">$uri</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">abstract hidden</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">|</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders snippets based on a highlighted node. The element used for&#xD;
: highlighting should be &lt;span class="ml-highlight"&gt;. sdis:highlight is a great option&#xD;
: as a compatible highlighting function.&#xD;
:&#xD;
: @param $highlighted-node The node highlighted with &lt;span class="ml-highlight"&gt;&#xD;
: @return A &lt;div&gt; containing the rendered snippets.&#xD;
:)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">4</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">11</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Renders snippets based on a highlighted node. The element used for&#xD;
: highlighting should be &lt;span class="ml-highlight"&gt;. sdis:highlight is a great option&#xD;
: as a compatible highlighting function.&#xD;
:&#xD;
: @param $highlighted-node The node highlighted with &lt;span class="ml-highlight"&gt;&#xD;
: @param $max-snippet-matches The total number of snippets that are returned.&#xD;
: @param $truncate-words The total number of words a snippet will contain.&#xD;
: @return A &lt;div&gt; containing the rendered snippets.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">create-snippets</span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$max-snippet-matches</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">div</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$matches</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$highlighted-node</span><span class="step">//</span><span class="qname">span</span><span class="filter">[</span><span class="axis">@</span><span class="qname">class</span><span class="op">=</span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"></span><span class="filter">]</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="variable">$max-snippet-matches</span><span class="filter">]</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$hits</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$hit</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$matches</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$pos</span><span class="whitespace"> </span><span class="op">gt</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> ... </span><span class="op">"</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">xpath</span><span class="parenthesis">(</span><span class="variable">$hit</span><span class="step">/</span><span class="axis">parent::</span><span class="qname">*</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">ml-snippet</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
                </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="es">&lt;</span><span class="en">span</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">ml-wrapper</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="parenthesis">(</span><span class="variable">$hit</span><span class="step">/</span><span class="axis">preceding-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$hit</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$hit</span><span class="step">/</span><span class="axis">following-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$hits</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">snippets</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$hits</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: In order for this function to work properly, you must declare all the&#xD;
namespaces used in your content at the top of this file :)</span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">xpath</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">node</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="function">xdmp:path</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: Returns the configured number of words before and after the highlight term.&#xD;
:&#xD;
: @param $x An item to be trucated.&#xD;
: @return The truncated text.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type">item</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:integer</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type">item</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace">&#xD;
       </span><span class="function">typeswitch</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
       </span><span class="axis">case</span><span class="whitespace"> </span><span class="node">text(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="comment">(: is there a highlight node before? :)</span><span class="open"></span><span class="whitespace">&#xD;
             </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="axis">preceding-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="filter">[</span><span class="axis">self::</span><span class="qname">span</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"></span><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="comment">(: if so, print the first $g_num words :)</span><span class="whitespace">&#xD;
                        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">cts:tokenize</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="comment">(: &gt; :)</span><span class="whitespace">&#xD;
                                          </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                          </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">return</span><span class="whitespace">&#xD;
                        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="comment">(: &gt; :)</span><span class="open"></span><span class="whitespace">&#xD;
                        </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="comment">(: is there a highlight node after? :)</span><span class="open"></span><span class="whitespace">&#xD;
                              </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="axis">following-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="filter">[</span><span class="axis">self::</span><span class="qname">span</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"></span><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                              </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="comment">(: if there is a highlight node after, we do&#xD;
                                        not want to double count it :)</span><span class="open"></span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                              </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                                </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                   </span><span class="comment">(: If the first token is punctuation, then no space before :)</span><span class="open"></span><span class="whitespace">&#xD;
                                 </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                             </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
                     </span><span class="comment">(: If the first token is punctuation, then no space before :)</span><span class="open"></span><span class="whitespace">&#xD;
                                 </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$truncateTokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                                      </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                             </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                      </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
&#xD;
                     </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
            </span><span class="comment">(: is there a highlight node after? :)</span><span class="open"></span><span class="whitespace">&#xD;
            </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="axis">following-sibling::</span><span class="node">node(</span><span class="parenthesis">)</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="filter">[</span><span class="axis">self::</span><span class="qname">span</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="open"></span><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="comment">(: if so, print the last $g_num words :)</span><span class="whitespace">&#xD;
                     </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">cts:tokenize</span><span class="parenthesis">(</span><span class="variable">$x</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:count</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">  </span><span class="comment">(: &gt; :)</span><span class="whitespace">&#xD;
                                 </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                                 </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="op">to</span><span class="whitespace"> </span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="op">return</span><span class="whitespace">&#xD;
                     </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$count</span><span class="whitespace"> </span><span class="op">&lt;</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="comment">(: &gt; :)</span><span class="open"></span><span class="whitespace">&#xD;
                     </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                  </span><span class="comment">(: If the last token is not punctuation, then add space after :)</span><span class="open"></span><span class="whitespace">&#xD;
                               </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                           </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                     </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="whitespace"> </span><span class="variable">$truncateTokens</span><span class="whitespace"> </span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                  </span><span class="comment">(: If the last token is not punctuation, then add space after :)</span><span class="open"></span><span class="whitespace">&#xD;
                               </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="function">fn:last</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="type-op">instance of</span><span class="whitespace"> </span><span class="type-name">cts:punctuation</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                               </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                           </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                   </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
              </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="whitespace"> </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
               </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
       </span><span class="axis">case</span><span class="whitespace"> </span><span class="qname">element</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="qname">span</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$x</span><span class="step">/</span><span class="axis">@</span><span class="qname">class</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">ml-highlight</span><span class="op">"</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="variable">$x</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$z</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="variable">$z</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
       </span><span class="axis">default</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$z</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$x</span><span class="step">/</span><span class="node">node(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace"> </span><span class="function">truncate-text</span><span class="parenthesis">(</span><span class="variable">$z</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$truncate-words</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Returns a string version of any xpath in a document&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return The string version of any xpath in a document.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">show-section</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$uri</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">uri</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$path</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">path</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$nodeInstr</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="function">search:construct-prolog</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace">&#xD;
							</span><span class="op">"</span><span class="literal"> fn:doc('</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$uri</span><span class="op">,</span><span class="op">"</span><span class="literal">')</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="variable">$path</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$node</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xdmp:eval</span><span class="parenthesis">(</span><span class="variable">$nodeInstr</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$preview</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
		</span><span class="if">if(</span><span class="function">fn:exists</span><span class="parenthesis">(</span><span class="variable">$node</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
			</span><span class="variable">$node</span><span class="whitespace">&#xD;
		</span><span class="op">else</span><span class="whitespace">&#xD;
			</span><span class="op">"</span><span class="literal">No preview available.</span><span class="op">"</span><span class="whitespace">&#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
		</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$preview</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(: Search Widgets :)</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) A description of the query being displayed that will also&#xD;
: allow users to remove individual items from their search. &#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return An HTML rendered, interactive description of the user's search.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">query-description</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">!=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">query_description</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
        </span><span class="op">{</span><span class="open"></span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">Results </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">for </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"></span><span class="op">,</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">in </span><span class="es">&lt;</span><span class="en">i</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">i</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> &#xD;
        </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[x]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="function">filter-description</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Information on the quanity of results and the time to render the results.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $query-time The amount of time required to execute the search.&#xD;
: @param $page-info The pagination element created by lib-uitools.&#xD;
: @return A rendered HTML &lt;div&gt; containing information on the quanity of results and the time to render the results.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">results-info</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$query-time</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:duration</span><span class="op">,</span><span class="whitespace">&#xD;
	</span><span class="variable">$page-info</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">pagination</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$time</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$query-time</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$time</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:substring</span><span class="parenthesis">(</span><span class="variable">$time</span><span class="op">,</span><span class="whitespace"> </span><span class="numeric">3</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:string-length</span><span class="parenthesis">(</span><span class="variable">$time</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">results_info</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
	    </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">Displaying </span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">start</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt"> to </span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">end</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt"> of about </span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">count</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt"> results. Searched in </span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$time</span><span class="op">}</span><span class="txt">s</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="txt">.</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="txt"> </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[Reset Search]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) A widget which is meant to be displayed on the sidebar&#xD;
: and will allow the user to choose a sort order for their results.&#xD;
: Appears only when there is a full-text search. Default browse&#xD;
: sort-order is used otherwise.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return A select box which will allow the user to select the sort order.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">sort</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">margin: 7px 0 5px 0;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    	</span><span class="es">&lt;</span><span class="en">form</span><span class="atn"> method</span><span class="atneq">=</span><span class="z">"</span><span class="av">get</span><span class="z">"</span><span class="atn"> action</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">sort</span><span class="z">"</span><span class="atn"> onchange</span><span class="atneq">=</span><span class="z">"</span><span class="av">this.form.submit();</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">rel</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:empty</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">rel</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                Sort by Relevence&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="es">&lt;</span><span class="en">option</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">date</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
                </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">sort</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">date</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
                Sort by Date&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">option</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="open"></span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">sort</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="step">/</span><span class="qname">*</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">hidden</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="variable">$param</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">hide</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$param</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="sc">&lt;/</span><span class="cl">form</span><span class="z">&gt;</span><span class="txt">&#xD;
    </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) A widget meant for the sidebar that includes a search box and&#xD;
: field select box which a user can modify their current full-text search parameters.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @return A search filter widget.&#xD;
:)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">search-filter</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">?</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$hparams</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    	</span><span class="es">&lt;</span><span class="en">form</span><span class="atn"> method</span><span class="atneq">=</span><span class="z">"</span><span class="av">get</span><span class="z">"</span><span class="atn"> action</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
    		</span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">text</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">q</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">width:95%;</span><span class="z">"</span><span class="atn"> id</span><span class="atneq">=</span><span class="z">"</span><span class="av">quicksearch_q</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">textbox</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">q</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="op">{</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="open"></span><span class="whitespace"> </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$SEARCH-FIELDS</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
	            </span><span class="es">&lt;</span><span class="en">select</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="av">field</span><span class="z">"</span><span class="atn"> style</span><span class="atneq">=</span><span class="z">"</span><span class="av">display:inline;margin:3px 3px 0 0;</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
	            	</span><span class="op">{</span><span class="open"></span><span class="whitespace">     &#xD;
	    			</span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$option</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$SEARCH-FIELDS</span><span class="whitespace">&#xD;
	    			</span><span class="op">return</span><span class="whitespace">&#xD;
						</span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$option</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">\|</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
						</span><span class="op">return</span><span class="whitespace"> &#xD;
							</span><span class="axis">element</span><span class="whitespace"> </span><span class="qname">option</span><span class="whitespace"> </span><span class="op">{</span><span class="whitespace">&#xD;
								</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">value</span><span class="whitespace"> </span><span class="op">{</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">}</span><span class="op">,</span><span class="whitespace">&#xD;
								</span><span class="if">if(</span><span class="parenthesis">(</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">field</span><span class="whitespace"> </span><span class="op">eq</span><span class="whitespace"> </span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> &#xD;
									</span><span class="axis">attribute</span><span class="whitespace"> </span><span class="qname">selected</span><span class="whitespace"> </span><span class="op">{</span><span class="op">"</span><span class="literal">selected</span><span class="op">"</span><span class="op">}</span><span class="whitespace">&#xD;
								</span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
								</span><span class="variable">$items</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace">&#xD;
							</span><span class="op">}</span><span class="whitespace">&#xD;
	    			</span><span class="op">}</span><span class="txt">&#xD;
			    </span><span class="sc">&lt;/</span><span class="cl">select</span><span class="z">&gt;</span><span class="whitespace">&#xD;
			    </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">}</span><span class="txt">&#xD;
    		</span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">submit</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="av">Filter</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">button</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="txt">&#xD;
    		</span><span class="op">{</span><span class="open"></span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$param</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="filter">[</span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">q</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">field</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">return</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">input</span><span class="atn"> type</span><span class="atneq">=</span><span class="z">"</span><span class="av">hidden</span><span class="z">"</span><span class="atn"> name</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="variable">$param</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">hide</span><span class="z">"</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$param</span><span class="op">}</span><span class="z">"</span><span class="atn"> </span><span class="z">/&gt;</span><span class="op">}</span><span class="txt">&#xD;
    	</span><span class="sc">&lt;/</span><span class="cl">form</span><span class="z">&gt;</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="comment">(:~&#xD;
:&#xD;
: (Public) Pagination controls for a page.&#xD;
:&#xD;
: @param $params The parameters from the page request.&#xD;
: @param $page-info The pagination element created by lib-uitools.&#xD;
: @return A fully functional pagination control&#xD;
  Disclaimer: We acknowledge that this function is seriously lacking, so&#xD;
   if you have the time and desire, please do. :)</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">pagination</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
	</span><span class="variable">$page-info</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">pagination</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xs:integer</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">page</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">xs:integer</span><span class="parenthesis">(</span><span class="variable">$page-info</span><span class="step">/</span><span class="qname">pages</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
	</span><span class="op">return</span><span class="whitespace">&#xD;
	</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">pages</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextprev</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="av">Go to Previous Page</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&amp;laquo; Previous Page</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">or</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">0</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">lastpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">-</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">thispage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="es">&lt;</span><span class="en">strong</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">strong</span><span class="z">&gt;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage2</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">2</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage3</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">3</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage4</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">4</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage5</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">5</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage6</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">6</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage7</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">7</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage8</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">8</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">and</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage9</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">9</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="whitespace"> </span><span class="op">&lt;=</span><span class="whitespace"> </span><span class="variable">$pages</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">nextpage</span><span class="z">"</span><span class="atn"> title</span><span class="atneq">=</span><span class="z">"</span><span class="av">Go to Next Page</span><span class="z">"</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">p</span><span class="op">"</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="av">&amp;p=</span><span class="op">{</span><span class="variable">$page</span><span class="whitespace"> </span><span class="op">+</span><span class="whitespace"> </span><span class="numeric">1</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">Next Page &amp;raquo;</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
	</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">filter-description</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="quantifier">*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$search-items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">report-on-search-items</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$search-items</span><span class="step">/</span><span class="qname">param</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">div</span><span class="atn"> class</span><span class="atneq">=</span><span class="z">"</span><span class="av">query_description</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">&#xD;
            Filters </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="txt">for</span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="op">{</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
            </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$type</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$tpos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$search-items</span><span class="step">/</span><span class="qname">param</span><span class="step">/</span><span class="qname">type</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$type</span><span class="step">/</span><span class="axis">parent::</span><span class="qname">param</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$type-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="variable">$type</span><span class="step">/</span><span class="axis">@</span><span class="qname">value</span><span class="whitespace">&#xD;
            </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">get-search-items-of-type</span><span class="parenthesis">(</span><span class="variable">$param-name</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$type-name</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">return</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$tpos</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">, </span><span class="op">"</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="es">&lt;</span><span class="en">span</span><span class="z">&gt;</span><span class="op">{</span><span class="variable">$type-name</span><span class="op">}</span><span class="txt"> = &#xD;
                </span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
                    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="qname">at</span><span class="whitespace"> </span><span class="variable">$ipos</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$items</span><span class="whitespace">&#xD;
                    </span><span class="op">return</span><span class="whitespace">&#xD;
                        </span><span class="parenthesis">(</span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$ipos</span><span class="whitespace"> </span><span class="op">&gt;</span><span class="whitespace"> </span><span class="numeric">1</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> OR </span><span class="op">"</span><span class="open"></span><span class="whitespace"> </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="op">{</span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace">&#xD;
                        </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="op">,</span><span class="whitespace"> </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="variable">$type-name</span><span class="op">,</span><span class="op">"</span><span class="literal">:</span><span class="op">"</span><span class="op">,</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[x]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
                </span><span class="op">}</span><span class="txt">&#xD;
                </span><span class="sc">&lt;/</span><span class="cl">span</span><span class="z">&gt;</span><span class="whitespace">&#xD;
                </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">}</span><span class="txt">&#xD;
            </span><span class="op">{</span><span class="open"></span><span class="if">if</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">then</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal"> during the last </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="es">&lt;</span><span class="en">b</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="function">fn:translate</span><span class="parenthesis">(</span><span class="function">fn:string</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">PD</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"></span><span class="op">"</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt"></span><span class="op">{</span><span class="op">"</span><span class="literal"> days</span><span class="op">"</span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">b</span><span class="z">&gt;</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace">&#xD;
            </span><span class="es">&lt;</span><span class="en">a</span><span class="atn"> href</span><span class="atneq">=</span><span class="z">"</span><span class="av">search.xqy?</span><span class="op">{</span><span class="open"></span><span class="function">uit:build-querystring</span><span class="parenthesis">(</span><span class="function">uit:modify-param-set</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">dur</span><span class="op">"</span><span class="op">,</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">dur</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="op">,</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="txt">[x]</span><span class="sc">&lt;/</span><span class="cl">a</span><span class="z">&gt;</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="op">}</span><span class="txt">&#xD;
        </span><span class="sc">&lt;/</span><span class="cl">div</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
        </span><span class="op">else</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="qname">get-search-items-of-type</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="whitespace">&#xD;
    </span><span class="variable">$param-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$type-name</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="op">,</span><span class="whitespace">&#xD;
    </span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string*</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$i</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="filter">[</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$param-name</span><span class="filter">]</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$i</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">where</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$type-name</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">report-on-search-items</span><span class="parenthesis">(</span><span class="variable">$params</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="node-type">element</span><span class="parenthesis">(</span><span class="qname">params</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">search-item-types</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$i</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="parenthesis">(</span><span class="op">"</span><span class="literal">hval</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">val</span><span class="op">"</span><span class="open"></span><span class="op">,</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">col</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$types</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace">&#xD;
        </span><span class="function">fn:distinct-values</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$item</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$params</span><span class="step">/</span><span class="qname">*</span><span class="filter">[</span><span class="function">fn:local-name</span><span class="parenthesis">(</span><span class="context">.</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="variable">$i</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="higher">let</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="whitespace"> </span><span class="op">:=</span><span class="whitespace"> </span><span class="function">split-search-item</span><span class="parenthesis">(</span><span class="variable">$item</span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">where</span><span class="whitespace"> </span><span class="function">fn:not</span><span class="parenthesis">(</span><span class="function">fn:lower-case</span><span class="parenthesis">(</span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">2</span><span class="filter">]</span><span class="parenthesis">)</span><span class="whitespace"> </span><span class="op">=</span><span class="whitespace"> </span><span class="op">"</span><span class="literal">all</span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace">&#xD;
        </span><span class="op">return</span><span class="whitespace"> </span><span class="variable">$tokens</span><span class="filter">[</span><span class="numeric">1</span><span class="filter">]</span><span class="whitespace">&#xD;
        </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
    </span><span class="op">where</span><span class="whitespace"> </span><span class="variable">$types</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
    </span><span class="es">&lt;</span><span class="en">param</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$i</span><span class="op">}</span><span class="z">"</span><span class="z">&gt;</span><span class="op">{</span><span class="open"></span><span class="whitespace">&#xD;
    </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$type</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="variable">$types</span><span class="whitespace">&#xD;
    </span><span class="op">return</span><span class="whitespace">&#xD;
        </span><span class="es">&lt;</span><span class="en">type</span><span class="atn"> value</span><span class="atneq">=</span><span class="z">"</span><span class="op">{</span><span class="variable">$type</span><span class="op">}</span><span class="z">"</span><span class="z">/&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">param</span><span class="z">&gt;</span><span class="whitespace">&#xD;
    </span><span class="op">}</span><span class="sc">&lt;/</span><span class="cl">search-item-types</span><span class="z">&gt;</span><span class="open"></span><span class="whitespace">&#xD;
</span><span class="op">}</span><span class="whitespace">&#xD;
&#xD;
</span><span class="qname">define</span><span class="whitespace"> </span><span class="qname">function</span><span class="whitespace"> </span><span class="function">capitalize-first-chars</span><span class="parenthesis">(</span><span class="variable">$text</span><span class="whitespace"> </span><span class="op">as</span><span class="whitespace"> </span><span class="type-name">xs:string</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">{</span><span class="whitespace">&#xD;
    </span><span class="function">fn:string-join</span><span class="parenthesis">(</span><span class="whitespace">&#xD;
        </span><span class="higher">for</span><span class="whitespace"> </span><span class="variable">$tok</span><span class="whitespace"> </span><span class="op">in</span><span class="whitespace"> </span><span class="function">fn:tokenize</span><span class="parenthesis">(</span><span class="variable">$text</span><span class="op">,</span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="open"></span><span class="parenthesis">)</span><span class="whitespace"> &#xD;
        </span><span class="op">return</span><span class="whitespace"> &#xD;
            </span><span class="function">fn:concat</span><span class="parenthesis">(</span><span class="whitespace"> &#xD;
                </span><span class="function">fn:upper-case</span><span class="parenthesis">(</span><span class="function">fn:substring</span><span class="parenthesis">(</span><span class="variable">$tok</span><span class="op">,</span><span class="numeric">1</span><span class="op">,</span><span class="numeric">1</span><span class="parenthesis">)</span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
                </span><span class="function">fn:substring</span><span class="parenthesis">(</span><span class="variable">$tok</span><span class="op">,</span><span class="numeric">2</span><span class="parenthesis">)</span><span class="whitespace">&#xD;
            </span><span class="parenthesis">)</span><span class="op">,</span><span class="whitespace">&#xD;
        </span><span class="op">"</span><span class="literal"> </span><span class="op">"</span><span class="whitespace">&#xD;
    </span><span class="parenthesis">)</span><span class="whitespace">&#xD;
</span><span class="op">}</span></tokens></result></wrap5>