<?xml version="1.0" encoding="UTF-8"?><html xmlns="http://www.w3.org/1999/xhtml" lang="EN" xml:lang="EN">
<head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
<meta name="generator" content="HTML Tidy for Windows (vers 14 February 2006), see www.w3.org" />
<title>XQuery 3.0: An XML Query Language</title>

<style type="text/css" xml:space="preserve">
/**/
/* from xsl:query.xsl (C) */          
code           { font-family: monospace; }

div.constraint,
div.issue,
div.note,
div.notice     { margin-left: 2em; }

div.issue
p.title        { margin-left: -2em; }

ol.enumar      { list-style-type: decimal; }
ol.enumla      { list-style-type: lower-alpha; }
ol.enumlr      { list-style-type: lower-roman; }
ol.enumua      { list-style-type: upper-alpha; }
ol.enumur      { list-style-type: upper-roman; }

li p           { margin-top: 0.3em;
                 margin-bottom: 0.3em; }

sup small      { font-style: italic;
                 color: #8F8F8F;
               }
    
/* from xsl:query.xsl (D) */          
div.exampleInner pre { margin-left: 1em;
                       margin-top: 0em; margin-bottom: 0em}
div.exampleOuter {border: 4px double gray;
                  margin: 0em; padding: 0em}
div.exampleInner { background-color: #d5dee3;
                   border-top-width: 4px;
                   border-top-style: double;
                   border-top-color: #d3d3d3;
                   border-bottom-width: 4px;
                   border-bottom-style: double;
                   border-bottom-color: #d3d3d3;
                   padding: 4px; margin: 0em }
div.exampleWrapper { margin: 4px }
div.exampleHeader { font-weight: bold;
                    margin: 4px}

div.issue { border-bottom-color: black;
            border-bottom-style: solid;
            border-bottom-width: 1pt;
            margin-bottom: 20pt;
}

th.issue-toc-head { border-bottom-color: black;
                    border-bottom-style: solid;
                    border-bottom-width: 1pt;
}

      
/* from xsl-query.xsl (B) */    
table.small                             { font-size: x-small; }
a.judgment:visited, a.judgment:link     { font-family: sans-serif;
                                          color: black; 
                                          text-decoration: none }
a.processing:visited, a.processing:link { color: black; 
                                                text-decoration: none }
a.env:visited, a.env:link               { color: black; 
                                          text-decoration: none }
/**/
</style>

</head>
<h1 xmlns:xs="http://www.w3.org/2001/XMLSchema"><a name="title" id="title"></a>XQuery 3.0: An XML Query
Language</h1><h2 xmlns:xs="http://www.w3.org/2001/XMLSchema">Extracted code samples with syntax-highlighting added by XMLSpectrum.</h2><h3 xmlns:xs="http://www.w3.org/2001/XMLSchema"><a name="w3c-doctype" id="w3c-doctype"></a>W3C Candidate
Recommendation 08 January 2013</h3><p xmlns:xs="http://www.w3.org/2001/XMLSchema">Reproduced from the W3C documentation at: <a href="http://www.w3.org/TR/2013/CR-xquery-30-20130108/">http://www.w3.org/TR/2013/CR-xquery-30-20130108/</a>. <em>See copyright notice on page footer.</em></p><p xmlns:xs="http://www.w3.org/2001/XMLSchema">Syntax-highlighting was done using the standard XSLT 2.0 stylesheets from the <a href="https://github.com/pgfearo/xmlspectrum">XMLSpectrum</a> open source project. The XSLT processor was Saxon-HE from Saxonica Ltd.</p><ol xmlns:xs="http://www.w3.org/2001/XMLSchema"><body><li><p></p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">output</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://www.w3.org/2010/xslt-xquery-serialization</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">output:method</span><span class="whitespace" style="color: #1549b1">   </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">xml</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">output:encoding</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">iso-8859-1</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">output:indent</span><span class="whitespace" style="color: #1549b1">   </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">yes</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">output:parameter-document</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">file:///home/me/serialization-parameters.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>An implementation can raise a dynamic error for a QueryBody
statically only if the query can never execute without raising that
error, as in the following example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">error</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example contains a type error, which can be
reported statically even if the implementation can not prove that
the expression will actually be evaluated.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">empty</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$arg</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">cat</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1">
  </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If more than one operand of an expression raises an error, the
implementation may choose which error is raised by the expression.
For example, in this expression:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">div</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">xs:decimal</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$z</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A dynamic error can also be raised explicitly by calling the
fn:error function, which always raises
a dynamic error and never returns a value. This
function is defined in [XQuery and
XPath Functions and Operators 3.0]. For example, the following
function call raises a dynamic error, providing a QName that
identifies the error, a descriptive string, and a diagnostic value
(assuming that the prefix app is bound to a namespace
containing application-defined error codes):</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">fn:error</span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">xs:QName</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">app:err057</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Unexpected value</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:string</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$v</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If an implementation can find (for example, by using an index)
that at least one item returned by $expr1 in the
following example has the value 47, it is allowed to
return true as the result of the some
expression, without searching for another item returned by
$expr1 that would raise an error if it were
evaluated.</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">some</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">47</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In the following example, if an implementation can find (for
example, by using an index) the product element-nodes
that have an id child with the value 47,
it is allowed to return these nodes as the result of the path expression,
without searching for another product node that would
raise an error because it has an id child whose value
is not an integer.</p><div class="exampleInner"><pre xml:space="preserve"><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">product</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">id</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">47</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Conditional and typeswitch expressions must not raise a dynamic
error in respect of subexpressions occurring in a branch that is
not selected, and must not return the value delivered by a branch
unless that branch is selected. Thus, the following example must
not raise a dynamic error if the document abc.xml does
not exist:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">doc-available</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">'</span><span class="literal" style="color: #dd1144">abc.xml</span><span class="op" style="color: #1549b1">'</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">'</span><span class="literal" style="color: #dd1144">abc.xml</span><span class="op" style="color: #1549b1">'</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The expression in the following example cannot raise a casting
error if it is evaluated exactly as written (i.e., left to right).
Since neither predicate depends on the context position, an
implementation might choose to reorder the predicates to achieve
better performance (for example, by taking advantage of an index).
This reordering could cause the expression to raise an error.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="variable" style="color: #333333">$N</span><span class="filter" style="color: #445588">[</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">castable as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:date</span><span class="filter" style="color: #445588">]</span><span class="filter" style="color: #445588">[</span><span class="function" style="color: #6876FF">xs:date</span><span class="parenthesis" style="color: #445588">(</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">x</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">gt</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">xs:date</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">2000-01-01</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>To avoid unexpected errors caused by expression rewrite, tests
that are designed to prevent dynamic errors should be expressed
using conditional or
typeswitch expressions. For example, the above
expression can be written as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="variable" style="color: #333333">$N</span><span class="filter" style="color: #445588">[</span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">castable as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:date</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">xs:date</span><span class="parenthesis" style="color: #445588">(</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">x</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">gt</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">xs:date</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">2000-01-01</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">false</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>AnnotationsA is</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">%</span><span class="qname" style="color: #990000">local:inline</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>AnnotationsA is</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">%</span><span class="qname" style="color: #990000">local:deterministic</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>AnnotationsB is</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">%</span><span class="qname" style="color: #990000">local:nondeterministic</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>AnnotationsA contains</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">%</span><span class="qname" style="color: #990000">local:nondeterministic</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following is an example of a comment:</p><div class="exampleInner"><pre xml:space="preserve"><span class="comment" style="color: #804080">(: Houston, we have a problem :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>For instance, consider the following query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:filter</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type" style="color: #804080">item</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type" style="color: #804080">function</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">xs:string</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:boolean</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type" style="color: #804080">item</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="quantifier" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
  </span><span class="variable" style="color: #333333">$s</span><span class="filter" style="color: #445588">[</span><span class="function" style="color: #6876FF">$p</span><span class="parenthesis" style="color: #445588">(</span><span class="context" style="color: #008080">.</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$f</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="type" style="color: #804080">function</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">starts-with</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">E</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
  </span><span class="function" style="color: #6876FF">local:filter</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ethel</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Enid</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Gertrude</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$f</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
      
</span></pre></div></li><li><p>This example creates a function that takes no arguments and
returns a sequence of the first 6 primes:</p><div class="exampleInner"><pre xml:space="preserve"><span class="type" style="color: #804080">function</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="quantifier" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">5</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">7</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">11</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">13</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example creates a function that takes two xs:double
arguments and returns their product:</p><div class="exampleInner"><pre xml:space="preserve"><span class="type" style="color: #804080">function</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:double</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:double</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:double</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example creates a function that returns its item()*
argument:</p><div class="exampleInner"><pre xml:space="preserve"><span class="type" style="color: #804080">function</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example creates a sequence of functions each of which
returns a different node from the default collection.</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">collection</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="parenthesis" style="color: #445588">(</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="context" style="color: #008080">.</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="type" style="color: #804080">function</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Given a sequence of products in a variable, return only those
products whose price is greater than 100.</p><div class="exampleInner"><pre xml:space="preserve"><span class="variable" style="color: #333333">$products</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">gt</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">100</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>List all the integers from 1 to 100 that are divisible by 5.
(See 3.4.1 Constructing
Sequences for an explanation of the to
operator.)</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">100</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="context" style="color: #008080">.</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">mod</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">5</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of the following expression is the integer 25:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">21</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">29</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">5</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example returns the fifth through ninth items in
the sequence bound to variable $orders.</p><div class="exampleInner"><pre xml:space="preserve"><span class="variable" style="color: #333333">$orders</span><span class="filter" style="color: #445588">[</span><span class="function" style="color: #6876FF">fn:position</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">5</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">9</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates the use of a filter expression
as a step in a path expression.
It returns the last chapter or appendix within the book bound to
variable $book:</p><div class="exampleInner"><pre xml:space="preserve"><span class="variable" style="color: #333333">$book</span><span class="step" style="color: #1549b1">/</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">chapter</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">|</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">appendix</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="function" style="color: #6876FF">fn:last</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example invokes the function contained in $f, passing the
arguments 2 and 3:</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">$f</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example fetches the second item from sequence $f, treats it
as a function and invokes it, passing an xs:string
argument:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="variable" style="color: #333333">$f</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">2</span><span class="filter" style="color: #445588">]</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Hi there</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example invokes the function $f passing no arguments, and
filters the result with a positional predicate:</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">$f</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">2</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The semantics of the path operator can also be defined using the
simple mapping operator as follows (forming the union with an empty
sequence ($R | ()) has the effect of eliminating
duplicates and sorting nodes into document order):</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">E1</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">E2</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">::</span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$R</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">E1</span><span class="op" style="color: #1549b1">!</span><span class="qname" style="color: #990000">E2</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
    </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="higher" style="color: #1549b1">every</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$r</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$R</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$r</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">instance of</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$R</span><span class="op" style="color: #1549b1">|</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="higher" style="color: #1549b1">every</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$r</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$R</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">not</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$r</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">instance of</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$R</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">error</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example selects the second chapter element
that is a child of the context node:</p><div class="exampleInner"><pre xml:space="preserve"><span class="axis" style="color: #008080">child::</span><span class="qname" style="color: #990000">chapter</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">2</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example selects all the descendants of the context node
that are elements named "toy" and whose
color attribute has the value "red":</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">descendant::</span><span class="qname" style="color: #990000">toy</span><span class="filter" style="color: #445588">[</span><span class="axis" style="color: #008080">attribute::</span><span class="qname" style="color: #990000">color</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">red</span><span class="op" style="color: #1549b1">"</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example selects all the employee children of
the context node that have both a secretary child
element and an assistant child element:</p><div class="exampleInner"><pre xml:space="preserve"><span class="axis" style="color: #008080">child::</span><span class="qname" style="color: #990000">employee</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">secretary</span><span class="filter" style="color: #445588">]</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">assistant</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this expression is a sequence of five
integers:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This expression combines four sequences of length one, two,
zero, and two, respectively, into a single sequence of length five.
The result of this expression is the sequence 10, 1, 2, 3,
4.</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this expression is a sequence containing all
salary children of the context node followed by all
bonus children.</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">salary</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">bonus</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Assuming that $price is bound to the value
10.50, the result of this expression is the sequence
10.50, 10.50.</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$price</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$price</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example uses a range expression as one operand in
constructing a sequence. It evaluates to the sequence 10, 1,
2, 3, 4.</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example constructs a sequence of length one containing the
single integer 10.</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">10</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this example is a sequence of length zero.</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">15</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example uses the fn:reverse function to
construct a sequence of six integers in decreasing order. It
evaluates to the sequence 15, 14, 13, 12, 11, 10.</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">fn:reverse</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">10</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">15</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If an AdditiveExpr contains more than two MultiplicativeExprs,
they are grouped from left to right. So, for instance,</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">A</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">B</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">C</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">D</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>is equivalent to</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">A</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">B</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">C</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">D</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The first expression below returns the xs:decimal
value -1.5, and the second expression returns the
xs:integer value -1:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">-3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">div</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="numeric" style="color: #008080">-3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">idiv</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Subtraction of two date values results in a value of type
xs:dayTimeDuration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="variable" style="color: #333333">$emp</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">hiredate</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$emp</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">birthdate</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example illustrates the difference between a subtraction
operator and a hyphen:</p><div class="exampleInner"><pre xml:space="preserve"><span class="variable" style="color: #333333">$unit-price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$unit-discount</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Unary operators have higher precedence than binary operators,
subject of course to the use of parentheses. Therefore, the
following two examples have different meanings:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">-</span><span class="variable" style="color: #333333">$bellcost</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$whistlecost</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">-</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$bellcost</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$whistlecost</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>String concatenation expressions allow the string
representations of values to be concatenated. In XQuery 3.0,
$a || $b is equivalent to fn:concat($a,
$b). The following expression evaluates to the string
concatenate:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">con</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">||</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">cat</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">||</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">enate</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparison atomizes the node(s) that are returned
by the expression $book/author. The comparison is true
only if the result of atomization is the value "Kennedy" as an
instance of xs:string or
xs:untypedAtomic. If the result of atomization is an
empty sequence, the result of the comparison is an empty sequence.
If the result of atomization is a sequence containing more than one
value, a type error
is raised [err:XPTY0004].</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="variable" style="color: #333333">$book1</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">author</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Kennedy</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following path expression contains a predicate that
selects products whose weight is greater than 100. For any product
that does not have a weight subelement, the value of
the predicate is the empty sequence, and the product is not
selected. This example assumes that weight is a
validated element with a numeric type.</p><div class="exampleInner"><pre xml:space="preserve"><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">product</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">weight</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">gt</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">100</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparisons are true because, in each case, the
two constructed nodes have the same value after atomization, even
though they have different identities and/or names:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">5</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">5</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>

&lt;a&gt;5&lt;/a&gt; eq &lt;a&gt;5&lt;/a&gt;
</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">5</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">b</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">5</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">b</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparison is true if my:hatsize and
my:shoesize are both user-defined types that are
derived by restriction from a primitive numeric type:</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">my:hatsize</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">5</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">my:shoesize</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">5</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparison is true. The eq operator
compares two QNames by performing codepoint-comparisons of their
namespace URIs and their local names, ignoring their namespace
prefixes.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">fn:QName</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.com/ns1</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">this:color</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:QName</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.com/ns1</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">that:color</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparison is true if the typed value of any author
subelement of $book1 is "Kennedy" as an instance of
xs:string or xs:untypedAtomic:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="variable" style="color: #333333">$book1</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">author</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Kennedy</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example contains three general comparisons. The
value of the first two comparisons is true, and the
value of the third comparison is false. This example
illustrates the fact that general comparisons are not
transitive.</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example contains two general comparisons, both of
which are true. This example illustrates the fact that
the = and != operators are not inverses
of each other.</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">!=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparison is true only if the left and right
sides each evaluate to exactly the same single node:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">books</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">book</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">isbn</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">1558604820</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">is</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">books</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">book</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">call</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">QA76.9 C3845</span><span class="op" style="color: #1549b1">"</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparison is false because each constructed node
has its own identity:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">5</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">is</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">5</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following comparison is true only if the node identified by
the left side occurs before the node identified by the right side
in document order:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">transactions</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">purchase</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">parcel</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">28-451</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">&lt;&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">transactions</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">sale</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">parcel</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">33-870</span><span class="op" style="color: #1549b1">"</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following expressions return true:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>

1 eq 1 and 2 eq 2
</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">or</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following expression may return either false or
raise a dynamic
error:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">idiv</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following expression may return either true or
raise a dynamic
error:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">or</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">idiv</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following expression must raise a dynamic error:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">idiv</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>An element constructor creates an element node. [Definition: A direct element
constructor is a form of element constructor in which the name
of the constructed element is a constant.] Direct element
constructors are based on standard XML notation. For example, the
following expression is a direct element constructor that creates a
book element containing an attribute and some nested
elements:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">book</span><span class="atn" style="color: #008080"> isbn</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">isbn-0060229357</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
    </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">title</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Harold and the Purple Crayon</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">title</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
    </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">author</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
        </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">first</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Crockett</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">first</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
        </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">last</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Johnson</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">last</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
    </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">author</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">book</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In a direct element constructor, curly braces { } delimit
enclosed expressions, distinguishing them from literal text.
Enclosed expressions are evaluated and replaced by their value, as
illustrated by the following example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">example</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> Here is a query. </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> $b/title </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> Here is the result of the query. </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">title</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">example</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The above query might generate the following result (whitespace
has been added for readability to this result and other result
examples in this document):</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">example</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> Here is a query. </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> $b/title </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> Here is the result of the query. </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">title</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Harold and the Purple Crayon</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">title</span><span class="z" style="color: #668B8B">&gt;</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">eg</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">example</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">shoe</span><span class="atn" style="color: #008080"> size</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">7</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">shoe</span><span class="atn" style="color: #008080"> size</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">7</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">shoe</span><span class="atn" style="color: #008080"> size</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">chapter</span><span class="atn" style="color: #008080"> ref</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">[</span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">5</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">7</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">9</span><span class="op" style="color: #1549b1">}</span><span class="av" style="color: #804080">]</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">shoe</span><span class="atn" style="color: #008080"> size</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">As big as </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$hat</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">size</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In this element constructor, a namespace declaration attribute
is used to set the default element/type namespace to
http://example.org/animals:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">cat</span><span class="atn" style="color: #008080"> xmlns </span><span class="atneq" style="color: #668B8B">= </span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://example.org/animals</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">breed</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Persian</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">breed</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">cat</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In this element constructor, namespace declaration attributes
are used to bind the namespace prefixes metric and
english:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">box</span><span class="atn" style="color: #008080"> xmlns:metric </span><span class="atneq" style="color: #668B8B">= </span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://example.org/metric/units</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080">
     xmlns:english </span><span class="atneq" style="color: #668B8B">= </span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://example.org/english/units</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">height</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">metric:meters</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">3</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">metric:meters</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">height</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">width</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">english:feet</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">6</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">english:feet</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">width</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">depth</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">english:inches</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">18</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">english:inches</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">depth</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">box</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">c</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"></span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"></span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">c</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">b</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">2</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">3</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">b</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">fact</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">I saw 8 cats.</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">fact</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">fact</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">I saw </span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">5</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"> cats.</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">fact</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">fact</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">I saw </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">howmany</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">5</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">howmany</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> cats.</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">fact</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In a direct element constructor, whitespace characters may
appear in the content of the constructed element. In some cases,
enclosed expressions and/or nested elements may be separated only
by whitespace characters. For example, in the expression below, the
end-tag &lt;/title&gt; and the start-tag
&lt;author&gt; are separated by a newline character
and four space characters:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">book</span><span class="atn" style="color: #008080"> isbn</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">isbn-0060229357</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
    </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">title</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Harold and the Purple Crayon</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">title</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
    </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">author</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
        </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">first</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Crockett</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">first</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
        </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">last</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Johnson</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">last</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
    </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">author</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">book</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">cat</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">breed</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$b</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">breed</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">color</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$c</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">color</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">cat</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">  </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">abc</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">  </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> z </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">abc</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">&amp;#x20;</span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">abc</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">  </span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a direct processing
instruction constructor:</p><div class="exampleInner"><pre xml:space="preserve"><span class="z" style="color: #668B8B">&lt;?</span><span class="pi" style="color: #008080">format role="output" </span><span class="z" style="color: #668B8B">?&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a direct comment
constructor:</p><div class="exampleInner"><pre xml:space="preserve"><span class="z" style="color: #668B8B">&lt;!--</span><span class="cm" style="color: #804080"> Tags are ignored in the following section </span><span class="z" style="color: #668B8B">--&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates the use of computed element
and attribute constructors in a simple case where the names of the
constructed nodes are constants. This example generates exactly the
same result as the first example in 3.9.1 Direct Element
Constructors:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">book</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">attribute</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">isbn</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">isbn-0060229357</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">title</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Harold and the Purple Crayon</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">author</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
      </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">first</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Crockett</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
      </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">last</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Johnson</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A computed element constructor might be used to make a modified
copy of an existing element. For example, if the variable
$e is bound to an element with numeric content, the following constructor
might be used to create a new element with the same name and
attributes as $e and with numeric content equal to
twice the value of $e:</p><div class="exampleInner"><pre xml:space="preserve"><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:node-name</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="op" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>One important purpose of computed constructors is to allow the
name of a node to be computed. We will illustrate this feature by
an expression that translates the name of an element from one
language to another. Suppose that the variable $dict
is bound to a dictionary element containing a sequence
of entry elements, each of which encodes translations
for a specific word. Here is an example entry that encodes the
German and Italian variants of the word "address":</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">entry</span><span class="atn" style="color: #008080"> word</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">address</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">variant</span><span class="atn" style="color: #008080"> xml:lang</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">de</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Adresse</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">variant</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">variant</span><span class="atn" style="color: #008080"> xml:lang</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">it</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">indirizzo</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">variant</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">entry</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Suppose further that the variable $e is bound to
the following element:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">address</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">123 Roosevelt Ave. Flushing, NY 11368</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">address</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Then the following expression generates a new element in which
the name of $e has been translated into Italian and
the content of $e (including its attributes, if any)
has been preserved. The first enclosed expression after the
element keyword generates the name of the element, and
the second enclosed expression generates the content and
attributes:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">  </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$dict</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">entry</span><span class="filter" style="color: #445588">[</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">word</span><span class="op" style="color: #1549b1">=</span><span class="function" style="color: #6876FF">name</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">]</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">variant</span><span class="filter" style="color: #445588">[</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">xml:lang</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">it</span><span class="op" style="color: #1549b1">"</span><span class="filter" style="color: #445588">]</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="op" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this expression is as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">indirizzo</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">123 Roosevelt Ave. Flushing, NY 11368</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">indirizzo</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="axis" style="color: #008080">attribute</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">size</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">attribute</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$sex</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">M</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">husband</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">wife</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Hello</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">b</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Goodbye</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">b</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A document node constructor is useful when the result of a query
is to be a document in its own right. The following example
illustrates a query that returns an XML document containing a root
element named author-list:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">document</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">author-list</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
         </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">bib.xml</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">bib</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">book</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">author</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
      </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">author-list</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a text node constructor:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">text</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Hello</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a computed processing
instruction constructor:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$target</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">audio-output</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$content</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">beep</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">processing-instruction</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$target</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$content</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The processing instruction node constructed by this example
might be serialized as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="z" style="color: #668B8B">&lt;?</span><span class="pi" style="color: #008080">audio-output beep</span><span class="z" style="color: #668B8B">?&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a computed comment
constructor:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$homebase</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Houston</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">comment</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:concat</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$homebase</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">, we have a problem.</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The comment node constructed by this example might be serialized
as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="z" style="color: #668B8B">&lt;!--</span><span class="cm" style="color: #804080">Houston, we have a problem.</span><span class="z" style="color: #668B8B">--&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A computed namespace constructor with a prefix:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://a.example.com</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A computed namespace constructor with a prefix expression:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">a</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://a.example.com</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A computed namespace constructor with an empty prefix:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144"></span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://a.example.com</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Computed namespace constructors are generally used to add to the
in-scope namespaces of elements created with element
constructors:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">age</span><span class="atn" style="color: #008080"> xmlns:xsi</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://www.w3.org/2001/XMLSchema-instance</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
  </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">xs</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://www.w3.org/2001/XMLSchema</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
  </span><span class="axis" style="color: #008080">attribute</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">xsi:type</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">xs:integer</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
  </span><span class="numeric" style="color: #008080">23</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Computed namespace constructors have no effect on the statically
known namespaces. If the prefix a is not already defined in the
statically known namespaces, the following expression results in a
static error [err:XPST0081].</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">a:form</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
 </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
  </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://a.example.com</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
 </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">a:form</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following query serves as an example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">p</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.com/ns/p</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">q</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.com/ns/q</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">f</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.com/ns/f</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">p:a</span><span class="atn" style="color: #008080"> q:b</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">f:func</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> xmlns:r</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://example.com/ns/r</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Note that the following constructed element, if nested within a
validate expression, cannot be validated:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">p</span><span class="atn" style="color: #008080"> xsi:type</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">xs:integer</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">3</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The constructed element will have namespace bindings for the
prefixes xsi (because it is used in a name) and
xml (because it is defined for every constructed
element node). During validation of the constructed element, the
validator will be unable to interpret the namespace prefix
xs because it is has no namespace binding. Validation
of this constructed element could be made possible by providing a
namespace declaration attribute, as
in the following example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">p</span><span class="atn" style="color: #008080"> xmlns:xs</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://www.w3.org/2001/XMLSchema</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080">
   xsi:type</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">xs:integer</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">3</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">p</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The semantics of FLWOR expressions are based on a concept called
a tuple stream. [Definition: A
tuple stream is an ordered sequence of zero or more
tuples.] [Definition: A tuple is a set of zero or
more named variables, each of which is bound to a value that is an
XDM
instance.] Each tuple stream is homogeneous in the sense that
all its tuples contain variables with the same names and the same
static types. The
following example illustrates a tuple stream consisting of four
tuples, each containing three variables named $x,
$y, and $z:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1003</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Fred</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$z</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">21</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1017</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Mary</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$z</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">35</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1020</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Bill</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$z</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">18</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1024</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">John</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$z</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">29</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">age</span><span class="z" style="color: #668B8B">&gt;</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The scope of a bound variable includes all subexpressions of the
containing FLWOR that appear after the variable binding. The scope
does not include the expression to which the variable is bound. The
following code fragment, containing two let clauses,
illustrates how variable bindings may reference variables that were
bound in earlier clauses, or in earlier bindings in the same
clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">47</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">f</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$z</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">g</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>[Definition: A variable binding may be
accompanied by a type declaration, which consists of the
keyword as followed by the static type of the
variable, declared using the syntax in 2.5.4 SequenceType Syntax.] At
run time, if the value bound to the variable does not match the
declared type according to the rules for SequenceType matching, a type error is raised
[err:XPTY0004]. For
example, the following let clause raises a type error because the
variable $salary has a type declaration that is not
satisfied by the value that is bound to it:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$salary</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:decimal</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1">  </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">cat</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The clause</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr2</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>is semantically equivalent to:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr1</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr2</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Initial clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">100</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">200</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">300</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>or (equivalently):</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="whitespace" style="color: #1549b1">allowing empty in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">100</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">200</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">300</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">100</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">200</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">300</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Initial clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Initial clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="whitespace" style="color: #1549b1">allowing empty in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Initial clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">100</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">200</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">300</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">100</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">200</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">300</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Initial clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="whitespace" style="color: #1549b1">allowing empty at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Input tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Intermediate for clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream (assuming ordering mode is ordered):</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example shows how the previous example would have been
affected by a positional variable (assuming the
same input tuple stream):</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream (assuming ordering mode is ordered):</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example shows how the previous example would have been
affected by allowing empty. Note that allowing
empty causes the input tuple ($x = 4) to be
represented in the output tuple stream, even though the binding sequence
for $y contains no items for this input tuple. This
example illustrates that allowing empty in a
for clause serves a purpose similar to that of an
"outer join" in a relational database query. (Assume the same input
tuple stream as in the previous example.)</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="whitespace" style="color: #1549b1">allowing empty at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream (assuming ordering mode is ordered):</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example shows how a for clause that binds two
variables is semantically equivalent to two for
clauses that bind one variable each. We assume that this
for clause occurs at the beginning of a FLWOR
expression. It is equivalent to an initial single-variable
for clause that provides an input tuple stream to an
intermediate single-variable for clause.</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">to</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream (assuming ordering mode is ordered):</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If a let clause contains multiple variables, it is
semantically equivalent to multiple let clauses, each
containing a single variable. For example, the clause</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr2</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>is semantically equivalent to the following sequence of
clauses:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr1</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr2</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following code fragment illustrates how a for
clause and a let clause can be used together. The
for clause produces an initial tuple stream containing
a binding for variable $d to each department number
found in a given input document. The let clause adds
an additional binding to each tuple, binding variable
$e to a sequence of employees whose department number
matches the value of $d in that tuple.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">depts.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">depts</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">deptno</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">emps.xml</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">emps</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">emp</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">deptno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following is an example of a window clause that
binds nine variables to the roles listed above. In this example,
the variables are named $w, $s,
$spos, $sprev, $snext,
$e, $epos, $eprev, and
$enext respectively. A window clause
always binds the window variable, but typically binds only a subset
of the other variables.</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$spos</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">previous</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sprev</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">next</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$snext</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">end</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1">
</span><span class="variable" style="color: #333333">$epos</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">previous</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$eprev</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">next</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$enext</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In the above example, the WindowStartCondition and
WindowEndCondition
are both true , which causes each item in
the binding
sequence to be in a separate window. Typically, the WindowStartCondition and
WindowEndCondition
are expressed in terms of bound variables. For example, the
following WindowStartCondition might
be used to start a new window for every item in the binding sequence
that is larger than both the previous item and the following
item:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">previous</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sprev</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">next</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$snext</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sprev</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$snext</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show non-overlapping windows of three items.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="whitespace" style="color: #1549b1">only end</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2 4 6</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">8 10 12</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show averages of non-overlapping three-item windows.</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="whitespace" style="color: #1549b1">only end</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">avg</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$w</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show first and last items in each window of three items.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="whitespace" style="color: #1549b1">only end</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$last</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$last</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2 6</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">8 12</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show non-overlapping windows of up to three items (illustrates
end clause without the only keyword).</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">end</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2 4 6</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">8 10 12</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">14</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show non-overlapping windows of up to three items (illustrates
use of start without explicit end).</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">mod</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2 4 6</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">8 10 12</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">14</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show non-overlapping sequences starting with a number divisible
by 3.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">mod</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">6 8 10</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">12 14</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show windows of three items.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for sliding window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="whitespace" style="color: #1549b1">only end</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2 4 6</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">4 6 8</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">6 8 10</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">8 10 12</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">10 12 14</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show moving averages of three items.</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">for sliding window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="whitespace" style="color: #1549b1">only end</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">avg</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$w</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Show overlapping windows of up to three items (illustrates
end clause without the only keyword).</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for sliding window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">6</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">8</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">12</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">14</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:true</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">end</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">-</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Result of the above query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2 4 6</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">4 6 8</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">6 8 10</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">8 10 12</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">10 12 14</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">12 14</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">14</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">window</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a window clause
that is the initial clause in a FLWOR expression. The example is
based on input data that consists of a sequence of closing stock
prices for a specific company. For this example we assume the
following input data (assume that the price elements
have a validated type of xs:decimal):</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">stock</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-01</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">105</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-02</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-03</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">102</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-04</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">103</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-05</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">102</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-06</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">104</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">stock</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A user wishes to find "run-ups," which are defined as sequences
of dates that begin with a "low" and end with a "high" price (that
is, the stock price begins to rise on the first day of the run-up,
and continues to rise or remain even through the last day of the
run-up.) The following query uses a tumbling window to find run-ups
in the input data:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">closing</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">next</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$second</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$second</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">end</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$last</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">next</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$beyond</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$last</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$beyond</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$first</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">date</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$first</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$last</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">date</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$last</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>For our sample input data, this tumbling window
clause generates a tuple stream consisting of two tuples, each
representing a window and containing five bound variables named
$w, $first, $second,
$last, and $beyond. The
return clause is evaluated for each of these tuples,
generating the following query result:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-02</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-04</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">103</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-05</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">102</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-06</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">104</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a window clause
that is an intermediate clause in a FLWOR expression. In this
example, the input data contains closing stock prices for several
different companies, each identified by a three-letter symbol. We
assume the following input data (again assuming that the type of
the price element is xs:decimal):</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">stocks</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">ABC</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-01</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">105</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">DEF</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-01</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">057</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">ABC</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-02</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">DEF</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-02</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">054</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">ABC</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-03</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">102</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">DEF</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-03</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">056</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">ABC</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-04</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">103</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">DEF</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-04</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">052</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">ABC</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-05</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">DEF</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-05</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">055</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">ABC</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-06</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">104</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">DEF</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">symbol</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-06</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">059</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">closing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">stocks</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>As in the previous example, we want to find "run-ups," which are
defined as sequences of dates that begin with a "low" and end with
a "high" price for a specific company. In this example, however,
the input data consists of stock prices for multiple companies.
Therefore it is necessary to isolate the stock prices of each
company before forming windows. This can be accomplished by an
initial for and let clause, followed by a
window clause, as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$symbol</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:distinct-values</span><span class="parenthesis" style="color: #445588">(</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">symbol</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$closings</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">closing</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">symbol</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$symbol</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">for tumbling window</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$w</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$closings</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">start</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">next</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$second</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$first</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$second</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">end</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$last</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">next</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$beyond</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">when</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$last</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$beyond</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="atn" style="color: #008080"> symbol</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$symbol</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$first</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">date</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$first</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$last</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">date</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:data</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$last</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In the above example, the for and let
clauses could be rewritten as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$closings</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">closing</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$symbol</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$closings</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">symbol</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$symbol</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The window clause operates on this initial tuple
stream, generating two windows for the first tuple and two windows
for the second tuple. The result is a tuple stream consisting of
four tuples, each with the following bound variables:
$symbol, $closings, $w,
$first, $second, $last, and
$beyond. The return clause is then
evaluated for each of these tuples, generating the following query
result:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="atn" style="color: #008080"> symbol</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">ABC</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-02</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-04</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">103</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="atn" style="color: #008080"> symbol</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">ABC</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-05</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-06</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">104</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="atn" style="color: #008080"> symbol</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">DEF</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-02</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">054</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-03</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">056</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">run-up</span><span class="atn" style="color: #008080"> symbol</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">DEF</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-04</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">052</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">start-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2008-01-06</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">059</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">end-price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">run-up</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Input tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">5</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">11</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">91</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">42</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">17</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">30</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">85</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">63</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>where clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">91</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">42</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">85</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">63</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following query illustrates how a where clause
might be used with a positional variable to perform
sampling on an input sequence. The query returns one value out of
each one hundred input values.</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$inputvalues</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">mod</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">100</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Input tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Bob</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">21</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Carol</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">19</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ted</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">20</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Alice</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">22</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>count clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">count</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$counter</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Bob</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">21</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$counter</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Carol</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">19</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$counter</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ted</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">20</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$counter</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$name</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Alice</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$age</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">22</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$counter</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example illustrates how a counter might be used to filter
the result of a query. The query ranks products in order by
decreasing sales, and returns the three products with the highest
sales. Assume that the variable $products is bound to
a sequence of product elements, each of which has
name and sales child-elements.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$products</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="op" style="color: #1549b1">sales</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">descending</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">count</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$rank</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$rank</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">product</span><span class="atn" style="color: #008080"> rank</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$rank</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">name</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">sales</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this query has the following structure:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">product</span><span class="atn" style="color: #008080"> rank</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">1</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">name</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Toaster</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">name</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">968</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">product</span><span class="atn" style="color: #008080"> rank</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">2</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">name</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Blender</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">name</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">520</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">product</span><span class="atn" style="color: #008080"> rank</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">3</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">name</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Can Opener</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">name</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">475</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A group by clause contains one or more grouping specifications, as shown
in the grammar. [Definition:
Each grouping specification specifies one grouping variable, which
refers to variable bindings in the pre-grouping tuples. The values
of the grouping variables are used to assign pre-grouping tuples to
groups.] Each grouping specification may optionally provide an
expression to which its grouping variable is bound. If no
expression is provided, the grouping variable name must be equal
(by the eq operator on expanded QNames) to the name of a variable
in the input tuple stream, and it refers to that variable;
otherwise a static
error is raised [err:XQST0094]. For each grouping specification
that contains a binding expression, a let binding is
created in the pre-grouping tuples, and the grouping variable
refers to that let binding. For example, the
clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">collation</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Spanish</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>is semantically equivalent to the following sequence of
clauses:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr1</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$expr2</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$g3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">collation</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Spanish</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This behavior may be surprising to SQL programmers, since SQL
reduces the equivalent of a non-grouping variable to one
representative value. Consider the following query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">64000</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">customer</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">salary</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">department</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">department</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$d</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   Number of employees earning more than $</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$x</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"> is </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">count</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$c</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">department</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If there are three qualifying customers in the sales department
this evaluates to:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">department</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">sales</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  Number of employees earning more than $64000 64000 64000 is 3
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">department</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In XQuery, each group is a sequence of items that match the
group by criteria—in a tree-structured language like XQuery, this
is convenient, because further structures can be built based on the
items in this sequence. Because there are three items in the group,
$x evaluates to a sequence of three items. To reduce
this to one item, use fn:distinct-values():</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">64000</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">customer</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">department</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">salary</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
 </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">department</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$d</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
  Number of employees earning more than $</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">distinct-values</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"> is </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">count</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$c</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
 </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">department</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Input tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">S101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$itemno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P78395</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">S102</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$itemno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P94738</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">S101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$itemno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P41653</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">S102</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$itemno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P70421</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>group by clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">S101</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$itemno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P78395</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P41653</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">))
($storeno = S102, $itemno = (</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P94738</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">, </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P70421</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">))
</span></pre></div></li><li><p>This example and the ones that follow are based on two separate
sequences of elements, named $sales and
$products. We assume that the variable
$sales is bound to a sequence of elements with the
following structure:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">S101</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">storeno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P78395</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">qty</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">125</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">qty</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">sales</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>We also assume that the variable $products is bound
to a sequence of elements with the following structure:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">P78395</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">itemno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">25.00</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">price</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Men's Wear</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">category</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The simplest kind of grouping query has a single grouping
variable. The query in this example finds the total quantity of
items sold by each store:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sales</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">storeno</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">store</span><span class="atn" style="color: #008080"> number</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$storeno</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> total-qty</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">sum</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">qty</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this query is a sequence of elements with the
following structure:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">store</span><span class="atn" style="color: #008080"> number</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S101</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> total-qty</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">1550</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> </span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">store</span><span class="atn" style="color: #008080"> number</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S102</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> total-qty</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">2125</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> </span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In a more realistic example, a user might be interested in the
total revenue generated by each store for each product category.
Revenue depends on both the quantity sold of various items and the
price of each item. The following query joins the two input
sequences and groups the resulting tuples by two grouping
variables:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sales</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$products</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">itemno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">itemno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$revenue</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">qty</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">storeno</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> 
    </span><span class="variable" style="color: #333333">$category</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">category</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
    </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">summary</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$storeno</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080">
              category</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$category</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080">
              revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">sum</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$revenue</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this query is a sequence of elements with the
following structure:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">summary</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S101</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> category</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Men's Wear</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">10185</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">summary</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S101</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> category</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Stationery</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">4520</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">summary</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S102</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> category</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Men's Wear</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">9750</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">summary</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S102</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> category</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Appliances</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">22650</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">summary</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S102</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> category</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Jewelry</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">30750</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of the previous example was a "flat" list of
elements. A user might prefer the query result to be presented in
the form of a hierarchical report, grouped primarily by store (in
order by store number) and secondarily by product category. Within
each store, the user might want to see only those product
categories whose total revenue exceeds $10,000, presented in
descending order by their total revenue. This report is generated
by the following query:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s1</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sales</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s1</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">storeno</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$storeno</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
  </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">store</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$storeno</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
    </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
         </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$products</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">itemno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s2</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">itemno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
     </span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$category</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">category</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
         </span><span class="variable" style="color: #333333">$revenue</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s2</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">qty</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
     </span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$category</span><span class="whitespace" style="color: #1549b1">
     </span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$group-revenue</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">sum</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$revenue</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$group-revenue</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10000</span><span class="whitespace" style="color: #1549b1">
     </span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$group-revenue</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">descending</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$category</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$group-revenue</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
  </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">store</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of this example query has the following
structure:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">store</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S101</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Men's Wear</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">10185</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">store</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">store</span><span class="atn" style="color: #008080"> storeno</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">S102</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Jewelry</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">30750</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Appliances</span><span class="z" style="color: #668B8B">"</span><span class="atn" style="color: #008080"> revenue</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">22650</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">/&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">store</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In each post-grouping tuple, all variables except for the
grouping variable are bound to sequences of items derived from all
the pre-grouping tuples from which the group was formed. For
instance, in the following query, $high-price is bound
to a sequence of items in the post-grouping tuple.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$high-price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1000</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$products</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$high-price</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$category</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">category</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$category</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$category</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:count</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$p</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"> products have price greater than </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$high-price</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">.
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">category</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If three products in the "Men's Wear" category have prices
greater than 1000, the result of this query might look (in part)
like this:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Men's Wear</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   3 products have price greater than 1000 1000 1000.
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">category</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The repetition of "1000" in this query result is due to the fact
that $high-price is not a grouping variable. One way to
avoid this repetition is to move the binding of
$high-price to an outer-level FLWOR expression, as
follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$high-price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1000</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$products</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$high-price</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
   </span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$category</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">category</span><span class="whitespace" style="color: #1549b1">
   </span><span class="whitespace" style="color: #1549b1">group by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$category</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$category</span><span class="op" style="color: #1549b1">}</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
         </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:count</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$p</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"> products have price greater than </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$high-price</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">.
      </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">category</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The result of the revised query might contain the following
element:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">category</span><span class="atn" style="color: #008080"> name</span><span class="atneq" style="color: #668B8B">=</span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">Men's Wear</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   3 products have price greater than 1000.
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">category</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Input tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">PFQ519</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ford</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">  </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">16500</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">HAJ865</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Honda</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">22750</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">NKV473</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ford</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">  </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">21650</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">RCM922</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Dodge</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">11400</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">ZBX240</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ford</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">  </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">16500</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">KLM030</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Dodge</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>order by clause:</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">stable order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
   </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">descending</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">empty</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">least</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Output tuple stream:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">RCM922</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Dodge</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">11400</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">KLM030</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Dodge</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">NKV473</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ford</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">  </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">21650</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">PFQ519</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ford</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">  </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">16500</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">ZBX240</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Ford</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">  </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">16500</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$license</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">HAJ865</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$make</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Honda</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$value</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">22750</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example shows how an order by clause
can be used to sort the result of a query, even if the sort key is
not included in the query result. This query returns employee names
in descending order by salary, without returning the actual
salaries:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$employees</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="op" style="color: #1549b1">salary</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">descending</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">name</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Since the order by clause in a FLWOR expression is
the only facility provided by XQuery for specifying a value
ordering, a FLWOR expression must be used in some queries where
iteration would not otherwise be necessary. For example, a list of
books with price less than 100 might be obtained by a simple
path
expression such as $books/book[price &lt; 100].
But if these books are to be returned in alphabetic order by title,
the query must be expressed as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$books</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">book</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">100</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">title</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a FLWOR expression containing
several clauses. The for clause iterates over all the
departments in an input document named depts.xml,
binding the variable $d to each department in turn.
For each binding of $d, the let clause
binds variable $e to all the employees in the given
department, selected from another input document named
emps.xml (the relationship between employees and
departments is represented by matching their deptno
values). Each tuple in the resulting tuple stream contains a pair
of bindings for $d and $e
($d is bound to a department and $e is
bound to a set of employees in that department). The
where clause filters the tuple stream, retaining only
those tuples that represent departments having at least ten
employees. The order by clause orders the surviving
tuples in descending order by the average salary of the employees
in the department. The return clause constructs a new
big-dept element for each surviving tuple, containing
the department number, headcount, and average salary.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">depts.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">dept</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">emps.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">emp</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">deptno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">deptno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:count</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">10</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:avg</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">salary</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">descending</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">big-dept</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
      </span><span class="variable" style="color: #333333">$d</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">deptno</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">headcount</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:count</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">headcount</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">avgsal</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:avg</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">salary</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">avgsal</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
      </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">big-dept</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The order in which items appear in the result of a FLWOR
expression depends on the ordering of the input tuple stream to the
return clause, which in turn is influenced by
order by clauses and by ordering mode. For example, consider the
following query, which is based on the same two input documents as
the previous example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">depts.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">dept</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">deptno</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">emps.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">emp</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">deptno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">deptno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">assignment</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$d</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">deptno</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">name</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">assignment</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Parentheses are helpful in return clauses that
contain comma operators, since FLWOR expressions have a higher
precedence than the comma operator. For example, the following
query raises an error because after the comma, $j is
no longer within the FLWOR expression, and is an undefined
variable:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">5</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">20</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Parentheses can be used to bring $j into the
return clause of the FLWOR expression, as the
programmer probably intended:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">5</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$j</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">20</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$i</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$j</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The use of an unordered expression is illustrated
by the following example, which joins together two documents named
parts.xml and suppliers.xml. The example
returns the part numbers of red parts, paired with the supplier
numbers of suppliers who supply these parts. If an
unordered expression were not used, the resulting list
of (part number, supplier number) pairs would be required to have
an ordering that is controlled primarily by the document order of
parts.xml and secondarily by the document order of
suppliers.xml. However, this might not be the most
efficient way to process the query if the ordering of the result is
not important. An XQuery implementation might be able to process
the query more efficiently by using an index to find the red parts,
or by using suppliers.xml rather than
parts.xml to control the primary ordering of the
result. The unordered expression gives the query
evaluator freedom to make these kinds of optimizations.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">unordered</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
  </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">parts.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">parts</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">part</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">color</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Red</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="filter" style="color: #445588">]</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
      </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">suppliers.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppliers</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">supplier</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppno</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
    </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">ps</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
       </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">partno</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
    </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">ps</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In this example, the test expression is a comparison
expression:</p><div class="exampleInner"><pre xml:space="preserve"><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$widget1</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">unit-cost</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$widget2</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">unit-cost</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$widget1</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$widget2</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In this example, the test expression tests for the existence of
an attribute named discounted, independently of its
value:</p><div class="exampleInner"><pre xml:space="preserve"><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$part</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">discounted</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$part</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">wholesale</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$part</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">retail</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example shows how a switch expression might be
used:</p><div class="exampleInner"><pre xml:space="preserve"><span class="axis" style="color: #008080">switch</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$animal</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Cow</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Moo</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Cat</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Meow</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Duck</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Quack</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">What's that odd noise?</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
 
</span></pre></div></li><li><p>This expression is true if every part
element has a discounted attribute (regardless of the
values of these attributes):</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">every</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$part</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">parts</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">part</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$part</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">discounted</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This expression is true if at least one
employee element satisfies the given comparison
expression:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">some</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$emp</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">emps</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">employee</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1">
     </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$emp</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">bonus</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0.25</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$emp</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">salary</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In the following examples, each quantified expression evaluates
its test expression over nine tuples of variable bindings, formed
from the Cartesian product of the sequences (1, 2, 3)
and (2, 3, 4). The expression beginning with
some evaluates to true, and the
expression beginning with every evaluates to
false.</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">some</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>

some $x in (1, 2, 3), $y in (2, 3, 4)
satisfies $x + $y = 4
</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">every</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$y</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This quantified expression may either return true
or raise a type
error, since its test expression returns true for
one variable binding and raises a type error for another:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">some</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">cat</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This quantified expression may either return false
or raise a type
error, since its test expression returns false for
one variable binding and raises a type error for another:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">every</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">cat</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This quantified expression contains a type declaration that is not
satisfied by every item in the test expression. If the Static
Typing Feature is implemented, this expression raises a
type error during
the static analysis phase. Otherwise, the
expression may either return true or raise a type error during the
dynamic evaluation phase.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">some</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">cat</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">2</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">4</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A try/catch expression without a CatchErrorList catches any
error:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">try</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">cast as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">catch</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The CatchErrorList in this try/catch expression specifies that
only err:FORG0001 is caught:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">try</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">cast as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">catch</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">err:FORG0001</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The CatchErrorList in this try/catch expression specifies that
errors err:FORG0001 and err:XPTY0004 are
caught:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">try</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">cast as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">catch</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">err:FORG0001</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">|</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">err:XPTY0004</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="numeric" style="color: #008080">0</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This try/catch expression shows how to return information about
the error using implicitly defined error variables. Since the
CatchErrorList is a wildcard, it catches any error:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">try</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="function" style="color: #6876FF">fn:error</span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:QName</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">'</span><span class="literal" style="color: #dd1144">http://www.w3.org/2005/xqt-errors</span><span class="op" style="color: #1549b1">'</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">'</span><span class="literal" style="color: #dd1144">err:FOER0000</span><span class="op" style="color: #1549b1">'</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">catch</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$err:code</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$err:value</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144"> module: </span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$err:module</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">(</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$err:line-number</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">,</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$err:column-number</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">)</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Errors raised by using the result of a try/catch expression are
not caught, since they are outside the scope of the
try expression.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:thrice</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
    </span><span class="numeric" style="color: #008080">3</span><span class="op" style="color: #1549b1">*</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="function" style="color: #6876FF">local:thrice</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">try</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">oops</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">catch</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">3</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example shows how a
typeswitch expression might be used to process an
expression in a way that depends on its dynamic type.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">typeswitch</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$customer</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">billing-address</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">USAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">state</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">CanadaAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">province</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">JapanAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">prefecture</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">unknown</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example shows a union of sequence types in a
single case:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="axis" style="color: #008080">typeswitch</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$customer</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">billing-address</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">USAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
            </span><span class="op" style="color: #1549b1">|</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">AustraliaAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
            </span><span class="op" style="color: #1549b1">|</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">MexicoAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">state</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">CanadaAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">province</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">JapanAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">prefecture</span><span class="whitespace" style="color: #1549b1">
   </span><span class="axis" style="color: #008080">default</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">unknown</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The expression E castable as T returns
true if the result of evaluating E can be
successfully cast into the target type T by using a
cast expression; otherwise it returns
false. If evaluation of E fails with a
dynamic error, the castable expression returns
false. The castable expression can be used as a
predicate to avoid errors at
evaluation time. It can also be used to select an appropriate type
for processing of a given value, as illustrated in the following
example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">castable as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">hatsize</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">cast as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">hatsize</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">castable as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">IQ</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">cast as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">IQ</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">cast as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:string</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>For every generalized atomic type in the
in-scope schema
types (except xs:NOTATION and
xs:anyAtomicType, which are not instantiable), a
constructor function is implicitly defined. In each case,
the name of the constructor function is the same as the name of its
target type (including namespace). The signature of the constructor
function for type T is as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">T</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$arg</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:anyAtomicType</span><span class="quantifier" style="color: #1549b1">?</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">T</span><span class="quantifier" style="color: #1549b1">?</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example is equivalent to ("2000-01-01" cast as
xs:date?).</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">xs:date</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">2000-01-01</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example is equivalent to (($floatvalue * 0.2E-5) cast
as xs:decimal?).</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">xs:decimal</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$floatvalue</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">0.2E-5</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This example returns an xs:dayTimeDuration value
equal to 21 days. It is equivalent to ("P21D" cast as
xs:dayTimeDuration?).</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">xs:dayTimeDuration</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">P21D</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If usa:zipcode is a user-defined atomic type in the
in-scope schema
types, then the following expression is equivalent to the
expression ("12345" cast as usa:zipcode?).</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">usa:zipcode</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">12345</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>By using a cast expression, if the default
element/type namespace is absentDM30.
(See 4.14
Default Namespace Declaration for how to undeclare the
default element/type
namespace).</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">17</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">cast as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">apple</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>By using a constructor function, if the default function
namespace is absentDM30.
(See 4.14
Default Namespace Declaration for how to undeclare the
default
function namespace).</p><div class="exampleInner"><pre xml:space="preserve"><span class="function" style="color: #6876FF">apple</span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">17</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="variable" style="color: #333333">$myaddress</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-op" style="color: #1549b1">treat as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="quantifier" style="color: #1549b1">*</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">USAddress</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A pragma can be used to furnish a hint for how to evaluate the
following expression, without actually changing the result. For
example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">exq</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/XQueryImplementation</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
   </span><span class="parenthesis" style="color: #445588">(</span><span class="axis" style="color: #008080"># exq:use-index</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">#</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
      </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$bib</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">book</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">author</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">name</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">'</span><span class="literal" style="color: #dd1144">Berners-Lee</span><span class="op" style="color: #1549b1">'</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A pragma might contain syntactic constructs that are evaluated
in place of the following expression. In this case, the following
expression itself (if it is present) provides a fallback for use by
implementations that do not recognize the pragma. For example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">exq</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/XQueryImplementation</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
   </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1">
      </span><span class="parenthesis" style="color: #445588">(</span><span class="axis" style="color: #008080"># exq:distinct</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="op" style="color: #1549b1">city</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">by</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">@</span><span class="op" style="color: #1549b1">country</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">#</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
      </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">city</span><span class="filter" style="color: #445588">[</span><span class="function" style="color: #6876FF">not</span><span class="parenthesis" style="color: #445588">(</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">country</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">preceding::</span><span class="qname" style="color: #990000">city</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">country</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">f:show-city</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$x</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following examples illustrate version declarations:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">xquery</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">version</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">1.0</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>

xquery version "1.0";
</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">xquery</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">version</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">3.0</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">encoding</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">utf-8</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following is an example of a module declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">module</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">gis</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/gis-functions</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In the following example, the variable value $a
depend onthe
variable value $b because the evaluation of $a's
initializing expression accesses the value of $b during the
evaluation of local:f().</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:f</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:f</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a boundary-space
declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">boundary-space</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">preserve</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a default collation
declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">collation</span><span class="whitespace" style="color: #1549b1">
  </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/languages/Icelandic</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following is an example of a base URI declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">base-uri</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a construction
declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">construction</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">strip</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates an ordering mode
declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">ordering</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">unordered</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates an empty order
declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="qname" style="color: #990000">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">order</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">empty</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">least</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a copy-namespaces
declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">copy-namespaces</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">preserve</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">no-inherit</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following query formats numbers using two different decimal
format declarations:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">decimal-format</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">local:de</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">decimal-separator</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">,</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">grouping-separator</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">.</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">decimal-format</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">local:en</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">decimal-separator</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">.</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">grouping-separator</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">,</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$numbers</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="numeric" style="color: #008080">1234.567</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">789</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1234567.765</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$numbers</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="whitespace" style="color: #1549b1">
  </span><span class="function" style="color: #6876FF">format-number</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$i</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">#.###,##</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">local:de</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
  </span><span class="function" style="color: #6876FF">format-number</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$i</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">#,###.##</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">local:en</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The output of this query is:</p><div class="exampleInner"><pre xml:space="preserve"><span class="numeric" style="color: #008080">1.234</span><span class="op" style="color: #1549b1">,</span><span class="numeric" style="color: #008080">57</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="numeric" style="color: #008080">234.57</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">789</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">789</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1.234</span><span class="numeric" style="color: #008080">.567</span><span class="op" style="color: #1549b1">,</span><span class="numeric" style="color: #008080">76</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="op" style="color: #1549b1">,</span><span class="numeric" style="color: #008080">234</span><span class="op" style="color: #1549b1">,</span><span class="numeric" style="color: #008080">567.76</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example imports a schema, specifying both its
target namespace and its location, and binding the prefix
soap to the target namespace:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">import schema</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">soap</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://www.w3.org/2003/05/soap-envelope</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://www.w3.org/2003/05/soap-envelope/</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example imports a schema by specifying only its
target namespace, and makes it the default element/type
namespace:</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">import schema</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/abc</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example imports a schema that has no target
namespace, providing a location hint, and sets the default
element/type namespace to "no namespace" so that the definitions in
the imported schema can be referenced:</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">import schema</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144"></span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">at</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/xyz.xsd</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example imports a schema that has no target
namespace and sets the default element/type namespace to "no
namespace". Since no location hint is provided, it is up to the
implementation to find the schema to be imported.</p><div class="exampleInner"><pre xml:space="preserve"><span class="whitespace" style="color: #1549b1">import schema</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144"></span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates a module import:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">import</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">module</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">gis</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/gis-functions</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A module import does not import schema definitions from the
imported module. In the following query, the type geometry:triangle
is not defined, even if it is known in the imported module, so the
variable declaration raises an error [err:XPST0051]:</p><div class="exampleInner"><pre xml:space="preserve"><span class="comment" style="color: #804080">(: Error - geometry:triangle is not defined :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">import</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">module</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">geo</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/geo-functions</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$t</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">geometry:triangle</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">geo:make-triangle</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="variable" style="color: #333333">$t</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Without the type declaration for the variable, the variable
declaration succeeds:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">import</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">module</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">geo</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/geo-functions</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$t</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">geo:make-triangle</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="variable" style="color: #333333">$t</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Importing the schema that defines the type of the variable, the
variable declaration succeeds:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">import schema</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">geometry</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/geo-schema-declarations</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">import</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">module</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">geo</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/geo-functions</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$t</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">geometry:triangle</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">geo:make-triangle</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="variable" style="color: #333333">$t</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following query illustrates a namespace declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">foo</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">foo:bar</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> Lentils </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">foo:bar</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>When element or attribute names are compared, they are
considered identical if the local parts and namespace URIs match on
a codepoint basis. Namespace prefixes need not be identical for two
names to match, as illustrated by the following example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">xx</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">foo:bar</span><span class="atn" style="color: #008080"> xmlns:foo </span><span class="atneq" style="color: #668B8B">= </span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://example.org</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
              </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">foo:bing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> Lentils </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">foo:bing</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
          </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">foo:bar</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">xx:bing</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Although the namespace prefixes xx and
foo differ, both are bound to the namespace URI
http://example.org. Since xx:bing and
foo:bing have the same local name and the same
namespace URI, they match. The output of the above query is as
follows.</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">foo:bing</span><span class="atn" style="color: #008080"> xmlns:foo </span><span class="atneq" style="color: #668B8B">= </span><span class="z" style="color: #668B8B">"</span><span class="av" style="color: #804080">http://example.org</span><span class="z" style="color: #668B8B">"</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> Lentils </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">foo:bing</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A default element/type namespace declaration declares a
namespace URI that is associated with unprefixed names of elements
and types. This declaration is recorded as the default
element/type namespace in the static context. A Prolog may contain at most one default
element/type namespace declaration [err:XQST0066]. If the URILiteral in a default element/type
namespace declaration is a zero-length string, the default
element/type namespace is undeclared (set to absentDM30),
and unprefixed names of elements and types are considered to be in
no namespace. The following example illustrates the declaration of
a default namespace for elements and types:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare default element namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/names</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following example illustrates the declaration of a default
function namespace:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare default function namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://www.w3.org/2005/xpath-functions/math</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declaration specifies both the type and the value
of a variable. This declaration causes the type
xs:integer to be associated with variable
$x in the static context, and the value
7 to be associated with variable $x in
the dynamic
context.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">7</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declaration specifies a value but not a type. The
static type of
the variable is inferred from the static type of its value. In this
case, the variable $x has a static type of
xs:decimal, inferred from its value which is 7.5.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">7.5</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declaration specifies a type but not a value. The
keyword external indicates that the value of the
variable will be provided by the external environment. At
evaluation time, if the variable $x in the dynamic context
does not have a value of type xs:integer, a type error is raised.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declaration specifies neither a type nor a value.
It simply declares that the query depends on the existence of a
variable named $x, whose type and value will be
provided by the external environment. During query analysis, the
type of $x is considered to be item()*.
During query evaluation, the dynamic context must include a type and a
value for $x, and its value must be compatible with
its type.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declaration, which might appear in a library
module, declares a variable whose name includes a namespace
prefix:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sasl:username</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:string</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">jonathan@example.com</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This is an example of an external variable declaration that
provides a VarDefaultValue:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$x</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">47</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The syntax for variable declarations allows annotations, but
XQuery 3.0 does not define annotations that apply to variable
declarations. An implementation can provide annotations it needs.
For instance, an implemenation that supports volatile external
variables might allow them to be declared using an annotation:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">%</span><span class="op" style="color: #1549b1">eg:volatile</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">variable</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$time</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:time</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In every module that does not contain a context item
declaration, the effect is as if the declaration</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare context item as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type" style="color: #804080">item</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Declare the type of the context item:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">env</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://www.w3.org/2003/05/soap-envelope</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">declare context item as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">env:Envelope</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Declare a default context item, which is a system log in a
default location. If the system log is in a different location, it
can be specified in the external environment:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare context item as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">sys:log</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">/var/xlogs/sysevent.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">sys:log</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>An implementation can define annotations, in its own namespace,
to support functionality beyond the scope of this specification.
For instance, an implementation that supports external Java
functions might use an annotation to associate a Java function with
an XQuery external function:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">%</span><span class="function" style="color: #6876FF">java:method</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">java.lang.StrictMath.copySign</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">smath:copySign</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$magnitude</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$sign</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">external</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Using a function, prepare a summary of employees that are
located in Denver.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:summary</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$emps</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">employee</span><span class="parenthesis" style="color: #445588">)</span><span class="quantifier" style="color: #1549b1">*</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">dept</span><span class="parenthesis" style="color: #445588">)</span><span class="quantifier" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
   </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:distinct-values</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$emps</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">deptno</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$emps</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">deptno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
      </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">dept</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
         </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">deptno</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$d</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">deptno</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
         </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">headcount</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:count</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">headcount</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
         </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">payroll</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588"> </span><span class="op" style="color: #1549b1">{</span><span class="function" style="color: #6876FF">fn:sum</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">salary</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588"> </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">payroll</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">dept</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="function" style="color: #6876FF">local:summary</span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">acme_corp.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">employee</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">location</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Denver</span><span class="op" style="color: #1549b1">"</span><span class="filter" style="color: #445588">]</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Find the maximum depth of the document named
partlist.xml.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:depth</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">xs:integer</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
   </span><span class="comment" style="color: #804080">(: A node with no children has depth 1 :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
   </span><span class="comment" style="color: #804080">(: Otherwise, add 1 to max depth of children :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
   </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:empty</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="op" style="color: #1549b1">*</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:max</span><span class="parenthesis" style="color: #445588">(</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:depth</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$c</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">+</span><span class="whitespace" style="color: #1549b1"> </span><span class="numeric" style="color: #008080">1</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">

</span><span class="function" style="color: #6876FF">local:depth</span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">partlist.xml</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>If the EQName of an option does not have a prefix, the expanded QName is in
the http://www.w3.org/2012/xquery namespace. In option
declarations in this namespace, unprefixed QNames in the string
literal are also in the http://www.w3.org/2012/xquery
namespace. Thus, in the following example, the option name
require-feature is in the
http://www.w3.org/2012/xquery namespace because it has
no prefix, and is therefore defined in the default namespace for
the names of option declarations. The name "schema-aware" is in the
same namespace because it has no prefix and the option name is in
the http://www.w3.org/2012/xquery namespace.</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">require-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">schema-aware</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This option declaration might be used to specify how comments in
source documents returned by the fn:doc() function
should be handled:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">exq:strip-comments</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">true</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>This option declaration might be used to associate a namespace
used in function names with a Java class:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">smath</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://example.org/MathLibrary</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">exq:java-class</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">smath = java.lang.StrictMath</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declarations require schema validation and schema
import and higher order functions, but prohibit static typing. An
implementation that does not support schema validation, schema
import, or higher order functions must raise an error [err:XQST0120]. An
implementation that supports static typing must disable static
typing or raise an error [err:XQST0131].</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">require-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">schema-aware higher-order-function</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">prohibit-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">static-typing</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
          
</span></pre></div></li><li><p>The following declaration requires a vendor-defined extension
named random-result. A query implementation that does
not recognize this extension may simply ignore this declaration,
since it does not implement the feature.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">rand</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://random.example.com/xquery</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">require-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">rand:random-result</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
          
</span></pre></div></li><li><p>The following declaration prohibits all vendor extensions:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">prohibit-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">all-extensions</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declaration requires all optional features defined
in the XQuery specification:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">require-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">all-optional-features</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following declaration, based on the GIS example from the
previous paragraph, requires gis:geography-terrain,
thus implicitly requiring gis:geography, and prohibits
all other optional features:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare namespace</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">gis</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">http://geography.example.com/gis</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">require-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">gis:geography-terrain</span><span class="op" style="color: #1549b1">"</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">declare</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">option</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">prohibit-feature</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">gis:all-optional-features</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
          
</span></pre></div></li><li><p>[Definition:
Each rule in the grammar defines one symbol, using the
following format:</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">symbol</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">::</span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">expression</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>An XQuery document may contain an encoding
declaration as part of its version declaration:</p><div class="exampleInner"><pre xml:space="preserve"><span class="op" style="color: #1549b1">xquery</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">version</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">1.0</span><span class="op" style="color: #1549b1">"</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">encoding</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">utf-8</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Each rule in the grammar defines one symbol, using the
following format:</p><div class="exampleInner"><pre xml:space="preserve"><span class="qname" style="color: #990000">symbol</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">::</span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">expression</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>A conventional ("inner") join returns information from two or
more related sources, as illustrated by the following example,
which combines information from three documents. The example
generates a "descriptive catalog" derived from the catalog
document, but containing part descriptions instead of part numbers
and supplier names instead of supplier numbers. The new catalog is
ordered alphabetically by part description and secondarily by
supplier name.</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">descriptive-catalog</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> 
     </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">catalog.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">items</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">item</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
         </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">parts.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">parts</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">part</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">partno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">partno</span><span class="filter" style="color: #445588">]</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
         </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">suppliers.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppliers</span><span class="whitespace" style="color: #1549b1">
                  </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">supplier</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">suppno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
     </span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppname</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
        </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">item</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
           </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
           </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
           </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppname</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
           </span><span class="variable" style="color: #333333">$i</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
           </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
        </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">item</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">descriptive-catalog</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following query demonstrates a left outer join. It returns
names of all the suppliers in alphabetic order, including those
that supply no parts. In the result, each supplier element contains
the descriptions of all the parts it supplies, in alphabetic
order.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">suppliers.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppliers</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">supplier</span><span class="whitespace" style="color: #1549b1">
</span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppname</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">supplier</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
      </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> 
        </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppname</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
        </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">catalog.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">items</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">item</span><span class="whitespace" style="color: #1549b1">
                 </span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">suppno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppno</span><span class="filter" style="color: #445588">]</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
            </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">parts.xml</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">parts</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">part</span><span class="whitespace" style="color: #1549b1">
                 </span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">partno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">partno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
        </span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="whitespace" style="color: #1549b1">
        </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="whitespace" style="color: #1549b1"> 
      </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">supplier</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The previous query preserves information about suppliers that
supply no parts. Another type of join, called a full outer
join, might be used to preserve information about both
suppliers that supply no parts and parts that have no supplier. The
result of a full outer join can be structured in any of several
ways. The following query generates a list of supplier
elements, each containing nested part elements for the
parts that it supplies (if any), followed by a list of
part elements for the parts that have no supplier.
This might be thought of as a "supplier-centered" full outer join.
Other forms of outer join queries are also possible.</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">master-list</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
 </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
    </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">suppliers.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppliers</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">supplier</span><span class="whitespace" style="color: #1549b1">
    </span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppname</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
        </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">supplier</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
           </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> 
             </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppname</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
             </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">catalog.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">items</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">item</span><span class="whitespace" style="color: #1549b1">
                     </span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">suppno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">suppno</span><span class="filter" style="color: #445588">]</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
                 </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">parts.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">parts</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">part</span><span class="whitespace" style="color: #1549b1">
                     </span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">partno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">partno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
             </span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="whitespace" style="color: #1549b1">
             </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
                </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">part</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
                   </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
                     </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
                     </span><span class="variable" style="color: #333333">$i</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">price</span><span class="whitespace" style="color: #1549b1">
                   </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
                </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">part</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1"> 
           </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
        </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">supplier</span><span class="z" style="color: #668B8B">&gt;</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> 
    </span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="comment" style="color: #804080">(: parts that have no supplier :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
    </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">orphan-parts</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
       </span><span class="op" style="color: #1549b1">{</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1"> </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">parts.xml</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">parts</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">part</span><span class="whitespace" style="color: #1549b1">
         </span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:empty</span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">catalog.xml</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">items</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">item</span><span class="whitespace" style="color: #1549b1">
               </span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">partno</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">partno</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
         </span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="whitespace" style="color: #1549b1">
         </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">description</span><span class="whitespace" style="color: #1549b1"> 
       </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
    </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">orphan-parts</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
 </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">master-list</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following query returns all the action elements
that occur between the first and second incision
elements inside the first procedure. The original document order
among these nodes is preserved in the result of the query.</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$proc</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">report</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">procedure</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">1</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">action</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">incision</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">1</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">incision</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">2</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>For some queries, it may be helpful to declare a function that
can test whether a node precedes another node without being its
ancestor. The following function returns true if its
first operand precedes its second operand but is not an ancestor of
its second operand; otherwise it returns false:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:precedes</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
   </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">boolean</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
      </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1">
        </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1">
      </span><span class="function" style="color: #6876FF">fn:empty</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="step" style="color: #1549b1">//</span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">intersect</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
   </span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Similarly, a local:follows function could be
written:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:follows</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
   </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="type-name" style="color: #990000">boolean</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
      </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$b</span><span class="whitespace" style="color: #1549b1">
        </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1">
      </span><span class="function" style="color: #6876FF">fn:empty</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$b</span><span class="step" style="color: #1549b1">//</span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">intersect</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
   </span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Using the local:precedes function, we can write a
query that finds instrument elements between the first
two incisions, excluding from the query result any
instrument that is a descendant of the first
incision:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$proc</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">report</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">procedure</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">1</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">instrument</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:precedes</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">incision</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">1</span><span class="filter" style="color: #445588">]</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:precedes</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$i</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">incision</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">2</span><span class="filter" style="color: #445588">]</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The following query reports incisions for which no prior
anesthesia was recorded in the surgical report. Since an
anesthesia is never part of an incision,
we can use &lt;&lt; instead of the less-efficient
local:precedes function:</p><div class="exampleInner"><pre xml:space="preserve"><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$proc</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">report</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">procedure</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">where</span><span class="whitespace" style="color: #1549b1"> </span><span class="higher" style="color: #1549b1">some</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">incision</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">satisfies</span><span class="whitespace" style="color: #1549b1">
         </span><span class="function" style="color: #6876FF">fn:empty</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$proc</span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">anesthesia</span><span class="filter" style="color: #445588">[</span><span class="context" style="color: #008080">.</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$i</span><span class="filter" style="color: #445588">]</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$proc</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>In some documents, particular sequences of elements may indicate
a logical hierarchy. This is most commonly true of HTML. The
following query returns the introduction of an XHTML document,
wrapping it in a div element. In this example, we
assume that an h2 element containing the text
"Introduction" marks the beginning of the introduction, and the
introduction continues until the next h2 or
h1 element, or the end of the document, whichever
comes first.</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">let</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$intro</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="qname" style="color: #990000">h2</span><span class="filter" style="color: #445588">[</span><span class="node-type" style="color: #804080">text</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">=</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">Introduction</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="filter" style="color: #445588">]</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$next-h</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">:=</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">h1</span><span class="op" style="color: #1549b1">|</span><span class="qname" style="color: #990000">h2</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="context" style="color: #008080">.</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$intro</span><span class="filter" style="color: #445588">]</span><span class="filter" style="color: #445588">[</span><span class="numeric" style="color: #008080">1</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
</span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">div</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
     </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
       </span><span class="variable" style="color: #333333">$intro</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
       </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:empty</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$next-h</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
         </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="context" style="color: #008080">.</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$intro</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
         </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="step" style="color: #1549b1">//</span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="filter" style="color: #445588">[</span><span class="context" style="color: #008080">.</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&gt;&gt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$intro</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="context" style="color: #008080">.</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">&lt;&lt;</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$next-h</span><span class="filter" style="color: #445588">]</span><span class="whitespace" style="color: #1549b1">
     </span><span class="op" style="color: #1549b1">}</span><span class="txt" style="color: #445588">
   </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">div</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>Suppose that we need to compute a table of contents for a given
document by scanning over the document, retaining only elements
named section or title, and preserving
the hierarchical relationships among these elements. For each
section, we retain subelements named
section or title; but for each
title, we retain the full content of the element. This
might be accomplished by the following recursive function:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:sections-and-titles</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$n</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="quantifier" style="color: #1549b1">?</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1">
   </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:local-name</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$n</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">section</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1">
          </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:local-name</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$n</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
          </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$n</span><span class="step" style="color: #1549b1">/</span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:sections-and-titles</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$c</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:local-name</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$n</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">=</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">title</span><span class="op" style="color: #1549b1">"</span><span class="open" style="color: #1549b1"></span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$n</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
   </span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The "skeleton" of a given document, containing only its sections
and titles, can then be obtained by invoking the
local:sections-and-titles function on the root node of
the document, as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">local:sections-and-titles</span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">cookbook.xml</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>As another example of a recursive transformation, suppose that
we wish to scan over a document, transforming every attribute named
color to an element named color, and
every element named size to an attribute named
size. This can be accomplished by the following
recursive function (note that the element constructor in case
$e generates attributes before child elements):</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">declare function</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:swizzle</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$n</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
  </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> 
   </span><span class="axis" style="color: #008080">typeswitch</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$n</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
     </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$a</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">attribute</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">color</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
       </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">color</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:string</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$a</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> 
     </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$es</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="qname" style="color: #990000">size</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
       </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">attribute</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">size</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:string</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$es</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> 
     </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">element</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
       </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">element</span><span class="whitespace" style="color: #1549b1"> 
         </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:local-name</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> 
         </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> 
             </span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">except</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">color</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">     </span><span class="comment" style="color: #804080">(: attr -&gt; attr :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
              </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">size</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">                    </span><span class="comment" style="color: #804080">(: elem -&gt; attr :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
              </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="axis" style="color: #008080">@</span><span class="qname" style="color: #990000">color</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">                  </span><span class="comment" style="color: #804080">(: attr -&gt; elem :)</span><span class="whitespace" style="color: #1549b1">
              </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="node-type" style="color: #804080">node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">except</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$e</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">size</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">  </span><span class="comment" style="color: #804080">(: elem -&gt; elem :)</span><span class="open" style="color: #1549b1"></span><span class="whitespace" style="color: #1549b1">
           </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:swizzle</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$c</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1">
     </span><span class="axis" style="color: #008080">case</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">as</span><span class="whitespace" style="color: #1549b1"> </span><span class="node-type" style="color: #804080">document-node</span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> 
       </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="axis" style="color: #008080">document</span><span class="whitespace" style="color: #1549b1"> 
         </span><span class="op" style="color: #1549b1">{</span><span class="whitespace" style="color: #1549b1"> </span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$d</span><span class="step" style="color: #1549b1">/</span><span class="op" style="color: #1549b1">*</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">local:swizzle</span><span class="parenthesis" style="color: #445588">(</span><span class="variable" style="color: #333333">$c</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">}</span><span class="whitespace" style="color: #1549b1"> 
     </span><span class="axis" style="color: #008080">default</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$n</span><span class="whitespace" style="color: #1549b1"> 
  </span><span class="op" style="color: #1549b1">}</span><span class="op" style="color: #1549b1">;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>The transformation can be applied to a whole document by
invoking the local:swizzle function on the root node
of the document, as follows:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="function" style="color: #6876FF">local:swizzle</span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:doc</span><span class="parenthesis" style="color: #445588">(</span><span class="op" style="color: #1549b1">"</span><span class="literal" style="color: #dd1144">plans.xml</span><span class="op" style="color: #1549b1">"</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>It is sometimes necessary to search through a set of data to
find all the distinct combinations of a given list of properties.
For example, an input data set might consist of a large set of
order elements, each of which has the same basic
structure, as illustrated by the following example:</p><div class="exampleInner"><pre xml:space="preserve"><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">order</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">2003-10-15</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">date</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Dress Shirt</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">size</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">M</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">size</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">color</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Blue</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">color</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">supplier</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">Fashion Trends</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">supplier</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
   </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">quantity</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">50</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">quantity</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">order</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li><li><p>From this data set, a user might wish to find all the distinct
combinations of product, size, and
color that occur together in an order.
The following query returns this list, enclosing each distinct
combination in a new element named option:</p><div class="exampleInner"><pre xml:space="preserve"><span class="open" style="color: #1549b1"></span><span class="higher" style="color: #1549b1">for</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:distinct-values</span><span class="parenthesis" style="color: #445588">(</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">orders</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">order</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">product</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:distinct-values</span><span class="parenthesis" style="color: #445588">(</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">orders</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">order</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">size</span><span class="parenthesis" style="color: #445588">)</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1">
    </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">in</span><span class="whitespace" style="color: #1549b1"> </span><span class="function" style="color: #6876FF">fn:distinct-values</span><span class="parenthesis" style="color: #445588">(</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">orders</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">order</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">color</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
    </span><span class="whitespace" style="color: #1549b1">order by</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="op" style="color: #1549b1">,</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="whitespace" style="color: #1549b1">
    </span><span class="op" style="color: #1549b1">return</span><span class="whitespace" style="color: #1549b1">
       </span><span class="if" style="color: #1549b1">if</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="function" style="color: #6876FF">fn:exists</span><span class="parenthesis" style="color: #445588">(</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">orders</span><span class="step" style="color: #1549b1">/</span><span class="qname" style="color: #990000">order</span><span class="filter" style="color: #445588">[</span><span class="qname" style="color: #990000">product</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$p</span><span class="whitespace" style="color: #1549b1">
                </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">size</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$s</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">and</span><span class="whitespace" style="color: #1549b1"> </span><span class="qname" style="color: #990000">color</span><span class="whitespace" style="color: #1549b1"> </span><span class="op" style="color: #1549b1">eq</span><span class="whitespace" style="color: #1549b1"> </span><span class="variable" style="color: #333333">$c</span><span class="filter" style="color: #445588">]</span><span class="parenthesis" style="color: #445588">)</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
       </span><span class="op" style="color: #1549b1">then</span><span class="whitespace" style="color: #1549b1">
          </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">option</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
             </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$p</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">product</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
             </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">size</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$s</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">size</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
             </span><span class="es" style="color: #668B8B">&lt;</span><span class="en" style="color: #990000">color</span><span class="z" style="color: #668B8B">&gt;</span><span class="op" style="color: #1549b1">{</span><span class="variable" style="color: #333333">$c</span><span class="op" style="color: #1549b1">}</span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">color</span><span class="z" style="color: #668B8B">&gt;</span><span class="txt" style="color: #445588">
          </span><span class="sc" style="color: #668B8B">&lt;/</span><span class="cl" style="color: #990000">option</span><span class="z" style="color: #668B8B">&gt;</span><span class="whitespace" style="color: #1549b1">
       </span><span class="op" style="color: #1549b1">else</span><span class="whitespace" style="color: #1549b1"> </span><span class="parenthesis" style="color: #445588">(</span><span class="parenthesis" style="color: #445588">)</span><span class="whitespace" style="color: #1549b1">
</span></pre></div></li></body></ol><h1 xmlns:xs="http://www.w3.org/2001/XMLSchema"> </h1><hr xmlns:xs="http://www.w3.org/2001/XMLSchema" /><div xmlns:xs="http://www.w3.org/2001/XMLSchema" class="div2"><a name="Copyright-notice-document"></a><hr width="50" align="center" title="Area separator" /><h2 id="Copyright-notice-document-h2" class="div2">W3C<sup>®</sup> Document Copyright Notice and License</h2><p><b>Note:</b> 
	This section is a copy of the W3C<sup>®</sup> Document
	Notice and License and could be found at <a class="normative" href="http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231">http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231</a>.
      </p><p><b>
      Copyright © 2004 <a class="normative" href="http://www.w3.org/">World Wide Web Consortium</a>, (<a class="normative" href="http://www.lcs.mit.edu/">Massachusetts Institute of
      Technology</a>, <a class="normative" href="http://www.ercim.org/">European
      Research Consortium for Informatics and Mathematics</a>, <a class="normative" href="http://www.keio.ac.jp/">Keio University</a>). All Rights
      Reserved.
    </b></p><p><b>      
      http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231
    </b></p><p>
      Public documents on the W3C site are provided by the copyright
      holders under the following license. By using and/or copying this
      document, or the W3C document from which this statement is linked,
      you (the licensee) agree that you have read, understood, and will
      comply with the following terms and conditions:</p><p>
      Permission to copy, and distribute the contents of this document,
      or the W3C document from which this statement is linked, in any
      medium for any purpose and without fee or royalty is hereby
      granted, provided that you include the following on
      <em>ALL</em> copies of the document, or portions thereof, that
      you use:</p><ol><li>

	  A link or URL to the original W3C document.
	</li><li>

	  The pre-existing copyright notice of the original author, or
	  if it doesn't exist, a notice (hypertext is preferred, but a
	  textual representation is permitted) of the form:
	  "Copyright © [$date-of-document] <a class="normative" href="http://www.w3.org/">World Wide Web Consortium</a>,
	  (<a class="normative" href="http://www.lcs.mit.edu/">Massachusetts Institute
	  of Technology</a>, <a class="normative" href="http://www.ercim.org/">European Research Consortium for
	  Informatics and Mathematics</a>, <a class="normative" href="http://www.keio.ac.jp/">Keio University</a>). All
	  Rights Reserved.  <a class="normative" href="http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231">http://www.w3.org/Consortium/Legal/2002/copyright-documents-20021231</a>"
	</li><li><em>If it exists</em>, the STATUS of the W3C document.
	</li></ol><p>
      When space permits, inclusion of the full text of this <b>NOTICE</b> should be provided. We request that
      authorship attribution be provided in any software, documents, or other
      items or products that you create pursuant to the implementation of the
      contents of this document, or any portion thereof.</p><p>
      No right to create modifications or derivatives of W3C documents is
      granted pursuant to this license. However, if additional requirements
      (documented in the <a class="normative" href="http://www.w3.org/Consortium/Legal/IPR-FAQ">Copyright
      FAQ</a>) are satisfied, the right to create modifications or
      derivatives is sometimes granted by the W3C to individuals complying with
      those requirements.</p><p>
      THIS DOCUMENT IS PROVIDED "AS IS," AND COPYRIGHT HOLDERS MAKE
      NO REPRESENTATIONS OR WARRANTIES, EXPRESS OR IMPLIED, INCLUDING, BUT NOT
      LIMITED TO, WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
      PURPOSE, NON-INFRINGEMENT, OR TITLE; THAT THE CONTENTS OF THE DOCUMENT
      ARE SUITABLE FOR ANY PURPOSE; NOR THAT THE IMPLEMENTATION OF SUCH
      CONTENTS WILL NOT INFRINGE ANY THIRD PARTY PATENTS, COPYRIGHTS,
      TRADEMARKS OR OTHER RIGHTS.</p><p>
      COPYRIGHT HOLDERS WILL NOT BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL OR
      CONSEQUENTIAL DAMAGES ARISING OUT OF ANY USE OF THE DOCUMENT OR THE
      PERFORMANCE OR IMPLEMENTATION OF THE CONTENTS THEREOF.</p><p>
      The name and trademarks of copyright holders may NOT be used in
      advertising or publicity pertaining to this document or its contents
      without specific, written prior permission. Title to copyright in this
      document will at all times remain with copyright holders.</p></div>
</html>